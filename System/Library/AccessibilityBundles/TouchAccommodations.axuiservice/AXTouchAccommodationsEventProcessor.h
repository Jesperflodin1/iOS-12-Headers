//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <AccessibilityUtilities/AXEventProcessor.h>

@class AXDispatchTimer, AXEventRepresentation, NSArray, NSMutableArray, NSMutableSet, NSObject;
@protocol AXTouchAccommodationsEventProcessorDelegate, OS_dispatch_queue;

@interface AXTouchAccommodationsEventProcessor : AXEventProcessor
{
    NSObject<OS_dispatch_queue> *_hidDispatchQueue;
    AXEventRepresentation *_initialTouchEvent;
    AXEventRepresentation *_finalTouchEvent;
    AXEventRepresentation *_timerEndedAtEvent;
    AXEventRepresentation *_event;
    AXDispatchTimer *_tapTimeoutTimer;
    AXDispatchTimer *_holdDurationTimer;
    AXDispatchTimer *_ignoreRepeatTimer;
    AXDispatchTimer *_updateSetMaintenanceTimer;
    NSMutableSet *_sentGenerationsAnticipatingUpdate;
    struct os_unfair_lock_s _generationsLock;
    long long _state;
    _Bool _touchEventAfterIgnoreRepeatTimerBegan;
    _Bool _sleepTimerDisabled;
    double _lastEventTime;
    double _firstHoldDurationCancelTime;
    int _holdDurationCancelCount;
    NSArray *_pointOfReferencePaths;
    NSMutableArray *_eventsToReplayForSwipeGestureOnBypass;
    NSObject<OS_dispatch_queue> *_eventsToReplayLock;
    _Bool _shouldSendFakeTouchDownIfNeeded;
    id <AXTouchAccommodationsEventProcessorDelegate> _delegate;
}

@property(nonatomic) __weak id <AXTouchAccommodationsEventProcessorDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool shouldSendFakeTouchDownIfNeeded; // @synthesize shouldSendFakeTouchDownIfNeeded=_shouldSendFakeTouchDownIfNeeded;
- (void).cxx_destruct;
- (double)_distanceBetweenPath:(id)arg1 otherPath:(id)arg2;
- (void)_notifyUserEventOccurred;
- (void)disableSleepTimer:(_Bool)arg1;
- (_Bool)_handleEvent:(id)arg1;
- (void)_clearEventsToReplayForSwipeGestureBypass;
- (_Bool)_bypassForSwipeGestureDueToEvent:(id)arg1;
- (double)_minimumDistanceForSwipeGestureBypass;
- (id)_pathAtInitialTouchForPathIndex:(unsigned long long)arg1;
- (_Bool)_shouldAllowBypassForSwipeGestures;
- (_Bool)_shouldImmediatelySendEvent:(id)arg1;
- (void)_endHoldDurationAndAllowTapAssistance:(_Bool)arg1;
- (void)_handleHoldDurationAfterTimerBegan;
- (void)_updateTouchAccommodationsBasedOnTapActivation;
- (void)_handleTapActivationAfterTimerBegan;
- (id)_pathAtPreviousPointForPathIndex:(unsigned long long)arg1;
- (void)_handleTapActivationMethodActivateOnRelease;
- (void)_handleTapActivationMethodActivateOnTouch;
- (_Bool)_isLiftEvent:(unsigned int)arg1;
- (void)_sendFakeEvent:(id)arg1 forTheFirstTime:(_Bool)arg2;
- (void)_sendHIDEventUnconditionally:(id)arg1 shouldUseOriginalTime:(_Bool)arg2;
- (void)_willSendEvent:(id)arg1;
- (void)_sendFakeEventAfterTimerEnded:(id)arg1;
- (_Bool)_handleTimerEvents;
- (void)_handleEventAfterTimerEnd;
- (void)_initiateIgnoreRepeatTimer;
- (void)_initiateTapTimeoutTimer;
- (void)_initiateHoldDurationTimer;
- (void)_setTimerState:(long long)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithHIDTapIdentifier:(id)arg1 HIDEventTapPriority:(int)arg2 systemEventTapIdentifier:(id)arg3 systemEventTapPriority:(int)arg4;

@end

