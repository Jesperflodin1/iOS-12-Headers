//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSBundle, NSData, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString, NSURL;
@protocol OS_dispatch_queue;

@interface AppleSpell : NSObject
{
    NSObject<OS_dispatch_queue> *_serialQueue;
    void *_proofReaderConnection;
    struct __CFDictionary *_databaseConnections;
    NSMutableDictionary *_languageModelDicts;
    NSMutableDictionary *_lexiconDict;
    NSMutableDictionary *_phraseLexiconDict;
    struct __CFDictionary *_emojiPredictorDict;
    double _referenceResetTimer;
    double _lastWriteLanguageModels;
    double _lastDecayLanguageModels;
    double _lastReleaseLanguageModels;
    double _lastMaintainLanguageModels;
    unsigned long long _languageModelWordCount;
    NSMutableDictionary *_bindicts;
    NSMutableArray *_globalBindictDataArray;
    NSMutableArray *_globalNameBindictDataArray;
    NSMutableArray *_globalNegBindictDataArray;
    NSMutableDictionary *_autocorrections;
    NSMutableDictionary *_capitalizations;
    NSString *_lastLanguage;
    NSString *_lastCandidateLanguage;
    NSArray *_userPreferredLanguages;
    NSArray *_userPreferredLatinLanguages;
    NSArray *_userTopLanguages;
    NSMutableDictionary *_learnedResponses;
    NSMutableDictionary *_probationaryLearnedResponses;
    NSMutableDictionary *_probationaryLearnedResponseTimes;
    NSMutableArray *_diagnosticInfo;
    NSMutableSet *_foundNames;
    double _lastFindNames;
    NSMutableSet *_foundShortcuts;
    NSMutableDictionary *_foundShortcutsDictionary;
    NSMutableDictionary *_lastSampleCollected;
    unsigned long long _numberOfSamplesCollected;
    double _lastSampleCollection;
    NSMutableArray *_retainedSamples;
    NSMutableDictionary *_lastSampleRecorded;
    double _lastSampleRecording;
    NSBundle *_dataBundle;
    NSMutableArray *_altBundleURLs;
    NSObject<OS_dispatch_queue> *_assetDataBundleSerialQueue;
    NSMutableDictionary *_assetDataBundleURLDictionary;
    NSMutableSet *_updatedDataBundleLanguages;
    NSURL *_updateBundleURL;
    NSMutableDictionary *_languageCounts;
    double _lastLanguageCounts;
    NSMutableDictionary *_userAdaptationDictionary;
    NSData *_lastKeyEventArray;
    unsigned long long *_keyboardHistogram;
    double _lastKeyboardHistogramRecording;
    NSMutableArray *_requestedAssets;
    NSMutableArray *_receivedAssets;
    double _lastAssetRequest;
    NSMutableArray *_recordedCorrections;
    NSMutableArray *_recordedTICorrections;
    _Bool _userPrefersUncheckedLatinLanguage;
    _Bool _userPrefersUncheckedCyrillicLanguage;
    _Bool _hasUpdatedDataBundleLanguages;
    _Bool _shouldClearFoundNames;
    _Bool _automaticTextCompletionCollapsed;
    _Bool _automaticTextCompletionEnabled;
}

- (_Bool)spellServer:(id)arg1 canChangeCaseOfFirstLetterInString:(id)arg2 toUpperCase:(_Bool)arg3 language:(id)arg4;
- (id)spellServer:(id)arg1 correctionsForPinyinInputString:(id)arg2 language:(id)arg3;
- (id)spellServer:(id)arg1 prefixesForPinyinInputString:(id)arg2 language:(id)arg3;
- (id)spellServer:(id)arg1 extendedAlternativesForPinyinInputString:(id)arg2 language:(id)arg3;
- (id)spellServer:(id)arg1 alternativesForPinyinInputString:(id)arg2 language:(id)arg3;
- (id)spellServer:(id)arg1 stringForInputString:(id)arg2 language:(id)arg3;
- (id)spellServer:(id)arg1 suggestWordWithLengthInRange:(struct _NSRange)arg2 language:(id)arg3;
- (id)spellServer:(id)arg1 suggestNextLetterDictionariesForPartialWordRange:(struct _NSRange)arg2 inString:(id)arg3 language:(id)arg4;
- (id)spellServer:(id)arg1 suggestNextLetterDictionariesForPartialWordRange:(struct _NSRange)arg2 inString:(id)arg3 language:(id)arg4 options:(id)arg5;
- (id)spellServer:(id)arg1 suggestCompletionDictionariesForPartialWordRange:(struct _NSRange)arg2 inString:(id)arg3 language:(id)arg4;
- (id)spellServer:(id)arg1 suggestCompletionDictionariesForPartialWordRange:(struct _NSRange)arg2 inString:(id)arg3 language:(id)arg4 options:(id)arg5;
- (id)spellServer:(id)arg1 suggestCompletionsForPartialWordRange:(struct _NSRange)arg2 inString:(id)arg3 language:(id)arg4;
- (id)spellServer:(id)arg1 suggestCompletionsForPartialWordRange:(struct _NSRange)arg2 inString:(id)arg3 language:(id)arg4 options:(id)arg5;
- (id)spellServer:(id)arg1 suggestGuessesForWord:(id)arg2 inLanguage:(id)arg3;
- (id)spellServer:(id)arg1 suggestGuessesForWordRange:(struct _NSRange)arg2 inString:(id)arg3 language:(id)arg4;
- (id)spellServer:(id)arg1 suggestGuessesForWordRange:(struct _NSRange)arg2 inString:(id)arg3 language:(id)arg4 options:(id)arg5;
- (id)spellServer:(id)arg1 generateCandidatesForSelectedRange:(struct _NSRange)arg2 inString:(id)arg3 offset:(unsigned long long)arg4 types:(unsigned long long)arg5 options:(id)arg6 orthography:(id)arg7;
- (id)spellServer:(id)arg1 checkString:(id)arg2 offset:(unsigned long long)arg3 types:(unsigned long long)arg4 options:(id)arg5 orthography:(id)arg6 wordCount:(long long *)arg7;
- (struct _NSRange)spellServer:(id)arg1 findMisspelledWordInString:(id)arg2 languages:(id)arg3 wordCount:(long long *)arg4 countOnly:(_Bool)arg5 correction:(id *)arg6;
- (struct _NSRange)spellServer:(id)arg1 findMisspelledWordInString:(id)arg2 language:(id)arg3 wordCount:(long long *)arg4 countOnly:(_Bool)arg5 correction:(id *)arg6;
- (struct _NSRange)spellServer:(id)arg1 findMisspelledWordInString:(id)arg2 language:(id)arg3 wordCount:(long long *)arg4 countOnly:(_Bool)arg5;
- (struct _NSRange)spellServer:(id)arg1 checkGrammarInString:(id)arg2 language:(id)arg3 details:(id *)arg4;
- (struct _NSRange)spellServer:(id)arg1 checkGrammarInString:(id)arg2 range:(struct _NSRange)arg3 language:(id)arg4 orthography:(id)arg5 mutableResults:(id)arg6 offset:(unsigned long long)arg7 details:(id *)arg8;
- (_Bool)_checkGrammarInString:(id)arg1 range:(struct _NSRange)arg2 language:(id)arg3 connection:(struct _PR_DB_IO *)arg4 sender:(id)arg5 bufIO:(struct _PR_BUF_IO *)arg6 errorRange:(struct _NSRange *)arg7 details:(id *)arg8;
- (id)linguisticTaggerForLanguage:(id)arg1 string:(id)arg2 range:(struct _NSRange)arg3 taggerIndex:(unsigned long long *)arg4;
- (void)setUpdateBundleURL:(id)arg1;
- (void)addAlternateDataBundleURL:(id)arg1;
- (void)clearCaches;
- (id)capitalizationDictionaryForLanguage:(id)arg1;
- (id)autocorrectionDictionaryForLanguage:(id)arg1;
- (id)globalNegativeBindictDataArray;
- (id)globalNameBindictDataArray;
- (id)globalBindictDataArray;
- (id)bindictDataForLanguage:(id)arg1 index:(unsigned long long)arg2;
- (id)bindictDataArrayForLanguage:(id)arg1 index:(unsigned long long)arg2;
- (void)releaseDatabaseConnections;
- (struct _PR_DB_IO *)databaseConnectionForLanguage:(id)arg1;
- (id)databasePathForLanguage:(id)arg1;
- (unsigned int)encodingForLanguage:(id)arg1;
- (id)fallbackLocalizationForLanguage:(id)arg1;
- (id)localizationForLanguage:(id)arg1;
- (id)localizationsForLanguage:(id)arg1;
- (void)resetDataBundlesForLanguage:(id)arg1;
- (id)dataBundlesForLanguage:(id)arg1;
- (id)dataBundle;
- (id)init;
- (void)_findAlternateDataBundleURLs;
- (void)resetTimer;
- (void)timeout:(id)arg1;
- (id)assetDataBundleURLsForLanguage:(id)arg1;
- (float)dynamicScoreForWord:(id)arg1 language:(id)arg2 appIdentifier:(id)arg3;
- (float)dynamicScoreForWord:(id)arg1 languageModel:(id)arg2 language:(id)arg3;
- (_Bool)_useAlternateLanguageForRange:(struct _NSRange)arg1 ofString:(id)arg2 language:(id)arg3 tagger:(id)arg4 taggerIndex:(unsigned long long)arg5 alternateLanguage:(id)arg6 alternateTagger:(id)arg7 alternateTaggerIndex:(unsigned long long)arg8 appIdentifier:(id)arg9;
- (id)_rankedCandidatesForCandidateList:(id)arg1 language:(id)arg2 tagger:(id)arg3 taggerIndex:(unsigned long long)arg4 appIdentifier:(id)arg5;
- (id)_rankedCandidatesForRange:(struct _NSRange)arg1 candidates:(id)arg2 language:(id)arg3 tagger:(id)arg4 taggerIndex:(unsigned long long)arg5 appIdentifier:(id)arg6 scoreDictionary:(id)arg7;
- (_Bool)_getUnigramProbabilityForString:(id)arg1 languageModel:(id)arg2 probability:(double *)arg3;
- (_Bool)_addLanguageModelCompletionsForPartialWordRange:(struct _NSRange)arg1 language:(id)arg2 connection:(struct _PR_DB_IO *)arg3 sender:(id)arg4 encoding:(unsigned int)arg5 tagger:(id)arg6 taggerIndex:(unsigned long long)arg7 appIdentifier:(id)arg8 waitForLanguageModel:(_Bool)arg9 candidates:(id)arg10;
- (id)languageModelCompletionsForPartialWord:(id)arg1 language:(id)arg2 sender:(id)arg3 appIdentifier:(id)arg4;
- (void)_addLanguageModelCompletionsForPrefix:(id)arg1 languageModel:(id)arg2 language:(id)arg3 connection:(struct _PR_DB_IO *)arg4 sender:(id)arg5 encoding:(unsigned int)arg6 capitalized:(_Bool)arg7 candidates:(id)arg8;
- (_Bool)useUnigramProbabilityForLanguage:(id)arg1;
- (_Bool)useLanguageModelForLanguage:(id)arg1 tagger:(id)arg2 taggerIndex:(unsigned long long)arg3 appIdentifier:(id)arg4;
- (id)languageModelForLanguage:(id)arg1 appIdentifier:(id)arg2 waitForResult:(_Bool)arg3;
- (id)_loadLanguageModelForLanguage:(id)arg1 localization:(id)arg2 appIdentifier:(id)arg3 onQueue:(id)arg4;
- (void)_readLanguageModelParametersFromDictionary:(id)arg1;
- (void)_readLanguageModelParametersFromDefaults;
- (id)languageModelFallbackLocalizationForLanguage:(id)arg1;
- (id)languageModelLocalizationForLanguage:(id)arg1;
- (unsigned long long)_contextLengthForRange:(struct _NSRange)arg1 language:(id)arg2 tagger:(id)arg3 taggerIndex:(unsigned long long)arg4 languageModel:(id)arg5 maxContextLength:(unsigned long long)arg6 context:(unsigned int *)arg7 cleanOffset:(unsigned long long *)arg8;
- (_Bool)_shouldBlockWord:(id)arg1 language:(id)arg2 encoding:(unsigned int)arg3;
- (id)_stringForTokenIDs:(const unsigned int *)arg1 tokenCount:(unsigned long long)arg2 languageModel:(id)arg3 language:(id)arg4 connection:(struct _PR_DB_IO *)arg5 sender:(id)arg6 encoding:(unsigned int)arg7 prefix:(id)arg8 capitalized:(_Bool)arg9;
- (unsigned int)_tokenIDForString:(id)arg1 languageModel:(id)arg2 language:(id)arg3 terminatorTokenID:(unsigned int)arg4;
- (unsigned int)_tokenIDForString:(id)arg1 languageModel:(id)arg2 language:(id)arg3 createIfAbsent:(_Bool)arg4 terminatorTokenID:(unsigned int)arg5;
- (id)_standardizedLanguageModelStringForString:(id)arg1;
- (id)phraseMatching:(id)arg1 inLexiconForLanguage:(id)arg2;
- (unsigned int)metaFlagsForWord:(id)arg1 inLexiconForLanguage:(id)arg2;
- (_Bool)validateUntilLearnedWord:(id)arg1 inLexiconForLanguage:(id)arg2;
- (_Bool)validateNoCapAbbreviation:(id)arg1 inLexiconForLanguage:(id)arg2;
- (_Bool)validateVariantWord:(id)arg1 inLexiconForLanguage:(id)arg2;
- (_Bool)validateWord:(id)arg1 inLexiconForLanguage:(id)arg2;
- (_Bool)validateWord:(id)arg1 inLexiconForLanguage:(id)arg2 requiredMetaFlags:(unsigned int)arg3 alternativeRequiredMetaFlags:(unsigned int)arg4 prohibitedMetaFlags:(unsigned int)arg5 caseInsensitive:(_Bool)arg6;
- (void)updateLexiconsForLanguage:(id)arg1;
- (id)_phraseLexiconsForLanguage:(id)arg1;
- (id)lexiconForLanguage:(id)arg1;
- (id)_lexiconsForLanguage:(id)arg1;
- (id)_lexiconsForLanguage:(id)arg1 waitForResult:(_Bool)arg2;
- (id)_loadLexiconsForLanguage:(id)arg1 localization:(id)arg2 onQueue:(id)arg3;
- (id)backgroundLoadingQueue;
- (id)_stemSuffixConverterPathForLanguage:(id)arg1;
- (id)_phraseLexiconPathForLanguage:(id)arg1;
- (id)_lexiconPathForLanguage:(id)arg1 type:(id)arg2;
- (id)_lexiconPathForLocalization:(id)arg1 type:(id)arg2;
- (void)enumerateAssetDataItemsForLocale:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (unsigned long long)numberOfTurkishSuffixPointsInBuffer:(char *)arg1 length:(unsigned long long)arg2 maxSuffixPoints:(unsigned long long)arg3 suffixPoints:(CDStruct_b54abf8e *)arg4;
- (_Bool)spellServer:(id)arg1 _canChangeCaseOfFirstLetterInString:(id)arg2 toUpperCase:(_Bool)arg3 language:(id)arg4;
- (struct _NSRange)spellServer:(id)arg1 findMisspelledWordInString:(id)arg2 range:(struct _NSRange)arg3 languages:(id)arg4 topLanguages:(id)arg5 orthography:(id)arg6 checkOrthography:(_Bool)arg7 mutableResults:(id)arg8 offset:(unsigned long long)arg9 autocorrect:(_Bool)arg10 onlyAtInsertionPoint:(_Bool)arg11 initialCapitalize:(_Bool)arg12 autocapitalize:(_Bool)arg13 keyEventArray:(id)arg14 appIdentifier:(id)arg15 selectedRangeValue:(id)arg16 wordCount:(long long *)arg17 countOnly:(_Bool)arg18 correction:(id *)arg19;
- (id)_orthographyByModifyingOrthography:(id)arg1 withLatinLanguage:(id)arg2;
- (_Bool)validateWordBuffer:(char *)arg1 length:(unsigned long long)arg2 language:(id)arg3 connection:(struct _PR_DB_IO *)arg4 sender:(id)arg5 checkBase:(_Bool)arg6 checkDict:(_Bool)arg7 checkNames:(_Bool)arg8 checkHyphens:(_Bool)arg9 checkIntercaps:(_Bool)arg10 checkOptions:(_Bool)arg11 depth:(unsigned long long)arg12;
- (_Bool)validateWordBuffer:(char *)arg1 length:(unsigned long long)arg2 language:(id)arg3 connection:(struct _PR_DB_IO *)arg4 sender:(id)arg5 checkBase:(_Bool)arg6 checkDict:(_Bool)arg7 checkTemp:(_Bool)arg8 checkNames:(_Bool)arg9 checkHyphens:(_Bool)arg10 checkIntercaps:(_Bool)arg11 checkOptions:(_Bool)arg12 depth:(unsigned long long)arg13;
- (_Bool)validateWordBuffer:(char *)arg1 length:(unsigned long long)arg2 language:(id)arg3 connection:(struct _PR_DB_IO *)arg4 sender:(id)arg5 checkBase:(_Bool)arg6 checkDict:(_Bool)arg7 checkTemp:(_Bool)arg8 checkUser:(_Bool)arg9 checkNames:(_Bool)arg10 checkHyphens:(_Bool)arg11 checkIntercaps:(_Bool)arg12 checkOptions:(_Bool)arg13 depth:(unsigned long long)arg14;
- (_Bool)validateWordBuffer:(char *)arg1 length:(unsigned long long)arg2 language:(id)arg3 connection:(struct _PR_DB_IO *)arg4 sender:(id)arg5 checkBase:(_Bool)arg6 checkDict:(_Bool)arg7 checkTemp:(_Bool)arg8 checkUser:(_Bool)arg9 checkNames:(_Bool)arg10 checkHyphens:(_Bool)arg11 checkIntercaps:(_Bool)arg12 checkOptions:(_Bool)arg13 forCorrection:(_Bool)arg14 depth:(unsigned long long)arg15;
- (_Bool)checkSpecialPrefixesForWordBuffer:(char *)arg1 length:(unsigned long long)arg2;
- (_Bool)validateAbbreviationOrNumberWordBuffer:(char *)arg1 length:(unsigned long long)arg2 language:(id)arg3 encoding:(unsigned int)arg4 connection:(struct _PR_DB_IO *)arg5 sender:(id)arg6;
- (_Bool)validateWordPrefixBuffer:(char *)arg1 length:(unsigned long long)arg2 connection:(struct _PR_DB_IO *)arg3;
- (_Bool)validateWordBuffer:(char *)arg1 length:(unsigned long long)arg2 connection:(struct _PR_DB_IO *)arg3;
- (_Bool)checkNoCapAbbreviationWordBuffer:(char *)arg1 length:(unsigned long long)arg2 language:(id)arg3 encoding:(unsigned int)arg4;
- (_Bool)checkNegativeWordBuffer:(char *)arg1 length:(unsigned long long)arg2 language:(id)arg3 encoding:(unsigned int)arg4;
- (unsigned long long)acceptibilityOfWordBuffer:(char *)arg1 length:(unsigned long long)arg2 language:(id)arg3 encoding:(unsigned int)arg4 forPrediction:(_Bool)arg5;
- (unsigned long long)acceptibilityOfWordBuffer:(char *)arg1 length:(unsigned long long)arg2 language:(id)arg3 encoding:(unsigned int)arg4 forPrediction:(_Bool)arg5 depth:(unsigned long long)arg6;
- (_Bool)checkNameWordBuffer:(char *)arg1 length:(unsigned long long)arg2 language:(id)arg3 encoding:(unsigned int)arg4 globalOnly:(_Bool)arg5;
- (_Bool)checkWordBuffer:(char *)arg1 length:(unsigned long long)arg2 language:(id)arg3 encoding:(unsigned int)arg4 index:(unsigned long long)arg5;
- (_Bool)_checkEnglishGrammarInString:(id)arg1 range:(struct _NSRange)arg2 indexIntoBuffer:(unsigned long long)arg3 bufferLength:(unsigned long long)arg4 language:(id)arg5 connection:(struct _PR_DB_IO *)arg6 sender:(id)arg7 bufIO:(struct _PR_BUF_IO *)arg8 retval:(int *)arg9 errorRange:(struct _NSRange *)arg10 details:(id *)arg11;
- (id)_detailWithRange:(struct _NSRange)arg1 description:(id)arg2 corrections:(id)arg3;
- (id)_correctionForSuggestedPhrase:(const char *)arg1 originalBuffer:(const char *)arg2 length:(unsigned long long)arg3;
- (id)_modifiedGrammarDescriptionForDescription:(id)arg1;
- (id)_crudePreviousWordInString:(id)arg1 inRange:(struct _NSRange)arg2;
- (id)_crudePreviousWordInString:(id)arg1 inRange:(struct _NSRange)arg2 precededBy:(id *)arg3;
- (id)_crudeNextWordInString:(id)arg1 inRange:(struct _NSRange)arg2;
- (_Bool)onNoContractionList:(id)arg1 language:(id)arg2 connection:(struct _PR_DB_IO *)arg3 sender:(id)arg4;
- (_Bool)onContractionList:(id)arg1 language:(id)arg2 connection:(struct _PR_DB_IO *)arg3 sender:(id)arg4;
- (_Bool)looksLikeParticiple:(id)arg1 language:(id)arg2 connection:(struct _PR_DB_IO *)arg3 sender:(id)arg4;
- (_Bool)looksLikeAdverb:(id)arg1 language:(id)arg2 connection:(struct _PR_DB_IO *)arg3 sender:(id)arg4;
- (_Bool)looksLikeArticledNoun:(id)arg1 language:(id)arg2 connection:(struct _PR_DB_IO *)arg3;
- (id)spellServer:(id)arg1 candidatesForSelectedRange:(struct _NSRange)arg2 inString:(id)arg3 offset:(unsigned long long)arg4 types:(unsigned long long)arg5 options:(id)arg6 orthography:(id)arg7;
- (void)personalizeEmojiArray:(id)arg1;
- (id)spellServer:(id)arg1 suggestWordWithMinimumLength:(unsigned long long)arg2 maximumLength:(unsigned long long)arg3 language:(id)arg4;
- (id)spellServer:(id)arg1 suggestNextLetterDictionariesForPartialWordRange:(struct _NSRange)arg2 inString:(id)arg3 inLanguage:(id)arg4 options:(id)arg5;
- (id)spellServer:(id)arg1 suggestCompletionDictionariesForPartialWordRange:(struct _NSRange)arg2 inString:(id)arg3 inLanguage:(id)arg4 options:(id)arg5;
- (id)spellServer:(id)arg1 suggestCompletionsForPartialWordRange:(struct _NSRange)arg2 inString:(id)arg3 inLanguage:(id)arg4 options:(id)arg5;
- (id)spellServer:(id)arg1 suggestGuessesForWordRange:(struct _NSRange)arg2 inString:(id)arg3 inLanguage:(id)arg4 options:(id)arg5;
- (id)_correctionResultForString:(id)arg1 range:(struct _NSRange)arg2 inString:(id)arg3 offset:(unsigned long long)arg4 tagger:(id)arg5 taggerIndex:(unsigned long long)arg6 appIdentifier:(id)arg7 dictionary:(id)arg8 languages:(id)arg9 connection:(struct _PR_DB_IO *)arg10 onlyAtInsertionPoint:(_Bool)arg11 capitalize:(_Bool)arg12 autocapitalize:(_Bool)arg13 keyEventArray:(id)arg14 selectedRangeValue:(id)arg15 previousLetter:(unsigned short)arg16 nextLetter:(unsigned short)arg17 isAlternateLanguage:(_Bool)arg18 extraMisspellingCount:(unsigned long long)arg19 extraCorrectionCount:(unsigned long long *)arg20;
- (id)_phraseCapitalizationResultForString:(id)arg1 range:(struct _NSRange)arg2 currentWordRange:(struct _NSRange)arg3 inString:(id)arg4 offset:(unsigned long long)arg5 language:(id)arg6 onlyAtInsertionPoint:(_Bool)arg7 keyEventArray:(id)arg8 selectedRangeValue:(id)arg9;
- (id)_capitalizationResultForString:(id)arg1 range:(struct _NSRange)arg2 inString:(id)arg3 offset:(unsigned long long)arg4 language:(id)arg5 onlyAtInsertionPoint:(_Bool)arg6 keyEventArray:(id)arg7 selectedRangeValue:(id)arg8;
- (_Bool)findMatchingRangesForRange:(struct _NSRange)arg1 inString:(id)arg2 keyEventArray:(id)arg3 selectedRangeValue:(id)arg4 matchingStringRange:(struct _NSRange *)arg5 correctableStringRange:(struct _NSRange *)arg6 matchingKeyEventRange:(struct _NSRange *)arg7 firstMisspelledKeyEventIndex:(unsigned long long *)arg8 lastMisspelledKeyEventIndex:(unsigned long long *)arg9 previousBackspaceCount:(unsigned long long *)arg10;
- (_Bool)_findMatchingRangesForRange:(struct _NSRange)arg1 inString:(id)arg2 keyEventArray:(id)arg3 endingAtIndex:(unsigned long long)arg4 matchingStringRange:(struct _NSRange *)arg5 correctableStringRange:(struct _NSRange *)arg6 matchingKeyEventRange:(struct _NSRange *)arg7 firstMisspelledKeyEventIndex:(unsigned long long *)arg8 lastMisspelledKeyEventIndex:(unsigned long long *)arg9 previousBackspaceCount:(unsigned long long *)arg10;
- (void)_addGuessesForWordBuffer:(char *)arg1 length:(unsigned long long)arg2 language:(id)arg3 connection:(struct _PR_DB_IO *)arg4 sender:(id)arg5 minAutocorrectionLength:(unsigned long long)arg6 previousLetter:(unsigned short)arg7 nextLetter:(unsigned short)arg8 basicOnly:(_Bool)arg9 toGuesses:(id)arg10;
- (id)spellServer:(id)arg1 finalModificationsForPinyinInputString:(id)arg2;
- (id)spellServer:(id)arg1 modificationsForPinyinInputString:(id)arg2 geometryModelData:(id)arg3;
- (id)spellServer:(id)arg1 modificationsForPinyinInputString:(id)arg2;
- (id)spellServer:(id)arg1 _retainedFinalModificationsForPinyinInputString:(id)arg2 geometryModelData:(id)arg3;
- (id)spellServer:(id)arg1 _retainedModificationsForPinyinInputString:(id)arg2 geometryModelData:(id)arg3;
- (id)spellServer:(id)arg1 correctionsForPinyinInputString:(id)arg2;
- (id)spellServer:(id)arg1 _retainedCorrectionsForPinyinInputString:(id)arg2;
- (id)spellServer:(id)arg1 prefixesForPinyinInputString:(id)arg2;
- (id)spellServer:(id)arg1 _retainedPrefixesForPinyinInputString:(id)arg2;
- (id)spellServer:(id)arg1 extendedAlternativesForPinyinInputString:(id)arg2;
- (id)spellServer:(id)arg1 alternativesForPinyinInputString:(id)arg2;
- (id)spellServer:(id)arg1 _retainedAlternativesForPinyinInputString:(id)arg2 extended:(_Bool)arg3;
- (id)_recursiveRetainedAlternativesForPinyinInputString:(id)arg1 depth:(unsigned long long)arg2;
- (id)_retainedAlternativesByCombiningAlternatives:(id)arg1 withAlternatives:(id)arg2 andAddingAlternatives:(id)arg3;
- (id)_pinyinStringByCombiningPinyinString:(id)arg1 withPinyinString:(id)arg2;
- (unsigned long long)_getSplitIndexes:(unsigned long long *)arg1 maxCount:(unsigned long long)arg2 forPinyinInputString:(id)arg3;
- (id)_primitiveRetainedAlternativesForPinyinInputString:(id)arg1;
- (void)addModifiedPartialPinyinToArray:(id)arg1 connection:(struct _PR_DB_IO *)arg2 fromIndex:(unsigned long long)arg3 prevIndex:(unsigned long long)arg4 prevPrevIndex:(unsigned long long)arg5 prePrevPrevIndex:(unsigned long long)arg6 startingModificationsAt:(unsigned long long)arg7 inBuffer:(char *)arg8 length:(unsigned long long)arg9 initialSyllableCount:(unsigned long long)arg10 initialScore:(unsigned long long)arg11 prevScore:(unsigned long long)arg12 prevPrevScore:(unsigned long long)arg13 lastSyllableScore:(unsigned long long)arg14;
- (void)addModifiedPinyinToArray:(id)arg1 connection:(struct _PR_DB_IO *)arg2 fromIndex:(unsigned long long)arg3 prevIndex:(unsigned long long)arg4 prevPrevIndex:(unsigned long long)arg5 startingModificationsAt:(unsigned long long)arg6 inBuffer:(char *)arg7 length:(unsigned long long)arg8 initialSyllableCount:(unsigned long long)arg9 initialScore:(unsigned long long)arg10 prevScore:(unsigned long long)arg11 prevPrevScore:(unsigned long long)arg12 lastSyllableScore:(unsigned long long)arg13 couldBeAbbreviatedPinyin:(_Bool)arg14;
- (void)addSpecialModifiedPinyinToArray:(id)arg1 inBuffer:(char *)arg2 length:(unsigned long long)arg3 atEnd:(_Bool)arg4;
- (id)englishStringFromWordBuffer:(char *)arg1 length:(unsigned long long)arg2 connection:(struct _PR_DB_IO *)arg3;
- (id)englishStringsFromWordBuffer:(char *)arg1 length:(unsigned long long)arg2 connection:(struct _PR_DB_IO *)arg3;
- (id)spellServer:(id)arg1 suggestGuessesForKoreanWordRange:(struct _NSRange)arg2 inString:(id)arg3 options:(id)arg4;
- (id)_correctionResultForKoreanString:(id)arg1 range:(struct _NSRange)arg2 inString:(id)arg3 offset:(unsigned long long)arg4 tagger:(id)arg5 taggerIndex:(unsigned long long)arg6 appIdentifier:(id)arg7 dictionary:(id)arg8 keyEventArray:(id)arg9;
- (void)addGuessesForKoreanWord:(id)arg1 includeAdditionalGuesses:(_Bool)arg2 toGuesses:(id)arg3;
- (id)externalStringForKoreanInternalString:(id)arg1;
- (id)internalStringForKoreanExternalString:(id)arg1;

@end

