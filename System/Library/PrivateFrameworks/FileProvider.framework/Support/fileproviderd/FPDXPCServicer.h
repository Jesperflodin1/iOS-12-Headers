//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "FPDDaemon-Protocol.h"

@class FPDServer, NSHashTable, NSXPCConnection;
@protocol OS_dispatch_queue;

@interface FPDXPCServicer : NSObject <FPDDaemon>
{
    NSHashTable *_providerServicers;
    NSObject<OS_dispatch_queue> *_queue;
    FPDServer *_server;
    NSXPCConnection *_connection;
}

@property(nonatomic) __weak NSXPCConnection *connection; // @synthesize connection=_connection;
@property(nonatomic) __weak FPDServer *server; // @synthesize server=_server;
- (void).cxx_destruct;
- (void)reindexAllSearchableItemsForBundleIDs:(id)arg1 acknowledgementHandler:(CDUnknownBlockType)arg2;
- (void)reindexAllSearchableItemsWithAcknowledgementHandler:(CDUnknownBlockType)arg1;
- (void)dumpStateTo:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)didUpdateAlternateContentsDocumentForDocumentAtURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)fetchAlternateContentsURLForDocumentURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)setAlternateContentsURL:(id)arg1 onDocumentURL:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)setEnabled:(_Bool)arg1 forDomainIdentifier:(id)arg2 providerIdentifier:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)getDomainsForProviderIdentifier:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)removeAllDomainsForProviderIdentifier:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)removeDomain:(id)arg1 forProviderIdentifier:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)addDomain:(id)arg1 forProviderIdentifier:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)endpointForItemAtURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)valuesForAttributes:(id)arg1 forItemAtURL:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)updateLastUsedDate:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)trashItemAtURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)fetchIndexPropertiesForItemAtURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)itemForURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)fetchSupportedServicesForDocumentAtURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)fetchRemoteServiceEndpointCreatingProviderWithIdentifier:(id)arg1 itemURL:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)fetchRemoteFileProviderWithIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (id)createProviderServicerWithIdentifier:(id)arg1 forItemURL:(id)arg2 enumerateEntitlementRequired:(_Bool)arg3 error:(id *)arg4;
- (id)createProviderServicerWithIdentifier:(id)arg1 enumerateEntitlementRequired:(_Bool)arg2 error:(id *)arg3;
- (id)providerForIdentifier:(id)arg1 enumerateEntitlementRequired:(_Bool)arg2 error:(id *)arg3;
- (id)providerForCurrentConnection;
- (void)bookmarkableStringFromDocumentURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)documentURLFromBookmarkableString:(id)arg1 creatingPlaceholderIfMissing:(_Bool)arg2 ignoreAlternateContentsURL:(_Bool)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)providersCompletionHandler:(CDUnknownBlockType)arg1;
- (void)evictItemAtURL:(id)arg1 evenIfEnumeratingFP:(_Bool)arg2 andClearACLForConsumer:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)startProvidingItemAtURL:(id)arg1 fromProviderID:(id)arg2 forConsumerID:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)extendSandboxForFileURL:(id)arg1 fromProviderID:(id)arg2 toConsumerID:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)extendBookmarkForFileURL:(id)arg1 toConsumerID:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)extendBookmarkForItemID:(id)arg1 consumerID:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)wakeUpForURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (_Bool)clientHasSandboxAccessToFile:(id)arg1;
- (_Bool)_isNonSandboxedConnection;
- (void)invalidate;
- (int)pid;
- (id)init;
- (id)description;

@end

