//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <ProtocolBuffer/PBCodable.h>

#import <CloudKitDaemon/NSCopying-Protocol.h>

@class CKDPParticipant, CKDPProtectionInfo, CKDPShare, CKDPShareIdentifier, NSData, NSMutableArray, NSString;

__attribute__((visibility("hidden")))
@interface CKDPShareTokenRetrieveResponse : PBCodable <NSCopying>
{
    CKDPParticipant *_callingParticipant;
    NSString *_container;
    int _containerEnvironment;
    NSString *_etag;
    CKDPProtectionInfo *_invitedPcs;
    NSString *_ownerFirstName;
    NSString *_ownerLastName;
    int _participantState;
    int _participantType;
    int _permission;
    NSMutableArray *_potentialMatchs;
    NSData *_protectedFullToken;
    CKDPProtectionInfo *_selfAddedPcs;
    CKDPShare *_share;
    CKDPShareIdentifier *_shareId;
    struct {
        unsigned int containerEnvironment:1;
        unsigned int participantState:1;
        unsigned int participantType:1;
        unsigned int permission:1;
    } _has;
}

+ (Class)potentialMatchType;
@property(retain, nonatomic) CKDPShare *share; // @synthesize share=_share;
@property(retain, nonatomic) NSMutableArray *potentialMatchs; // @synthesize potentialMatchs=_potentialMatchs;
@property(retain, nonatomic) CKDPParticipant *callingParticipant; // @synthesize callingParticipant=_callingParticipant;
@property(retain, nonatomic) CKDPProtectionInfo *invitedPcs; // @synthesize invitedPcs=_invitedPcs;
@property(retain, nonatomic) NSString *ownerLastName; // @synthesize ownerLastName=_ownerLastName;
@property(retain, nonatomic) NSString *ownerFirstName; // @synthesize ownerFirstName=_ownerFirstName;
@property(retain, nonatomic) NSData *protectedFullToken; // @synthesize protectedFullToken=_protectedFullToken;
@property(retain, nonatomic) CKDPProtectionInfo *selfAddedPcs; // @synthesize selfAddedPcs=_selfAddedPcs;
@property(retain, nonatomic) NSString *etag; // @synthesize etag=_etag;
@property(retain, nonatomic) CKDPShareIdentifier *shareId; // @synthesize shareId=_shareId;
@property(retain, nonatomic) NSString *container; // @synthesize container=_container;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasShare;
- (id)potentialMatchAtIndex:(unsigned long long)arg1;
- (unsigned long long)potentialMatchsCount;
- (void)addPotentialMatch:(id)arg1;
- (void)clearPotentialMatchs;
@property(readonly, nonatomic) _Bool hasCallingParticipant;
@property(readonly, nonatomic) _Bool hasInvitedPcs;
@property(readonly, nonatomic) _Bool hasOwnerLastName;
@property(readonly, nonatomic) _Bool hasOwnerFirstName;
@property(readonly, nonatomic) _Bool hasProtectedFullToken;
@property(readonly, nonatomic) _Bool hasSelfAddedPcs;
- (int)StringAsPermission:(id)arg1;
- (id)permissionAsString:(int)arg1;
@property(nonatomic) _Bool hasPermission;
@property(nonatomic) int permission; // @synthesize permission=_permission;
- (int)StringAsParticipantState:(id)arg1;
- (id)participantStateAsString:(int)arg1;
@property(nonatomic) _Bool hasParticipantState;
@property(nonatomic) int participantState; // @synthesize participantState=_participantState;
- (int)StringAsParticipantType:(id)arg1;
- (id)participantTypeAsString:(int)arg1;
@property(nonatomic) _Bool hasParticipantType;
@property(nonatomic) int participantType; // @synthesize participantType=_participantType;
@property(readonly, nonatomic) _Bool hasEtag;
@property(readonly, nonatomic) _Bool hasShareId;
- (int)StringAsContainerEnvironment:(id)arg1;
- (id)containerEnvironmentAsString:(int)arg1;
@property(nonatomic) _Bool hasContainerEnvironment;
@property(nonatomic) int containerEnvironment; // @synthesize containerEnvironment=_containerEnvironment;
@property(readonly, nonatomic) _Bool hasContainer;

@end

