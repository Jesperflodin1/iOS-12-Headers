//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "MRDDiagnosticCollecting-Protocol.h"
#import "MRDElectedPlayerControllerDelegate-Protocol.h"
#import "MRDNowPlayingClientDelegate-Protocol.h"
#import "MRDNowPlayingOriginClientDelegate-Protocol.h"
#import "MRDNowPlayingPlayerClientDelegate-Protocol.h"
#import "MRDXPCMessageHandling-Protocol.h"

@class MRDElectedPlayerController, MRDNowPlayingClient, MRDNowPlayingOriginClient, MRDNowPlayingPlaybackQueueServer, MRDNowPlayingPlayerClient, NSArray, NSMutableArray, NSMutableDictionary, NSSet, NSString, _MRNowPlayingPlayerPathProtobuf;
@protocol OS_dispatch_queue;

@interface MRDNowPlayingServer : NSObject <MRDElectedPlayerControllerDelegate, MRDXPCMessageHandling, MRDDiagnosticCollecting, MRDNowPlayingClientDelegate, MRDNowPlayingOriginClientDelegate, MRDNowPlayingPlayerClientDelegate>
{
    NSObject<OS_dispatch_queue> *_serialQueue;
    NSMutableArray *_originClients;
    NSMutableDictionary *_nowPlayingApplicationIsPlayingStates;
    MRDNowPlayingPlaybackQueueServer *_playbackQueueServer;
    MRDNowPlayingOriginClient *_activeOriginClient;
    MRDNowPlayingOriginClient *_localOriginClient;
    MRDElectedPlayerController *_electedPlayerController;
}

@property(retain, nonatomic) MRDElectedPlayerController *electedPlayerController; // @synthesize electedPlayerController=_electedPlayerController;
@property(retain, nonatomic) MRDNowPlayingOriginClient *localOriginClient; // @synthesize localOriginClient=_localOriginClient;
@property(retain, nonatomic) MRDNowPlayingOriginClient *activeOriginClient; // @synthesize activeOriginClient=_activeOriginClient;
- (void).cxx_destruct;
- (id)_clientsWithRegisteredOrigin:(id)arg1;
- (id)_onQueue_originClientForOrigin:(id)arg1;
- (id)_onQueue_restoredActiveOrigin;
- (void)_onQueue_savePersistentActiveOrigin:(id)arg1;
- (void)_onQueue_setActiveOrigin:(id)arg1 saveState:(_Bool)arg2;
- (void)setActiveOrigin:(id)arg1;
- (id)overrideClient;
- (void)setOverrideClient:(id)arg1;
- (void)_removeNowPlayingClient:(id)arg1 forOrigin:(id)arg2;
- (_Bool)isOriginAvailable:(id)arg1;
- (void)_removeOrigin:(id)arg1;
- (_Bool)_addOrigin:(id)arg1 withDeviceInfo:(id)arg2 emitNotification:(_Bool)arg3;
- (void)_clientCanBeNowPlayingAppDidChangeNotification:(id)arg1;
- (void)augmentUserInfo:(id)arg1;
- (void)clearNowPlayingClientForXPCClient:(id)arg1;
- (void)postAnyPlayerIsPlayingDidChange:(_Bool)arg1 forPlayerPath:(id)arg2;
- (void)postPlayerDidUnregisterForPlayerPath:(id)arg1;
- (void)postPlayerDidRegisterForPlayerPath:(id)arg1;
- (void)postActivePlayerDidChangeForPlayerPath:(id)arg1;
- (void)postPlaybackQueueCapabilitiesDidChange:(unsigned long long)arg1 forPlayerPath:(id)arg2;
- (void)postPlaybackQueueContentItemsArtworkDidChange:(id)arg1 forPlayerPath:(id)arg2;
- (void)postPlaybackQueueContentItemsDidChange:(id)arg1 forPlayerPath:(id)arg2;
- (void)postPlaybackQueueDidChange:(id)arg1 forPlayerPath:(id)arg2;
- (void)postSupportedCommandsDidChange:(id)arg1 forPlayerPath:(id)arg2;
- (void)postNowPlayingPlayerStateDidChange:(id)arg1 forPlayerPath:(id)arg2;
- (void)postNowPlayingClientStateDidChange:(id)arg1 forPlayerPath:(id)arg2;
- (void)postAnyAppIsPlayingDidChange:(_Bool)arg1 forOrigin:(id)arg2;
- (void)postDeviceInfoDidChange:(id)arg1 forOrigin:(id)arg2;
- (void)postNowPlayingApplicationDidChangeForPlayerPath:(id)arg1 isImplicitNotification:(_Bool)arg2;
- (void)postNowPlayingAppPlaybackStateDidChange:(unsigned int)arg1 forPlayerPath:(id)arg2 isImplicitNotification:(_Bool)arg3;
- (void)postNowPlayingAppIsPlayingDidChange:(_Bool)arg1 forPlayerPath:(id)arg2 isImplicitNotification:(_Bool)arg3;
- (void)postClientDidUnregisterForPlayerPath:(id)arg1;
- (void)postClientDidRegisterForPlayerPath:(id)arg1;
- (void)postClientDidUnregisterCanBeNowPlayingForPlayerPath:(id)arg1;
- (void)postClientDidRegisterCanBeNowPlayingForPlayerPath:(id)arg1;
- (void)postOriginDidUnRegister:(id)arg1;
- (void)postOriginDidRegister:(id)arg1;
- (void)postActiveOriginDidChange:(id)arg1;
- (void)collectDiagnostic:(id)arg1;
- (void)nowPlayingServer:(id)arg1 activeOriginDidChangeFromOriginClient:(id)arg2 toOriginClient:(id)arg3;
- (void)electedPlayerController:(id)arg1 electedPlayerPathDidChange:(id)arg2;
- (void)nowPlayingOriginClient:(id)arg1 currentRouteVolumeDidChange:(float)arg2;
- (void)nowPlayingOriginClient:(id)arg1 currentRouteVolumeControlCapabilitiesDidChange:(unsigned int)arg2;
- (void)nowPlayingOriginClient:(id)arg1 clientDidUnregister:(id)arg2 forPlayerPath:(id)arg3;
- (void)nowPlayingOriginClient:(id)arg1 clientDidRegister:(id)arg2 forPlayerPath:(id)arg3;
- (void)nowPlayingOriginClient:(id)arg1 anyAppIsPlayingDidChange:(_Bool)arg2 forOrigin:(id)arg3;
- (void)nowPlayingOriginClient:(id)arg1 deviceInfoDidChange:(id)arg2 forOrigin:(id)arg3;
- (void)nowPlayingOriginClient:(id)arg1 applicationActivityStatusDidChange:(id)arg2;
- (void)nowPlayingOriginClient:(id)arg1 applicationActivityDidEnd:(id)arg2;
- (void)nowPlayingOriginClient:(id)arg1 applicationActivityDidBegin:(id)arg2;
- (void)nowPlayingOriginClient:(id)arg1 activePlayerPathDidChange:(id)arg2 withPlaybackState:(unsigned int)arg3;
- (void)nowPlayingClient:(id)arg1 applicationDidForeground:(_Bool)arg2 forPlayerPath:(id)arg3;
- (void)nowPlayingClient:(id)arg1 anyPlayerIsPlayingDidChange:(_Bool)arg2 forPlayerPath:(id)arg3;
- (void)nowPlayingClient:(id)arg1 playerDidUnregisterForPlayerPath:(id)arg2;
- (void)nowPlayingClient:(id)arg1 playerDidRegisterForPlayerPath:(id)arg2;
- (void)nowPlayingClient:(id)arg1 clientStateDidChange:(id)arg2 forPlayerPath:(id)arg3;
- (void)nowPlayingClient:(id)arg1 activePlayerDidChangeFromPlayerClient:(id)arg2 toPlayerClient:(id)arg3;
- (void)nowPlayingPlayerClient:(id)arg1 playbackQueueArtworkContentItemsDidChange:(id)arg2 forPlayerPath:(id)arg3;
- (void)nowPlayingPlayerClient:(id)arg1 playbackQueueContentItemsDidChange:(id)arg2 forPlayerPath:(id)arg3;
- (void)nowPlayingPlayerClient:(id)arg1 playbackQueueCapabilitiesDidChange:(unsigned long long)arg2 forPlayerPath:(id)arg3;
- (void)nowPlayingPlayerClient:(id)arg1 playbackQueueDidChange:(id)arg2 forPlayerPath:(id)arg3;
- (void)nowPlayingPlayerClient:(id)arg1 supportedCommandsDidChange:(id)arg2 forPlayerPath:(id)arg3;
- (void)nowPlayingPlayerClient:(id)arg1 playbackDidTimeoutforPlayerPath:(id)arg2;
- (void)nowPlayingPlayerClient:(id)arg1 playbackStateDidChange:(unsigned int)arg2 forPlayerPath:(id)arg3;
- (void)nowPlayingPlayerClient:(id)arg1 isPlayingDidChange:(_Bool)arg2 forPlayerPath:(id)arg3;
- (void)nowPlayingPlayerClient:(id)arg1 playerStateDidChange:(id)arg2 forPlayerPath:(id)arg3;
- (void)_handleUpdateDeviceInfo:(id)arg1 fromClient:(id)arg2;
- (void)_handleGetDeviceInfo:(id)arg1 fromClient:(id)arg2;
- (void)_handleContentItemArtworkChangedMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleContentItemChangedMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleRemoveNowPlayingPlayerMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleGetNowPlayingPlayerMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleSetNowPlayingPlayerMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleGetNowPlayingPlayersMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleRemoveNowPlayingClientMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleGetNowPlayingClientMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleSetNowPlayingClientMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleGetNowPlayingClientsMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleResolvePlayerPath:(id)arg1 fromClient:(id)arg2;
- (void)_handleSendLyricsEvent:(id)arg1 fromClient:(id)arg2;
- (void)_handleRequestAudioAmplitudeSamplesMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleRequestVideoThumbnailsMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleGetAnyAppIsPlayingMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleSetNowPlayingAppPlaybackStateMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleGetPlaybackStateMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleUpdatePlayerPropertiesMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleSetPlayerPropertiesMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleGetPlayerPropertiesMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleUpdateClientPropertiesMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleSetClientPropertiesMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleGetClientPropertiesMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleResetPlaybackQueueRequests:(id)arg1 fromClient:(id)arg2;
- (void)_handleSetHardwareRemoteBehaviorMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleSetPlaybackQueueCapabilties:(id)arg1 fromClient:(id)arg2;
- (void)_handleRequestPlaybackQueueCapabilties:(id)arg1 fromClient:(id)arg2;
- (void)_handleSetPlaybackQueue:(id)arg1 fromClient:(id)arg2;
- (void)_handleEndApplicationActivityMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleGetApplicationActivityMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleBeginApplicationActivityMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleSetCanBeNowPlayingAppMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleSetOverriddenNowPlayingAppMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleSetNowPlayingAppOverrideMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleRemoveCustomOriginMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleRegisterCustomOriginMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleGetActiveOriginMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleSetActiveOriginMessage:(id)arg1 fromClient:(id)arg2;
- (void)_handleGetAvailableOriginsMessage:(id)arg1 fromClient:(id)arg2;
- (id)localPlayersForXpcClient:(id)arg1;
- (id)xpcClientForPlayerPath:(id)arg1;
- (id)_onQueue_queryPlayerPath:(id)arg1;
- (id)queryPlayerPath:(id)arg1;
- (id)resolveExistingPlayerPath:(id)arg1;
- (id)resolvePlayerPath:(id)arg1 fromClient:(id)arg2;
- (id)queryExistingPlayerPathForXPCMessage:(id)arg1;
- (id)queryPlayerPathForXPCMessage:(id)arg1 fromClient:(id)arg2;
- (id)_onQueue_availableOrigins;
@property(readonly, nonatomic) NSArray *availableOrigins;
- (id)_onQueue_allNowPlayingInfoClientsForOrigin:(id)arg1;
@property(readonly, nonatomic) NSSet *allLocalNowPlayingInfoClients;
- (id)_onQueue_allNowPlayingInfoClients;
@property(readonly, nonatomic) NSSet *allNowPlayingInfoClients;
@property(readonly, nonatomic) _MRNowPlayingPlayerPathProtobuf *localActivePlayerPath;
@property(readonly, nonatomic) _MRNowPlayingPlayerPathProtobuf *activePlayerPath;
- (id)_onQueue_activeOriginClient;
@property(readonly, nonatomic) MRDNowPlayingClient *localActiveNowPlayingClient;
@property(readonly, nonatomic) MRDNowPlayingClient *activeNowPlayingClient;
@property(readonly, nonatomic) MRDNowPlayingPlayerClient *localActivePlayerClient;
@property(readonly, nonatomic) MRDNowPlayingPlayerClient *activePlayerClient;
@property(readonly, nonatomic) unsigned int localActivePlayerPlaybackState;
@property(readonly, nonatomic) unsigned int activePlayerPlaybackState;
@property(readonly, nonatomic) _Bool localActivePlayerIsPlaying;
@property(readonly, nonatomic) _Bool activePlayerIsPlaying;
@property(readonly, nonatomic) NSString *localActiveClientBundleIdentifier;
@property(readonly, nonatomic) NSString *activeClientBundleIdentifier;
@property(readonly, nonatomic) int localActiveClientPID;
@property(readonly, nonatomic) int activeClientPID;
- (void)handleXPCMessage:(id)arg1 fromClient:(id)arg2;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

