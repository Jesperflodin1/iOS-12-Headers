//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class AVCAudioStreamConfig, AVCNetworkAddress, AVCTextStreamConfig, AVCVideoStreamConfig, NSData, NSString;

@interface AVCMediaStreamConfig : NSObject
{
    AVCNetworkAddress *_localAddress;
    AVCNetworkAddress *_remoteAddress;
    long long _direction;
    unsigned long long _txPayloadType;
    unsigned long long _rxPayloadType;
    unsigned int _remoteSSRC;
    NSString *_cName;
    _Bool _rateAdaptationEnabled;
    _Bool _rtcpEnabled;
    _Bool _rtcpXREnabled;
    unsigned short _rtcpRemotePort;
    double _rtcpSendInterval;
    _Bool _rtpTimeOutEnabled;
    _Bool _rtcpTimeOutEnabled;
    double _rtpTimeOutInterval;
    double _rtcpTimeOutInterval;
    unsigned long long _recommendedMTU;
    NSData *_sendMasterKey;
    NSData *_receiveMasterKey;
    long long _SRTPCipherSuite;
    long long _SRTCPCipherSuite;
    AVCAudioStreamConfig *_audio;
    AVCVideoStreamConfig *_video;
    AVCTextStreamConfig *_text;
}

+ (id)dictionaryForCommonStreamConfig:(id)arg1;
+ (long long)clientCipherSuiteWithCipherSuite:(long long)arg1;
+ (long long)cipherSuiteWithClientCipherSuite:(long long)arg1;
+ (long long)clientStreamDirectionWithDirection:(long long)arg1;
+ (long long)streamDirectionWithClientDirection:(long long)arg1;
@property(retain, nonatomic) AVCTextStreamConfig *text; // @synthesize text=_text;
@property(retain, nonatomic) AVCVideoStreamConfig *video; // @synthesize video=_video;
@property(retain, nonatomic) AVCAudioStreamConfig *audio; // @synthesize audio=_audio;
@property(nonatomic) long long SRTCPCipherSuite; // @synthesize SRTCPCipherSuite=_SRTCPCipherSuite;
@property(nonatomic) long long SRTPCipherSuite; // @synthesize SRTPCipherSuite=_SRTPCipherSuite;
@property(retain, nonatomic) NSData *receiveMasterKey; // @synthesize receiveMasterKey=_receiveMasterKey;
@property(retain, nonatomic) NSData *sendMasterKey; // @synthesize sendMasterKey=_sendMasterKey;
@property(nonatomic) unsigned long long recommendedMTU; // @synthesize recommendedMTU=_recommendedMTU;
@property(nonatomic) double rtcpTimeOutInterval; // @synthesize rtcpTimeOutInterval=_rtcpTimeOutInterval;
@property(nonatomic) double rtpTimeOutInterval; // @synthesize rtpTimeOutInterval=_rtpTimeOutInterval;
@property(nonatomic, getter=isRTCPTimeOutEnabled) _Bool rtcpTimeOutEnabled; // @synthesize rtcpTimeOutEnabled=_rtcpTimeOutEnabled;
@property(nonatomic, getter=isRTPTimeOutEnabled) _Bool rtpTimeOutEnabled; // @synthesize rtpTimeOutEnabled=_rtpTimeOutEnabled;
@property(nonatomic) double rtcpSendInterval; // @synthesize rtcpSendInterval=_rtcpSendInterval;
@property(nonatomic) unsigned short rtcpRemotePort; // @synthesize rtcpRemotePort=_rtcpRemotePort;
@property(nonatomic, getter=isRTCPXREnabled) _Bool rtcpXREnabled; // @synthesize rtcpXREnabled=_rtcpXREnabled;
@property(nonatomic, getter=isRTCPEnabled) _Bool rtcpEnabled; // @synthesize rtcpEnabled=_rtcpEnabled;
@property(nonatomic, getter=isRateAdaptationEnabled) _Bool rateAdaptationEnabled; // @synthesize rateAdaptationEnabled=_rateAdaptationEnabled;
@property(nonatomic) unsigned int remoteSSRC; // @synthesize remoteSSRC=_remoteSSRC;
@property(nonatomic) unsigned long long rxPayloadType; // @synthesize rxPayloadType=_rxPayloadType;
@property(nonatomic) unsigned long long txPayloadType; // @synthesize txPayloadType=_txPayloadType;
@property(nonatomic) long long direction; // @synthesize direction=_direction;
@property(copy, nonatomic) NSString *cName; // @synthesize cName=_cName;
@property(retain, nonatomic) AVCNetworkAddress *remoteAddress; // @synthesize remoteAddress=_remoteAddress;
@property(retain, nonatomic) AVCNetworkAddress *localAddress; // @synthesize localAddress=_localAddress;
- (_Bool)isAudioCodecValid;
- (id)dictionary;
- (void)setUpWithDictionary:(id)arg1;
- (id)description;
- (_Bool)isValidTextConfig;
- (_Bool)isValidVideoConfig;
- (_Bool)isValidAudioConfig;
- (void)dealloc;
- (id)init;

@end

