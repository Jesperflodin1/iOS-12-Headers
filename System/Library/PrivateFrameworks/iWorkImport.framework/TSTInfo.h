//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <iWorkImport/TSDDrawableInfo.h>

#import <iWorkImport/TSCECalculationEngineRegistration-Protocol.h>
#import <iWorkImport/TSCEColumnRowUIDMapping-Protocol.h>
#import <iWorkImport/TSDCompatibilityAwareMediaContainer-Protocol.h>
#import <iWorkImport/TSDContainerInfo-Protocol.h>
#import <iWorkImport/TSDMixing-Protocol.h>
#import <iWorkImport/TSDReducibleImageContainer-Protocol.h>
#import <iWorkImport/TSDReplaceableMediaContainer-Protocol.h>
#import <iWorkImport/TSKModel-Protocol.h>
#import <iWorkImport/TSKSearchable-Protocol.h>
#import <iWorkImport/TSSPresetSource-Protocol.h>
#import <iWorkImport/TSSPropertySource-Protocol.h>
#import <iWorkImport/TSSStyleClient-Protocol.h>
#import <iWorkImport/TSTAdditionalHiddenRowColumnProviding-Protocol.h>
#import <iWorkImport/TSTCategoryProviding-Protocol.h>
#import <iWorkImport/TSTCustomStrokeProviding-Protocol.h>
#import <iWorkImport/TSTStyleProviding-Protocol.h>
#import <iWorkImport/TSTTableHiddenRowColumnProviding-Protocol.h>
#import <iWorkImport/TSTTableInternalGeometryProviding-Protocol.h>
#import <iWorkImport/TSTTableMergeRangeProviding-Protocol.h>
#import <iWorkImport/TSTTableStrokeProviding-Protocol.h>
#import <iWorkImport/TSWPStorageParent-Protocol.h>
#import <iWorkImport/TSWPTextStatisticsTrackerProvider-Protocol.h>

@class NSArray, NSDictionary, NSObject, NSString, NSUUID, TSCECalculationEngine, TSCEOwnerUidMapper, TSDFill, TSDInfoGeometry, TSDStroke, TSPObject, TSTCategoryOrder, TSTCategoryOwner, TSTCellStyle, TSTCellWillChangeDistributor, TSTColumnRowUIDMap, TSTConcurrentMutableCellUIDSet, TSTConditionalStyleFormulaOwner, TSTGroupBy, TSTHiddenStates, TSTHiddenStatesOwner, TSTMasterLayout, TSTPencilAnnotationOwner, TSTSortRuleReferenceTracker, TSTStrokeSidecar, TSTStructuredTextImportRecord, TSTSummaryModel, TSTTableFilterSet, TSTTableModel, TSTTablePartitioner, TSTTableSortOrder, TSTTableStyle, TSTTableStylePreset, TSTTableTranslator, TSUMutableUUIDSet, TSWPParagraphStyle, TSWPShapeStyle;
@protocol TSDContainerInfo, TSDOwningAttachment;

__attribute__((visibility("hidden")))
@interface TSTInfo : TSDDrawableInfo <TSSPropertySource, TSDReplaceableMediaContainer, TSDReducibleImageContainer, TSDCompatibilityAwareMediaContainer, TSCECalculationEngineRegistration, TSDContainerInfo, TSDMixing, TSKModel, TSKSearchable, TSSPresetSource, TSSStyleClient, TSTCategoryProviding, TSCEColumnRowUIDMapping, TSTCustomStrokeProviding, TSTStyleProviding, TSTTableHiddenRowColumnProviding, TSTAdditionalHiddenRowColumnProviding, TSTTableInternalGeometryProviding, TSTTableMergeRangeProviding, TSTTableStrokeProviding, TSWPStorageParent, TSWPTextStatisticsTrackerProvider>
{
    TSTTableModel *_tableModel;
    _Bool _isCopyContainingCategoryColumn;
    _Bool _hasReference;
    _Bool _wasRemovedFromDocument;
    _Bool _migratingStylesOnly;
    TSTTablePartitioner *_partitioner;
    TSTMasterLayout *_masterLayout;
    TSTSummaryModel *_summaryModel;
    TSTGroupBy *_groupBy;
    TSUMutableUUIDSet *_rowUIDsWithPendingGroupingChanges;
    NSDictionary *_dragAndDropDetails;
    TSTColumnRowUIDMap *_columnRowUIDMap;
    TSTCategoryOrder *_categoryOrder;
    TSTHiddenStates *_hiddenStates;
    TSTTableTranslator *_translator;
    TSUMutableUUIDSet *_rowUIDsForImportedGroupingRows;
    UUIDData_5fbc143e _groupByUid;
    UUIDData_5fbc143e _hiddenStatesUid;
}

+ (unsigned long long)tableAreaForCellID:(struct TSUCellCoord)arg1 inTableWithHeaderColumns:(unsigned int)arg2 headerRows:(unsigned int)arg3 footerRows:(unsigned int)arg4 totalRows:(unsigned int)arg5;
+ (unsigned long long)tableStyleAreaForCellID:(struct TSUCellCoord)arg1 inTableWithHeaderColumns:(unsigned int)arg2 headerRows:(unsigned int)arg3 footerRows:(unsigned int)arg4 totalRows:(unsigned int)arg5;
+ (struct TSUCellRect)cellRangeForTableArea:(unsigned long long)arg1 givenTableSize:(CDStruct_c0454aff)arg2 numberOfHeaderRows:(unsigned int)arg3 numberOfFooterRows:(unsigned int)arg4 numberOfHeaderColumns:(unsigned int)arg5;
+ (void)ensureAllTablesAreRegisteredInDocumentRoot:(id)arg1;
+ (void)performRewritesForInsertedTableInfos:(id)arg1;
+ (_Bool)validateNewName:(id)arg1 forTable:(id)arg2;
+ (id)presetKinds;
+ (void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3 reservedCount:(unsigned long long)arg4;
+ (void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3;
+ (_Bool)canPartition;
+ (_Bool)needsObjectUUID;
+ (id)tableInfoForTableUID:(const UUIDData_5fbc143e *)arg1 withCalcEngine:(id)arg2;
+ (id)tablePrototypeWithIndex:(long long)arg1 context:(id)arg2 geometry:(id)arg3 styles:(id)arg4 forTableInsertOnly:(_Bool)arg5;
+ (id)tablePrototypeWithIndex:(long long)arg1 context:(id)arg2 geometry:(id)arg3 styles:(id)arg4;
+ (id)geometryForPrototypeIndex:(long long)arg1 withCanvasPoint:(struct CGPoint)arg2;
+ (unsigned int)numberOfColumnsForProtoIndex:(unsigned long long)arg1;
+ (unsigned int)numberOfRowsForProtoIndex:(unsigned long long)arg1;
+ (id)localizedDescriptionForProtoIndex:(unsigned long long)arg1;
@property(retain, nonatomic) TSUMutableUUIDSet *rowUIDsForImportedGroupingRows; // @synthesize rowUIDsForImportedGroupingRows=_rowUIDsForImportedGroupingRows;
@property(nonatomic) _Bool migratingStylesOnly; // @synthesize migratingStylesOnly=_migratingStylesOnly;
@property(readonly, nonatomic) _Bool wasRemovedFromDocument; // @synthesize wasRemovedFromDocument=_wasRemovedFromDocument;
@property(retain, nonatomic) TSTTableTranslator *translator; // @synthesize translator=_translator;
@property(nonatomic) UUIDData_5fbc143e hiddenStatesUid; // @synthesize hiddenStatesUid=_hiddenStatesUid;
@property(retain, nonatomic) TSTHiddenStates *hiddenStates; // @synthesize hiddenStates=_hiddenStates;
@property(readonly, nonatomic) TSTCategoryOrder *categoryOrder; // @synthesize categoryOrder=_categoryOrder;
@property(readonly, nonatomic) TSTColumnRowUIDMap *columnRowUIDMap; // @synthesize columnRowUIDMap=_columnRowUIDMap;
@property(nonatomic) _Bool hasReference; // @synthesize hasReference=_hasReference;
@property(nonatomic) _Bool isCopyContainingCategoryColumn; // @synthesize isCopyContainingCategoryColumn=_isCopyContainingCategoryColumn;
@property(retain, nonatomic) NSDictionary *dragAndDropDetails; // @synthesize dragAndDropDetails=_dragAndDropDetails;
@property(retain, nonatomic) TSUMutableUUIDSet *rowUIDsWithPendingGroupingChanges; // @synthesize rowUIDsWithPendingGroupingChanges=_rowUIDsWithPendingGroupingChanges;
@property(retain, nonatomic) TSTGroupBy *groupBy; // @synthesize groupBy=_groupBy;
@property(nonatomic) UUIDData_5fbc143e groupByUid; // @synthesize groupByUid=_groupByUid;
@property(readonly, nonatomic) TSTSummaryModel *summaryModel; // @synthesize summaryModel=_summaryModel;
@property(retain, nonatomic) TSTMasterLayout *masterLayout; // @synthesize masterLayout=_masterLayout;
@property(retain, nonatomic) TSTTablePartitioner *partitioner; // @synthesize partitioner=_partitioner;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)saveToArchiver:(id)arg1;
- (void)saveToArchive:(struct TableInfoArchive *)arg1 archiver:(id)arg2;
- (void)loadFromUnarchiver:(id)arg1;
- (void)loadFromArchive:(const struct TableInfoArchive *)arg1 unarchiver:(id)arg2;
- (Class)iteratorClass;
- (Class)editorClass;
- (Class)layoutClass;
- (Class)repClass;
- (void)validate;
- (id)commandForSettingTableDirection:(int)arg1 icc:(id)arg2;
- (void)resetViewMap;
- (id)processRowsWithPendingGroupingChangesAndReturnAffectedCellRegion;
- (void)willMakeGroupingChangesInRowUIDs:(id)arg1;
@property(nonatomic) double categoryColumnWidth;
- (void)setLabelRowHeight:(double)arg1 atCategoryLevel:(unsigned char)arg2;
- (double)labelRowHeightAtCategoryLevel:(unsigned char)arg1;
- (void)setSummaryRowHeight:(double)arg1 atCategoryLevel:(unsigned char)arg2;
- (double)summaryRowHeightAtCategoryLevel:(unsigned char)arg1;
- (_Bool)shouldDisplaySummaryLabelRowAtGroupLevel:(unsigned char)arg1;
- (void)setAggregateType:(unsigned char)arg1 forColumnUID:(UUIDData_5fbc143e)arg2 atGroupLevel:(unsigned char)arg3;
- (unsigned char)aggregateTypeForColumnUID:(UUIDData_5fbc143e)arg1 atGroupLevel:(unsigned char)arg2;
- (unsigned char)groupLevelForGroupUid:(const UUIDData_5fbc143e *)arg1;
- (struct TSCECategoryRef)categoryRefReferringToCellRef:(const RefTypeHolder_adbccd1a *)arg1;
- (_Bool)isCategoryGroupOrParentsCollapsed:(UUIDData_5fbc143e)arg1;
- (_Bool)hasCategoryRules;
- (_Bool)isCategorized;
@property(readonly, nonatomic) UUIDData_5fbc143e baseTableUID;
- (unsigned long long)groupingColumnLevelCountForColumn:(unsigned short)arg1;
- (id)columnDisplayNameForCategoryLevel:(unsigned char)arg1;
- (id)regionSubtractingCategoryColumnsAndRows:(id)arg1;
- (struct _NSRange)rowRangeUnderSummaryOrLabelRow:(unsigned int)arg1;
- (id)indexesForGroupingColumnsInRegion:(id)arg1;
- (id)indexesForGroupingColumns;
- (id)indexesForCategoryColumnsInRegion:(id)arg1;
- (id)indexesForCategoryColumns;
- (id)indexesForBodyColumns;
- (id)indexesForBodyRows;
- (id)indexesForSummaryAndLabelRowsInRegion:(id)arg1;
- (id)indexesForSummaryAndLabelRows;
- (id)indexesForLabelRows;
- (id)indexesForLabelRowsUpToGroupLevel:(unsigned char)arg1 omitGroupsWithUids:(const UUIDSet_bcc2db41 *)arg2;
- (id)indexesForLabelRowsAtGroupLevel:(unsigned char)arg1;
- (id)indexesForLabelRowsAtGroupLevel:(unsigned char)arg1 inRegion:(id)arg2;
- (id)indexesForLabelRowsInRegion:(id)arg1;
- (id)indexesForSummaryRows;
- (id)indexesForSummaryRowsUpToGroupLevel:(unsigned char)arg1 omitGroupsWithUids:(const UUIDSet_bcc2db41 *)arg2;
- (id)indexesForSummaryRowsAtGroupLevel:(unsigned char)arg1;
- (id)indexesForSummaryRowsAtGroupLevel:(unsigned char)arg1 inRegion:(id)arg2;
- (_Bool)hasSummaryRowsInRegion:(id)arg1;
- (id)indexesForSummaryRowsInRegion:(id)arg1;
- (_Bool)isCategorySummaryRowCollapsed:(unsigned int)arg1;
- (id)expandSummaryGroupUIDs:(id)arg1;
- (id)collapseSummaryGroupUIDs:(id)arg1;
- (id)indexesForSummaryAndBodyRowsInGroupUIDs:(id)arg1;
- (id)allRowUIDsAtSameLevelAsRowIndex:(unsigned int)arg1 withFilter:(CDUnknownBlockType)arg2;
- (id)allGroupUIDs;
- (_Bool)isCategoryAnyKindOfCell:(struct TSUCellCoord)arg1;
- (_Bool)isCategoryGroupingColumn:(unsigned short)arg1;
- (_Bool)isCategoryGroupValueLabelCell:(struct TSUCellCoord)arg1;
- (_Bool)isCategoryGroupValueCell:(struct TSUCellCoord)arg1;
- (_Bool)isCategoryColumnUneditableCell:(struct TSUCellCoord)arg1;
- (_Bool)isCategoryLabelCell:(struct TSUCellCoord)arg1;
- (_Bool)isCategorySummaryCell:(struct TSUCellCoord)arg1;
- (_Bool)isCategoryColumn:(unsigned short)arg1;
- (id)populatedCategoryGroupLevelsInColumn:(unsigned short)arg1;
- (unsigned short)categoryColumnIndex;
@property(readonly, nonatomic) struct TSUChromeRowIndex numberOfChromeFooterRows;
@property(readonly, nonatomic) struct TSUChromeRowIndex numberOfChromeHeaderRows;
@property(readonly, nonatomic) struct TSUChromeColumnIndex numberOfChromeHeaderColumns;
@property(readonly, nonatomic) struct TSUChromeRowIndex numberOfChromeRows;
@property(readonly, nonatomic) struct TSUChromeColumnIndex numberOfChromeColumns;
@property(readonly, nonatomic) struct TSUModelRowIndex numberOfBaseFooterRows;
@property(readonly, nonatomic) struct TSUModelRowIndex numberOfBaseHeaderRows;
@property(readonly, nonatomic) struct TSUModelColumnIndex numberOfBaseHeaderColumns;
@property(readonly, nonatomic) struct TSUModelRowIndex numberOfBaseRows;
@property(readonly, nonatomic) struct TSUModelColumnIndex numberOfBaseColumns;
- (unsigned int)numberOfCategoryColumns;
- (unsigned int)numberOfCategoryLevels;
- (unsigned char)categoryGroupLevelAtRow:(unsigned int)arg1;
- (unsigned char)categoryGroupLevelAtLabelRow:(unsigned int)arg1;
- (unsigned char)categoryGroupLevelAtSummaryRow:(unsigned int)arg1;
- (_Bool)isCategorySummaryOrLabelRow:(unsigned int)arg1;
- (_Bool)isCategoryLabelRow:(unsigned int)arg1;
- (_Bool)isCategorySummaryRow:(unsigned int)arg1;
- (void)setIsCategoryEnabled:(_Bool)arg1;
- (void)applyGroupingColumns:(id)arg1;
- (void)_correctAndCheckState;
- (_Bool)checkState;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (void)updateTableRowColumnStylesWithBlock:(CDUnknownBlockType)arg1;
- (void)mapTableStylesToStylesheet:(id)arg1 withMapper:(id)arg2;
- (id)textStyleForCellWithEmptyStyleAtCellUID:(struct TSTCellUID)arg1 isDefault:(out _Bool *)arg2;
- (int)getCell:(id)arg1 atCellUID:(struct TSTCellUID)arg2;
- (int)getDefaultCell:(out id)arg1 forCellUID:(const struct TSTCellUID *)arg2;
- (id)cellTractRefForUIDRectRef:(id)arg1;
- (id)cellRegionForUIDRange:(const UUIDRect_d701734b *)arg1;
- (UUIDRect_d701734b)cellUIDRangeForCellRange:(struct TSUCellRect)arg1;
- (struct TSUCellRect)cellRangeForUIDRange:(const UUIDRect_d701734b *)arg1;
- (void)setColumnRowUIDMap:(id)arg1;
- (void)setSummaryModel:(id)arg1;
- (void)setCategoryOrder:(id)arg1;
- (struct TSTCellUID)cellUIDForCellID:(struct TSUCellCoord)arg1 useCategoriesWildcards:(_Bool)arg2;
- (id)cellRegionFromCellUIDRegion:(id)arg1;
- (id)cellUIDRegionFromCellRegion:(id)arg1;
- (id)cellRegionFromCellUIDList:(id)arg1 includeLabelsWithSummaries:(_Bool)arg2 didAddLabels:(out _Bool *)arg3;
- (id)cellRegionFromCellUIDList:(id)arg1;
- (id)cellUIDListFromCellRegion:(id)arg1 useCategoriesWildcards:(_Bool)arg2;
- (id)cellUIDListFromCellRegion:(id)arg1;
- (struct _NSRange)columnRangeForUIDs:(const vector_4dc5f307 *)arg1;
- (struct _NSRange)rowRangeForUIDs:(const vector_4dc5f307 *)arg1;
- (vector_4dc5f307)columnUIDs;
- (vector_4dc5f307)rowUIDs;
- (id)mutableIndexesForUIDSet:(id)arg1 isRows:(_Bool)arg2 notFoundUIDs:(id)arg3;
- (id)mutableIndexesForUIDSet:(id)arg1 isRows:(_Bool)arg2;
- (id)UIDSetForIndexes:(id)arg1 isRows:(_Bool)arg2;
- (vector_4dc5f307)prunedRowUIDsFromRowUIDs:(const vector_4dc5f307 *)arg1;
- (vector_4dc5f307)prunedColumnUIDsFromColumnUIDs:(const vector_4dc5f307 *)arg1;
- (vector_4dc5f307)columnUIDsForColumnRange:(struct _NSRange)arg1;
- (id)mutableColumnIndexesForUIDs:(const vector_4dc5f307 *)arg1;
- (id)columnIndexesForUIDs:(const vector_4dc5f307 *)arg1;
- (vector_4dc5f307)columnUIDsForColumnIndexes:(id)arg1;
- (unsigned short)columnIndexForColumnUID:(const UUIDData_5fbc143e *)arg1;
- (UUIDData_5fbc143e)columnUIDForColumnIndex:(unsigned short)arg1;
- (vector_4dc5f307)rowUIDsForRowRange:(struct _NSRange)arg1;
- (id)mutableRowIndexesForUIDs:(const vector_4dc5f307 *)arg1;
- (id)rowIndexesForUIDs:(const vector_4dc5f307 *)arg1;
- (vector_4dc5f307)rowUIDsForRowIndexes:(id)arg1;
- (unsigned int)rowIndexForRowUID:(const UUIDData_5fbc143e *)arg1;
- (UUIDData_5fbc143e)rowUIDForRowIndex:(unsigned int)arg1;
- (_Bool)writeCellIDsInCellUIDList:(id)arg1 toVector:(vector_38b190b0 *)arg2 prunedCellUIDs:(vector_7670e6f2 *)arg3;
- (struct TSUCellCoord)cellIDForCellUID:(const struct TSTCellUID *)arg1;
- (struct TSTCellUID)cellUIDForCellID:(const struct TSUCellCoord *)arg1;
- (struct TSUCellCoord)cellIDForCellContainingRichTextStorage:(id)arg1;
- (_Bool)findChartableRangesFromTableRange:(struct TSCERangeCoordinate)arg1 getBodyRange:(out struct TSCERangeCoordinate *)arg2 headerColumnRange:(out struct TSCERangeCoordinate *)arg3 headerRowRange:(out struct TSCERangeCoordinate *)arg4;
- (void)upgradeFromPreUFF;
- (struct TSUCellRect)minPopulatedCellRange;
- (id)applyCollapseExpandState:(id)arg1 outUndoState:(id *)arg2;
- (struct TSCERangeRef)referenceToHiddenStateFromColumn:(unsigned short)arg1 toColumn:(unsigned short)arg2;
- (struct TSCERangeRef)referenceToHiddenStateFromRow:(unsigned int)arg1 toRow:(unsigned int)arg2;
- (void)registerAllFormulasWithCalculationEngine:(id)arg1 wasCrossDocumentPaste:(_Bool)arg2;
- (void)registerAllFormulasWithCalculationEngine:(id)arg1;
- (void)reassignPasteboardCustomFormatKeys;
- (void)addPasteboardCustomFormatsToDocumentAndUpdateCells;
- (void)remapTableUIDsInFormulasWithMap:(const UUIDMap_b66c2694 *)arg1 calcEngine:(id)arg2 bakeForBadRefs:(_Bool)arg3;
- (void)setFormulaOwnerUIDsWithMap:(id)arg1 shouldStealReferences:(_Bool)arg2;
- (id)cellRegionWithConditionalStyleMatchingCell:(struct TSUCellCoord)arg1;
- (_Bool)hasCellID:(struct TSUCellCoord)arg1;
- (id)cellValueFromCell:(id)arg1 atCellID:(struct TSUCellCoord)arg2;
- (int)getValue:(out struct TSCEValue *)arg1 atCellID:(struct TSUCellCoord)arg2 fetchRichTextAttributesIfPlainText:(_Bool)arg3;
- (struct TSCEValue)valueToUseForSummaryCellFormulaError;
- (id)strokeLayerForBottomOfRow:(unsigned int)arg1;
- (id)strokeLayerForTopOfRow:(unsigned int)arg1;
- (id)strokeLayerForRightSideOfColumn:(unsigned short)arg1;
- (id)strokeLayerForLeftSideOfColumn:(unsigned short)arg1;
- (void)setStroke:(id)arg1 forRightOfColumn:(unsigned short)arg2 order:(int)arg3 rowRange:(struct TSTSimpleRange)arg4;
- (void)setStroke:(id)arg1 forLeftOfColumn:(unsigned short)arg2 order:(int)arg3 rowRange:(struct TSTSimpleRange)arg4;
- (void)setStroke:(id)arg1 forBottomOfRow:(unsigned int)arg2 order:(int)arg3 columnRange:(struct TSTSimpleRange)arg4;
- (void)setStroke:(id)arg1 forTopOfRow:(unsigned int)arg2 order:(int)arg3 columnRange:(struct TSTSimpleRange)arg4;
- (void)setStroke:(id)arg1 forRightOfColumn:(unsigned short)arg2 order:(int)arg3;
- (void)setStroke:(id)arg1 forLeftOfColumn:(unsigned short)arg2 order:(int)arg3;
- (void)setStroke:(id)arg1 forBottomOfRow:(unsigned int)arg2 order:(int)arg3;
- (void)setStroke:(id)arg1 forTopOfRow:(unsigned int)arg2 order:(int)arg3;
- (id)cellBorderAtCellID:(struct TSUCellCoord)arg1;
- (int)maxStrokeOrder;
- (id)strokeExporterReturningDefaultStrokes:(_Bool)arg1;
@property(readonly, nonatomic) TSDStroke *categoryLevel5InteriorStroke;
@property(readonly, nonatomic) TSDStroke *categoryLevel4InteriorStroke;
@property(readonly, nonatomic) TSDStroke *categoryLevel3InteriorStroke;
@property(readonly, nonatomic) TSDStroke *categoryLevel2InteriorStroke;
@property(readonly, nonatomic) TSDStroke *categoryLevel1InteriorStroke;
@property(readonly, nonatomic) TSDStroke *categoryLevel5BottomStroke;
@property(readonly, nonatomic) TSDStroke *categoryLevel4BottomStroke;
@property(readonly, nonatomic) TSDStroke *categoryLevel3BottomStroke;
@property(readonly, nonatomic) TSDStroke *categoryLevel2BottomStroke;
@property(readonly, nonatomic) TSDStroke *categoryLevel1BottomStroke;
@property(readonly, nonatomic) TSDStroke *categoryLevel5LabelSeparatorStroke;
@property(readonly, nonatomic) TSDStroke *categoryLevel4LabelSeparatorStroke;
@property(readonly, nonatomic) TSDStroke *categoryLevel3LabelSeparatorStroke;
@property(readonly, nonatomic) TSDStroke *categoryLevel2LabelSeparatorStroke;
@property(readonly, nonatomic) TSDStroke *categoryLevel1LabelSeparatorStroke;
@property(readonly, nonatomic) TSDStroke *categoryLevel5TopStroke;
@property(readonly, nonatomic) TSDStroke *categoryLevel4TopStroke;
@property(readonly, nonatomic) TSDStroke *categoryLevel3TopStroke;
@property(readonly, nonatomic) TSDStroke *categoryLevel2TopStroke;
@property(readonly, nonatomic) TSDStroke *categoryLevel1TopStroke;
@property(readonly, nonatomic) TSDStroke *footerRowSeparatorStroke;
@property(readonly, nonatomic) TSDStroke *footerRowBodyRowStroke;
@property(readonly, nonatomic) TSDStroke *footerRowBodyColumnStroke;
@property(readonly, nonatomic) TSDStroke *footerRowBorderStroke;
@property(readonly, nonatomic) TSDStroke *headerRowSeparatorStroke;
@property(readonly, nonatomic) TSDStroke *headerRowBodyRowStroke;
@property(readonly, nonatomic) TSDStroke *headerRowBodyColumnStroke;
@property(readonly, nonatomic) TSDStroke *headerRowBorderStroke;
@property(readonly, nonatomic) TSDStroke *headerColumnSeparatorStroke;
@property(readonly, nonatomic) TSDStroke *headerColumnBodyRowStroke;
@property(readonly, nonatomic) TSDStroke *headerColumnBodyColumnStroke;
@property(readonly, nonatomic) TSDStroke *headerColumnBorderStroke;
@property(readonly, nonatomic) TSDStroke *bodyRowStrokeEvenIfNotVisible;
@property(readonly, nonatomic) TSDStroke *bodyRowStroke;
@property(readonly, nonatomic) TSDStroke *bodyColumnStroke;
@property(readonly, nonatomic) TSDStroke *defaultHorizontalBorderStrokeEvenIfNotVisible;
@property(readonly, nonatomic) TSDStroke *defaultVerticalBorderStroke;
@property(readonly, nonatomic) TSDStroke *defaultHorizontalBorderStroke;
- (id)fillForColumn:(unsigned short)arg1;
- (id)fillForRow:(unsigned int)arg1;
@property(readonly, nonatomic) TSDFill *footerRowsFill;
@property(readonly, nonatomic) TSDFill *headerRowsFill;
@property(readonly, nonatomic) TSDFill *headerColumnsFill;
@property(readonly, nonatomic) TSDFill *bodyFill;
@property(readonly, nonatomic) TSDFill *backgroundFill;
- (_Bool)isValidMergeRange:(struct TSUCellRect)arg1;
- (id)mergesIntersectingCellRegion:(id)arg1;
- (id)mergesIntersectingRange:(struct TSUCellRect)arg1;
- (vector_e87daf7b)mergeRangesAndCrumbsIntersectingRange:(struct TSUCellRect)arg1;
- (vector_e87daf7b)mergeRangesIntersectingCellRegion:(id)arg1;
- (vector_e87daf7b)mergeRangesIntersectingRange:(struct TSUCellRect)arg1;
- (void)enumerateMergesIntersectingCellRegion:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)mergeActionForRegion:(id)arg1 nonOriginPartialsOnly:(_Bool)arg2;
- (id)mergeActionForRegion:(id)arg1;
- (id)performActionReturningInverse:(id)arg1;
- (id)removeReturningInverseForRegion:(id)arg1;
- (id)shrinkReturningInverseForRegion:(id)arg1;
- (_Bool)hasMergeRanges;
- (id)expandCellRegionToCoverMergedCells:(id)arg1;
- (struct TSUCellRect)expandCellRangeToCoverMergedCells:(struct TSUCellRect)arg1;
- (_Bool)hasRangeSpanningRowsForCellRange:(struct TSUCellRect)arg1;
- (id)regionForValueOrCommentCellsInRange:(struct TSUCellRect)arg1;
- (id)mergedGridIndicesForDimension:(long long)arg1;
- (_Bool)hasMergeRangesIntersectingCellRegion:(id)arg1;
- (_Bool)hasMergeFragmentAtCellID:(struct TSUCellCoord)arg1;
- (_Bool)isSingleCellOrMergeRange:(struct TSUCellRect)arg1;
- (_Bool)hasMergeRangeSpanningRowsForCellRange:(struct TSUCellRect)arg1;
- (_Bool)mergeRangesPartiallyIntersectCellRegion:(id)arg1;
- (_Bool)mergeRangesPartiallyIntersectCellRange:(struct TSUCellRect)arg1;
- (struct TSUCellCoord)mergeOriginForCellID:(struct TSUCellCoord)arg1;
- (struct TSUCellRect)mergeRangeAtCellID:(struct TSUCellCoord)arg1;
- (_Bool)unmergeCellRange:(struct TSUCellRect)arg1;
- (_Bool)mergeCellRange:(struct TSUCellRect)arg1;
- (id)fontColorAtCellID:(struct TSUCellCoord)arg1 optionalCell:(id)arg2;
- (id)stringAtCellID:(struct TSUCellCoord)arg1 optionalCell:(id)arg2;
- (_Bool)anyHiddenColumnsInCellRange:(struct TSUCellRect)arg1;
- (_Bool)anyHiddenRowsInCellRange:(struct TSUCellRect)arg1;
- (unsigned short)indexOfVisibleColumnAfterAndIncludingColumnAtIndex:(unsigned short)arg1;
- (unsigned short)indexOfVisibleColumnAfterColumnAtIndex:(unsigned short)arg1;
- (unsigned short)indexOfVisibleColumnBeforeAndIncludingColumnAtIndex:(unsigned short)arg1;
- (unsigned short)indexOfVisibleColumnBeforeColumnAtIndex:(unsigned short)arg1;
- (unsigned int)indexOfVisibleRowAfterAndIncludingRowAtIndex:(unsigned int)arg1;
- (unsigned int)indexOfVisibleRowAfterRowAtIndex:(unsigned int)arg1;
- (unsigned int)indexOfVisibleRowBeforeAndIncludingRowAtIndex:(unsigned int)arg1;
- (unsigned int)indexOfVisibleRowBeforeRowAtIndex:(unsigned int)arg1;
- (_Bool)hasHiddenColumnAtIndex:(unsigned short)arg1;
- (_Bool)hasHiddenRowAtIndex:(unsigned int)arg1;
- (unsigned int)numberOfVisibleBodyColumns;
- (unsigned int)numberOfUserVisibleBodyRows;
- (unsigned int)numberOfVisibleBodyRows;
- (_Bool)isCellRangeHidden:(struct TSUCellRect)arg1;
- (_Bool)anyHiddenRowsInCellRange:(struct TSUCellRect)arg1 forAction:(unsigned char)arg2;
- (unsigned char)hidingActionForColumnAtIndex:(unsigned short)arg1;
- (unsigned char)hidingActionForRowAtIndex:(unsigned int)arg1;
- (id)indexesOfVisibleRowsInRowRange:(id)arg1;
- (id)indexesOfUserVisibleRowsInCellRange:(struct TSUCellRect)arg1;
- (id)indexesOfVisibleRowsInCellRegion:(id)arg1;
- (id)indexesOfVisibleRowsInCellRange:(struct TSUCellRect)arg1;
- (id)indexesOfUserHiddenRowsInCellRange:(struct TSUCellRect)arg1;
- (id)indexesOfHiddenRowsInCellRange:(struct TSUCellRect)arg1;
- (id)indexesOfVisibleColumnsInColumnRange:(id)arg1;
- (id)indexesOfVisibleColumnsInCellRegion:(id)arg1;
- (id)indexesOfVisibleColumnsInCellRange:(struct TSUCellRect)arg1;
- (id)indexesOfUserHiddenColumnsInCellRange:(struct TSUCellRect)arg1;
- (id)indexesOfHiddenColumnsInCellRange:(struct TSUCellRect)arg1;
- (_Bool)hasHiddenColumnAtIndex:(unsigned short)arg1 forAction:(unsigned char)arg2;
- (_Bool)hasHiddenRowAtIndex:(unsigned int)arg1 forAction:(unsigned char)arg2;
- (unsigned int)numberOfHiddenColumnsInCellRange:(struct TSUCellRect)arg1;
- (unsigned int)numberOfUserHiddenRowsInCellRange:(struct TSUCellRect)arg1;
- (unsigned int)numberOfHiddenRowsInCellRange:(struct TSUCellRect)arg1;
- (_Bool)hasUserHiddenColumns;
- (_Bool)hasUserHiddenRows;
- (_Bool)hasHiddenColumns;
- (_Bool)hasHiddenRows;
- (unsigned int)numberOfUserHiddenColumns;
- (unsigned int)numberOfUserHiddenRows;
- (unsigned int)numberOfHiddenColumns;
- (unsigned int)numberOfHiddenRows;
- (_Bool)showColumnAtIndex:(unsigned short)arg1 forAction:(unsigned char)arg2;
- (_Bool)showRowAtIndex:(unsigned int)arg1 forAction:(unsigned char)arg2;
- (_Bool)hideColumnAtIndex:(unsigned short)arg1 forAction:(unsigned char)arg2;
- (_Bool)hideRowAtIndex:(unsigned int)arg1 forAction:(unsigned char)arg2;
- (void)swapRowAtIndex:(unsigned int)arg1 withRowAtIndex:(unsigned int)arg2;
- (void)moveColumnRange:(struct _NSRange)arg1 toColumnIndex:(unsigned short)arg2;
- (void)moveRowRange:(struct _NSRange)arg1 toRowIndex:(unsigned int)arg2;
- (void)removeColumnsAtIndexes:(id)arg1;
- (_Bool)hasDeferredImportActions;
- (void)processDeferredImportActions;
- (void)importDeferredRemoveGroupingRowsAtIndexes:(id)arg1;
- (void)removeRowsAtIndexes:(id)arg1;
- (void)removeColumnsAtIndex:(unsigned short)arg1 count:(unsigned int)arg2;
- (void)removeRowsAtIndex:(unsigned int)arg1 count:(unsigned int)arg2;
- (int)insertRowsAtIndex:(unsigned int)arg1 uids:(const vector_4dc5f307 *)arg2 metadatas:(id)arg3 tableArea:(unsigned long long)arg4 unsetFilterHidingAction:(_Bool)arg5;
- (int)insertRowsAtIndex:(unsigned int)arg1 uids:(const vector_4dc5f307 *)arg2 metadatas:(id)arg3 tableArea:(unsigned long long)arg4;
- (int)insertColumnsAtIndex:(unsigned short)arg1 uids:(const vector_4dc5f307 *)arg2 metadatas:(id)arg3 tableArea:(unsigned long long)arg4;
- (void)insertColumnsAtIndex:(unsigned short)arg1 count:(unsigned int)arg2 addBefore:(_Bool)arg3;
- (void)insertRowsAtIndex:(unsigned int)arg1 count:(unsigned int)arg2 addBefore:(_Bool)arg3;
- (struct TSUCellRect)baseColumnRange;
- (struct TSUCellRect)categoryColumnRange;
- (struct TSUCellRect)bottomCornerRange;
- (struct TSUCellRect)topCornerRange;
- (struct TSUCellRect)footerRowRange;
- (struct TSUCellRect)actualHeaderColumnRange;
- (struct TSUCellRect)headerColumnRange;
- (struct TSUCellRect)headerRowRange;
- (struct TSUCellRect)bodyRowRange;
- (struct TSUCellRect)bodyColumnRange;
- (struct TSUCellRect)bodyRange;
- (struct TSUCellRect)range;
- (double)computeDefaultFontHeightForTableStyleArea:(unsigned long long)arg1;
- (void)computeDefaultRowHeight;
- (void)setHeight:(double)arg1 ofRowAtIndex:(unsigned int)arg2;
- (void)setWidth:(double)arg1 ofColumnAtIndex:(unsigned short)arg2;
- (double)widthOfColumnAtIndex:(unsigned short)arg1 isDefault:(out _Bool *)arg2;
- (double)heightOfRowAtIndex:(unsigned int)arg1 isDefault:(out _Bool *)arg2;
- (struct TSUCellCoord)cellIDBelowCellID:(struct TSUCellCoord)arg1;
- (struct TSUCellCoord)cellIDAboveCellID:(struct TSUCellCoord)arg1;
- (struct TSUCellCoord)cellIDRightOfCellID:(struct TSUCellCoord)arg1;
- (struct TSUCellCoord)cellIDLeftOfCellID:(struct TSUCellCoord)arg1;
- (unsigned long long)numberOfCells;
- (id)chromeLabelForCellID:(struct TSUCellCoord)arg1;
- (id)chromeLabelForRow:(unsigned int)arg1;
- (id)chromeLabelForColumn:(unsigned short)arg1;
- (id)cellRangeName:(struct TSCERangeCoordinate)arg1 usedSymbolicName:(out _Bool *)arg2;
- (id)columnNameForColumnIndex:(unsigned short)arg1 withFallbackFormat:(id)arg2;
- (id)columnNameForColumnIndex:(unsigned short)arg1;
- (id)rowNameForCellID:(struct TSUCellCoord)arg1 restrictToBodyRange:(_Bool)arg2;
- (id)columnNameForCellID:(struct TSUCellCoord)arg1 restrictToBodyRange:(_Bool)arg2;
- (id)p_stringValueAtCellID:(struct TSUCellCoord)arg1;
- (id)conditionalStyleSetAtCellID:(struct TSUCellCoord)arg1;
- (id)textStyleAtCellID:(struct TSUCellCoord)arg1 isDefault:(out _Bool *)arg2;
- (id)cellStyleAtCellID:(struct TSUCellCoord)arg1 isDefault:(out _Bool *)arg2;
- (_Bool)textStyle:(id)arg1 isEqualToDefaultTextStyleForCellID:(struct TSUCellCoord)arg2;
- (_Bool)cellStyle:(id)arg1 isEqualToDefaultCellStyleForCellID:(struct TSUCellCoord)arg2;
- (id)textStyleForCellWithEmptyStyleAtCellID:(struct TSUCellCoord)arg1 isDefault:(out _Bool *)arg2;
- (id)defaultTextStyleForTableStyleArea:(unsigned long long)arg1;
- (id)defaultTextStyleForCellID:(struct TSUCellCoord)arg1;
- (id)cellStyleForCellWithEmptyStyleAtCellID:(struct TSUCellCoord)arg1 isDefault:(out _Bool *)arg2;
- (id)defaultCellStyleForTableStyleArea:(unsigned long long)arg1;
- (id)defaultCellStyleForCellID:(struct TSUCellCoord)arg1;
- (id)textStyleOfColumnAtIndex:(unsigned short)arg1 isDefault:(out _Bool *)arg2;
- (id)cellStyleOfColumnAtIndex:(unsigned short)arg1 isDefault:(out _Bool *)arg2;
- (int)setTextStyle:(id)arg1 ofColumnAtIndex:(unsigned short)arg2;
- (int)setTextStyle:(id)arg1 ofColumnAtUID:(const UUIDData_5fbc143e *)arg2;
- (int)setCellStyle:(id)arg1 ofColumnAtUID:(const UUIDData_5fbc143e *)arg2;
- (id)textStyleOfRowAtIndex:(unsigned int)arg1 isDefault:(out _Bool *)arg2;
- (id)cellStyleOfRowAtIndex:(unsigned int)arg1 isDefault:(out _Bool *)arg2;
- (int)setTextStyle:(id)arg1 ofRowAtUID:(const UUIDData_5fbc143e *)arg2;
- (int)setCellStyle:(id)arg1 ofRowAtUID:(const UUIDData_5fbc143e *)arg2;
- (int)cellValueTypeAtCellID:(struct TSUCellCoord)arg1;
- (int)getCell:(id)arg1 atCellID:(struct TSUCellCoord)arg2 holdingReadLockWithAccessController:(id)arg3;
- (id)cellMapForRegion:(id)arg1 uidBased:(_Bool)arg2 suppressMergeContent:(_Bool)arg3;
- (int)setCellsWithCellMap:(id)arg1 ignoreFormulas:(_Bool)arg2 skipDirtyingNonFormulaCells:(_Bool)arg3;
- (int)setCell:(id)arg1 atCellUID:(const struct TSTCellUID *)arg2 ignoreFormula:(_Bool)arg3 clearImportWarnings:(_Bool)arg4;
- (int)setCell:(id)arg1 atCellCoord:(struct TSUCellCoord)arg2;
- (struct TSCEFormula *)formulaAtCellID:(struct TSUCellCoord)arg1;
- (void)convertFormulasToUidForm:(id)arg1 atCellID:(struct TSUCellCoord)arg2;
- (void)convertFormulasToUidForm:(id)arg1 atCellID:(struct TSUCellCoord)arg2 preserveHostCell:(_Bool)arg3;
- (_Bool)hasFormulaAtCellID:(struct TSUCellCoord)arg1;
- (id)cellAtCellID:(struct TSUCellCoord)arg1;
- (int)getCell:(id)arg1 atCellID:(struct TSUCellCoord)arg2;
- (int)getCell:(id)arg1 atCellID:(struct TSUCellCoord)arg2 suppressCellBorder:(_Bool)arg3;
- (_Bool)cellExistsAtCellID:(struct TSUCellCoord)arg1;
- (int)getDefaultCell:(out id)arg1 forCellID:(struct TSUCellCoord)arg2;
- (int)getDefaultCell:(id)arg1 forTableStyleArea:(unsigned long long)arg2;
- (id)tableAreasForCellRange:(struct TSUCellRect)arg1;
- (unsigned long long)tableStyleAreaForRow:(unsigned int)arg1;
- (unsigned long long)tableStyleAreaForCellID:(struct TSUCellCoord)arg1;
- (unsigned long long)tableStyleAreaForCellUID:(const struct TSTCellUID *)arg1;
- (unsigned long long)tableAreaForColumn:(unsigned short)arg1;
- (unsigned long long)tableAreaForRow:(unsigned int)arg1;
- (unsigned long long)tableAreaForDroppingRowAtIndex:(unsigned int)arg1;
- (unsigned long long)tableAreaForCellID:(struct TSUCellCoord)arg1;
- (id)cellRegionForTableStyleArea:(unsigned long long)arg1;
- (struct TSUCellRect)cellRangeForTableArea:(unsigned long long)arg1;
- (_Bool)cellIDIsLegal:(struct TSUCellCoord)arg1;
- (void)chooseUniqueNameInContainer:(id)arg1 forPaste:(_Bool)arg2 needsNewName:(_Bool)arg3 avoidNames:(id)arg4;
- (void)chooseUniqueNameInContainer:(id)arg1 forPaste:(_Bool)arg2 needsNewName:(_Bool)arg3;
- (void)chooseUniqueNameInContainer:(id)arg1 forPaste:(_Bool)arg2;
- (int)parseNumberFromTableName:(id)arg1;
- (id)bandedFillObject;
- (_Bool)useBandedFill;
- (_Bool)canTranspose;
- (_Bool)hasFilterRulesInBaseColumns:(id)arg1;
- (void)dirtyFilterState;
- (void)filterSetUpdated;
- (_Bool)hasActiveFilters;
- (void)setFilterSetType:(int)arg1;
- (void)enableFilterSet:(_Bool)arg1;
- (void)setNeedsFilterFormulaRewriteForImport:(_Bool)arg1;
- (_Bool)needsFilterFormulaRewriteForImport;
- (id)duplicateFilterSetInUidForm;
- (id)duplicateFilterSet;
- (id)sortTagsForCellsInColumns:(const vector_8d85e9cb *)arg1 rows:(id)arg2;
- (void)resetSortRuleReferenceTrackerForInsert;
- (void)notifyAboutStructuredTextImportState;
- (void)getTextPropertiesWithCell:(id)arg1 cellID:(struct TSUCellCoord)arg2 wraps:(_Bool *)arg3 alignment:(int *)arg4 verticalAlignment:(int *)arg5 padding:(id *)arg6;
- (void)modifiedTextPropertiesForCategorizedCellAtCellID:(struct TSUCellCoord)arg1 wraps:(_Bool *)arg2 alignment:(int *)arg3 padding:(id *)arg4;
- (void)applyWritingDirection:(int)arg1 toCell:(id)arg2 cellID:(struct TSUCellCoord)arg3;
- (int)writingDirectionForCellwithTableDefault:(id)arg1;
@property(readonly, nonatomic) TSCEOwnerUidMapper *identityOwnerUIDMapper;
@property(readonly, nonatomic) TSCEOwnerUidMapper *ownerUIDMapper;
- (void)bakeFormulas;
- (void)setDrawableIsBeingCopied:(_Bool)arg1;
- (void)setStylesheetForUpgradeToSingleStylesheet:(id)arg1;
- (void)upgradeDuringDocumentUpgradeIfNeeded:(unsigned long long)arg1;
- (void)setStyleNetwork:(id)arg1;
- (id)allAnnotations;
- (id)commentHostingAtCellID:(struct TSUCellCoord)arg1;
- (id)commentHostingAtCellID:(struct TSUCellCoord)arg1 forCommentStorage:(id)arg2;
- (void)clearCommentHostingMapForCommentStorage:(id)arg1;
- (void)postCommentNotificationForStorage:(id)arg1 atCellID:(struct TSUCellCoord)arg2 notificationKey:(id)arg3;
- (int)removeCommentStorageAtCellUID:(const struct TSTCellUID *)arg1;
- (int)setCommentStorage:(id)arg1 atCellUID:(const struct TSTCellUID *)arg2;
- (_Bool)hasCommentAtCellID:(struct TSUCellCoord)arg1;
- (_Bool)isEquivalentForCrossDocumentPasteMasterComparison:(id)arg1 styleComparisonBlock:(CDUnknownBlockType)arg2;
- (void)upgradeFormatsForCustomFormatListU2_0;
- (void)prepareForPasteWithSourceOffset:(CDStruct_1ef3fb1f)arg1;
- (void)didReplaceTextsInStoragesWithPlaceHolderString;
- (void)p_initializeDefaultHeight:(double)arg1 andWidth:(double)arg2;
@property(readonly, nonatomic) _Bool supportsMultipleColumns;
@property(readonly, nonatomic) _Bool preventsChangeTracking;
@property(readonly, nonatomic) _Bool preventsComments;
@property(readonly, nonatomic) _Bool textIsLinked;
@property(readonly, nonatomic) _Bool textIsVertical;
@property(readonly, nonatomic) _Bool autoListTermination;
@property(readonly, nonatomic) _Bool autoListRecognition;
- (void)didCopy;
- (void)willCopyWithOtherDrawables:(id)arg1;
- (void)assertCollaborationConvergence;
- (_Bool)contentsAreRightToLeft;
- (id)geometryForRTLTableWithGeometry:(id)arg1;
- (void)setInsertionCenterPosition:(struct CGPoint)arg1;
- (_Bool)shouldCancelScrollingToSelectionPath:(id)arg1 forChanges:(id)arg2;
- (id)presetKind;
- (_Bool)prohibitsModificationToChildren;
- (id)infoForSelectionPath:(id)arg1;
@property(readonly, nonatomic) NSArray *childInfos;
- (id)mergedContainedStorages;
- (void)replaceReferencedStylesUsingBlock:(CDUnknownBlockType)arg1;
- (id)referencedStyles;
- (void)enumerateAllAnnotationsInModelWithHitBlock:(CDUnknownBlockType)arg1;
- (id)searchForAnnotationsWithHitBlock:(CDUnknownBlockType)arg1;
- (void)acceptVisitor:(id)arg1;
- (id)childEnumerator;
- (_Bool)canAspectRatioLockBeChangedByUser;
- (void)scaleInfoGeometry:(struct CGSize)arg1;
@property(nonatomic) long long contentWritingDirection;
@property(copy, nonatomic) TSDInfoGeometry *geometry; // @dynamic geometry;
- (void)setPrimitiveGeometry:(id)arg1;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (void)p_bakeMixedCellStrokesIntoTable:(id)arg1 outgoingTable:(id)arg2 incomingTable:(id)arg3 fraction:(double)arg4;
- (long long)mixingTypeWithObject:(id)arg1 context:(id)arg2;
- (_Bool)suppliesFinalTextures;
- (_Bool)requiresStagesBuildingInReverse;
- (unsigned long long)textureDeliveryStyleFromDeliveryString:(id)arg1;
- (id)textureDeliveryStylesLocalized:(_Bool)arg1 animationFilter:(id)arg2;
- (unsigned long long)chunkCountForTextureDeliveryStyle:(unsigned long long)arg1 animationFilter:(id)arg2;
@property(copy, nonatomic) TSTTableFilterSet *filterSet;
@property(retain, nonatomic) TSTStructuredTextImportRecord *textImportRecord;
- (void)notifyTableOfNewResults;
- (id)objectToArchiveInDependencyTracker;
- (UUIDData_5fbc143e)formulaOwnerUID;
- (_Bool)registerLast;
- (void)performReadForOneOffFormulaEvaluation:(id)arg1 forCellCoord:(struct TSUCellCoord)arg2;
- (void)unregisterFromCalcEngine:(id)arg1;
- (void)registerWithCalcEngineForDocumentLoad:(id)arg1;
- (int)registerWithCalcEngine:(id)arg1;
- (_Bool)isRegisteredWithCalcEngine:(id)arg1;
- (id)allRichTextStorages;
- (_Bool)hasFormulas;
@property(readonly, retain, nonatomic) NSArray *columnWidths;
@property(readonly, retain, nonatomic) NSArray *rowHeights;
- (unsigned long long)numberOfPopulatedCells;
- (id)newCell;
- (unsigned long long)numberOfComments;
@property(nonatomic) _Bool wasUnarchivedFromAProvidedTable;
@property(nonatomic) _Bool presetNeedsStrongOwnership;
@property(readonly, nonatomic) TSTCellWillChangeDistributor *cellWillChangeDistributor;
@property(readonly, nonatomic) TSTStrokeSidecar *strokeSidecar;
@property(readonly, nonatomic) TSTSortRuleReferenceTracker *sortRuleReferenceTracker;
@property(copy, nonatomic) TSTTableSortOrder *sortOrder;
@property(readonly, nonatomic) TSTPencilAnnotationOwner *pencilAnnotationOwner;
- (void)upgradeHiddenStates;
@property(readonly, nonatomic) TSTHiddenStatesOwner *hiddenStatesOwner;
@property(readonly, nonatomic) TSTCategoryOwner *categoryOwner;
@property(readonly, nonatomic) UUIDData_5fbc143e conditionalStyleFormulaOwnerUID;
@property(readonly, nonatomic) TSTConditionalStyleFormulaOwner *conditionalStyleFormulaOwner;
@property(readonly, nonatomic) TSTConcurrentMutableCellUIDSet *cellsToInvalidateNonoverflowingAfterRecalc;
@property(readonly, nonatomic) TSTConcurrentMutableCellUIDSet *cellsToInvalidateAfterRecalc;
@property(retain, nonatomic) TSWPShapeStyle *tableNameShapeStyle;
@property(retain, nonatomic) TSWPParagraphStyle *tableNameStyle;
@property(retain, nonatomic) TSWPParagraphStyle *labelLevel5TextStyle;
@property(retain, nonatomic) TSWPParagraphStyle *labelLevel4TextStyle;
@property(retain, nonatomic) TSWPParagraphStyle *labelLevel3TextStyle;
@property(retain, nonatomic) TSWPParagraphStyle *labelLevel2TextStyle;
@property(retain, nonatomic) TSWPParagraphStyle *labelLevel1TextStyle;
@property(retain, nonatomic) TSWPParagraphStyle *categoryLevel5TextStyle;
@property(retain, nonatomic) TSWPParagraphStyle *categoryLevel4TextStyle;
@property(retain, nonatomic) TSWPParagraphStyle *categoryLevel3TextStyle;
@property(retain, nonatomic) TSWPParagraphStyle *categoryLevel2TextStyle;
@property(retain, nonatomic) TSWPParagraphStyle *categoryLevel1TextStyle;
@property(retain, nonatomic) TSWPParagraphStyle *footerRowTextStyle;
@property(retain, nonatomic) TSWPParagraphStyle *headerColumnTextStyle;
@property(retain, nonatomic) TSWPParagraphStyle *headerRowTextStyle;
@property(retain, nonatomic) TSWPParagraphStyle *bodyTextStyle;
@property(retain, nonatomic) TSTCellStyle *labelLevel5CellStyle;
@property(retain, nonatomic) TSTCellStyle *labelLevel4CellStyle;
@property(retain, nonatomic) TSTCellStyle *labelLevel3CellStyle;
@property(retain, nonatomic) TSTCellStyle *labelLevel2CellStyle;
@property(retain, nonatomic) TSTCellStyle *labelLevel1CellStyle;
@property(retain, nonatomic) TSTCellStyle *categoryLevel5CellStyle;
@property(retain, nonatomic) TSTCellStyle *categoryLevel4CellStyle;
@property(retain, nonatomic) TSTCellStyle *categoryLevel3CellStyle;
@property(retain, nonatomic) TSTCellStyle *categoryLevel2CellStyle;
@property(retain, nonatomic) TSTCellStyle *categoryLevel1CellStyle;
@property(retain, nonatomic) TSTCellStyle *footerRowCellStyle;
@property(retain, nonatomic) TSTCellStyle *headerColumnCellStyle;
@property(retain, nonatomic) TSTCellStyle *headerRowCellStyle;
@property(retain, nonatomic) TSTCellStyle *bodyCellStyle;
@property(retain, nonatomic) TSTTableStyle *tableStyle;
@property(retain, nonatomic) TSTTableStylePreset *tableStylePreset;
@property(nonatomic) _Bool styleApplyClearsAll;
@property(readonly, nonatomic) _Bool hasAlternatingRows;
@property(readonly, nonatomic) _Bool hasTableBorder;
@property(readonly, nonatomic) int tableWritingDirection;
@property(nonatomic) _Bool repeatingHeaderColumnsEnabled;
@property(nonatomic) _Bool repeatingHeaderRowsEnabled;
@property(readonly, nonatomic) TSDStroke *tableNameBorderStroke;
@property(nonatomic) _Bool tableNameBorderEnabled;
@property(nonatomic) double tableNameHeight;
@property(nonatomic) _Bool tableNameEnabled;
@property(retain, nonatomic) NSString *tableName;
@property(nonatomic) double defaultColumnWidth;
@property(nonatomic) double defaultRowHeight;
@property(nonatomic) _Bool headerColumnsFrozen;
@property(nonatomic) _Bool headerRowsFrozen;
@property(readonly, nonatomic) unsigned int maxNumberOfHeaderColumns;
@property(readonly, nonatomic) unsigned int minNumberOfHeaderColumns;
@property(nonatomic) unsigned int numberOfFooterRows;
@property(nonatomic) unsigned int numberOfHeaderColumns;
@property(nonatomic) unsigned int numberOfHeaderRows;
- (struct TSCERangeCoordinate)tableRangeCoordinate;
@property(readonly, nonatomic) unsigned short numberOfColumns;
@property(readonly, nonatomic) unsigned int numberOfRows;
@property(nonatomic) _Bool wasCut;
@property(readonly, nonatomic) NSUUID *nsTableUID;
- (void)clearFromTableUID;
@property(nonatomic) UUIDData_5fbc143e fromTableUID;
@property(nonatomic) UUIDData_5fbc143e tableUID;
@property(nonatomic) TSCECalculationEngine *calcEngine;
@property(readonly, nonatomic, getter=isNewlyImported) _Bool newlyImported;
@property(readonly, nonatomic, getter=isReimportable) _Bool reimportable;
- (_Bool)supportsRichTextUndoAtCellID:(struct TSUCellCoord)arg1;
- (_Bool)supportsAttachedComments;
- (int)elementKind;
- (id)p_masterLayoutCreateIfNeeded:(_Bool)arg1;
- (void)clearPartitioner;
- (_Bool)isSelectable;
- (_Bool)supportsHyperlinks;
- (id)resolver;
- (id)baseTableModel;
- (void)setTableModelPrivate:(id)arg1;
- (id)tableModelPrivate;
- (id)tableModel;
- (Class)tableModelClass;
- (_Bool)isSafeToConvertToText;
- (_Bool)isSafeToConvertToAttributedString;
- (_Bool)isSafeToConvertToImageForImagePaste;
- (_Bool)isSafeToConvertToImage;
- (double)masterLayoutEffectiveTableNameHeight;
- (void)shiftGeometryToIncludeTableNameHeight;
- (id)componentRootObject;
- (id)additionalObjectsToCopy;
- (id)p_negativeImageFill;
- (id)p_positiveImageFill;
- (void)p_setFillOnCell:(id)arg1 positive:(_Bool)arg2;
- (void)p_setFormula:(struct TSCEFormula)arg1 atCellID:(struct TSUCellCoord)arg2;
- (void)p_setFormulaWithSymbolString:(id)arg1 atCellID:(struct TSUCellCoord)arg2;
- (void)p_setFormulaWithSymbolCellCoord:(struct TSUCellCoord)arg1 andAttributeCellCoord:(struct TSUCellCoord)arg2 atCellID:(struct TSUCellCoord)arg3;
- (void)p_setPopupMenuOnCell:(id)arg1 withItems:(id)arg2 andSelectedIndex:(double)arg3;
- (id)p_popupItemsForStrings:(id)arg1;
- (void)p_setupTableModelforStockPrototype;
- (void)p_setupTableModelforStockSwatch;
- (void)setupTableModelForPrototypeIndex:(long long)arg1 forTableInsertOnly:(_Bool)arg2;
@property(readonly, copy) NSString *description;
- (id)copyWithContext:(id)arg1;
- (void)dealloc;
- (void)willClose;
- (void)releaseMasterLayout;
- (id)_initWithContext:(id)arg1 fromSourceInfo:(id)arg2 cellRegion:(id)arg3 tableModel:(id)arg4 waitForCalcEngine:(_Bool)arg5;
- (id)_initWithContext:(id)arg1 flatteningFromCategorizedInfo:(id)arg2 cellRegion:(id)arg3 waitForCalcEngine:(_Bool)arg4;
- (id)initWithContext:(id)arg1 fromSourceInfo:(id)arg2 cellRegion:(id)arg3 waitForCalcEngine:(_Bool)arg4 flattenCategories:(_Bool)arg5;
- (id)initWithContext:(id)arg1 otherTableInfo:(id)arg2;
- (id)initWithContext:(id)arg1 geometry:(id)arg2;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 styles:(id)arg3;
- (id)initForTestingWithContext:(id)arg1 rows:(unsigned int)arg2 columns:(unsigned int)arg3;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 rows:(unsigned int)arg3 columns:(unsigned int)arg4;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 rows:(unsigned int)arg3 columns:(unsigned int)arg4 stylePreset:(id)arg5;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 rows:(unsigned int)arg3 columns:(unsigned int)arg4 styles:(id)arg5;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 rows:(unsigned int)arg3 columns:(unsigned int)arg4 stylePreset:(id)arg5 styles:(id)arg6;
- (float)floatValueForProperty:(int)arg1;
- (id)objectForProperty:(int)arg1;
- (_Bool)containsProperty:(int)arg1;
- (void)p_performCommentStorageDOLC:(id)arg1;
- (id)applyCellDiff:(id)arg1 atCellUID:(const struct TSTCellUID *)arg2 migrationMap:(id)arg3 inverseCellDiff:(id)arg4 defaultCellStyle:(id)arg5 defaultTextStyle:(id)arg6;
- (void)applyCellMap:(id)arg1 outPrunedCellMap:(id)arg2 outInverseCellMap:(id)arg3 options:(unsigned long long)arg4 stylesContainer:(id)arg5;
- (id)applyCellDiffMap:(id)arg1 migrationHelper:(id)arg2 updateProperties:(id)arg3;
- (void)p_postCommentNotificationFromDiff:(id)arg1 inverseDiff:(id)arg2 cellID:(struct TSUCellCoord)arg3;
- (long long)mediaCompatibilityTypeForData:(id)arg1 associatedHint:(id)arg2;
- (id)compatibilityCheckerForData:(id)arg1 associatedHint:(id)arg2;
- (id)p_propertyMapForReplacingImageFill:(id)arg1 atCellID:(struct TSUCellCoord)arg2;
- (struct CGSize)targetSizeForImageData:(id)arg1 associatedHint:(id)arg2;
- (id)p_imageFillAtCellID:(struct TSUCellCoord)arg1;
- (void)iterateCellsInRegion:(id)arg1 flags:(unsigned long long)arg2 searchFlags:(unsigned long long)arg3 clampingRange:(struct TSUCellRect)arg4 usingBlock:(CDUnknownBlockType)arg5;
- (void)iterateCellsInRegion:(id)arg1 flags:(unsigned long long)arg2 searchFlags:(unsigned long long)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)iterateCellsInRange:(struct TSUCellRect)arg1 flags:(unsigned long long)arg2 searchFlags:(unsigned long long)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)iterateCellsWithFlags:(unsigned long long)arg1 searchFlags:(unsigned long long)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)p_iterateCellsAndTerminateWithIterator:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)cellIteratorWithRegion:(id)arg1 flags:(unsigned long long)arg2 searchFlags:(unsigned long long)arg3 clampingRange:(struct TSUCellRect)arg4;
- (id)cellIteratorWithRegion:(id)arg1 flags:(unsigned long long)arg2 searchFlags:(unsigned long long)arg3;
- (id)cellIteratorWithRange:(struct TSUCellRect)arg1 flags:(unsigned long long)arg2 searchFlags:(unsigned long long)arg3;
- (id)cellIteratorWithFlags:(unsigned long long)arg1 searchFlags:(unsigned long long)arg2;
- (id)changeDescriptorsForReorganizingFromRowUids:(const vector_4dc5f307 *)arg1 toRowUids:(const vector_4dc5f307 *)arg2;
- (id)mappingFromRowUids:(const vector_4dc5f307 *)arg1 toRowUids:(const vector_4dc5f307 *)arg2;
- (void)rearrangeWithMapping:(id)arg1;
- (id)mappingForSortWithRules:(id)arg1 inRows:(id)arg2;
- (_Bool)isEquivalentForCrossDocumentPasteMasterComparison:(id)arg1;
- (_Bool)isRightToLeft;

// Remaining properties
@property(readonly, nonatomic, getter=isAnchoredToText) _Bool anchoredToText; // @dynamic anchoredToText;
@property(readonly, nonatomic, getter=isAttachedToBodyText) _Bool attachedToBodyText;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, nonatomic, getter=isFloatingAboveText) _Bool floatingAboveText; // @dynamic floatingAboveText;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic, getter=isInlineWithText) _Bool inlineWithText; // @dynamic inlineWithText;
@property(nonatomic) _Bool matchesObjectPlaceholderGeometry;
@property(nonatomic) TSPObject<TSDOwningAttachment> *owningAttachment; // @dynamic owningAttachment;
@property(readonly, nonatomic) TSPObject<TSDOwningAttachment> *owningAttachmentNoRecurse; // @dynamic owningAttachmentNoRecurse;
@property(nonatomic) NSObject<TSDContainerInfo> *parentInfo; // @dynamic parentInfo;
@property(readonly, nonatomic) _Bool storageChangesInvalidateWrap;
@property(readonly) Class superclass;

@end

