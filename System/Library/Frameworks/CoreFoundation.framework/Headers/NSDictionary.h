/*
* This header is generated by classdump-dyld 1.0
* on Saturday, March 2, 2019 at 4:20:31 AM Central European Standard Time
* Operating System: Version 12.1.2 (Build 16C104)
* Image Source: /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CoreFoundation/CoreFoundation-Structs.h>
#import <libobjc.A.dylib/PHFetchDictionaryAccessing.h>
#import <libobjc.A.dylib/MPCSupportedCommands.h>
#import <libobjc.A.dylib/CSCoderEncoder.h>
#import <libobjc.A.dylib/CUByteCodable.h>
#import <libobjc.A.dylib/NSFetchRequestResult.h>
#import <libobjc.A.dylib/NSCopying.h>
#import <libobjc.A.dylib/NSMutableCopying.h>
#import <libobjc.A.dylib/NSSecureCoding.h>
#import <libobjc.A.dylib/NSFastEnumeration.h>

@class NSString, NSArray, NSNumber;

@interface NSDictionary : NSObject <PHFetchDictionaryAccessing, MPCSupportedCommands, CSCoderEncoder, CUByteCodable, NSFetchRequestResult, NSCopying, NSMutableCopying, NSSecureCoding, NSFastEnumeration>

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) NSString * title; 
@property (nonatomic,readonly) NSString * bundleId; 
@property (nonatomic,readonly) NSString * creator; 
@property (nonatomic,readonly) float averageRating; 
@property (nonatomic,readonly) unsigned long long ratingCount; 
@property (nonatomic,readonly) NSString * url; 
@property (nonatomic,readonly) NSString * priceFormatted; 
@property (nonatomic,readonly) NSArray * transitModeKeys; 
@property (nonatomic,readonly) NSArray * categories; 
@property (nonatomic,readonly) NSNumber * storeID; 
@property (nonatomic,readonly) BOOL isOfficialApp; 
@property (nonatomic,readonly) BOOL isInstalled; 
@property (nonatomic,readonly) unsigned short fileHFSFlags; 
@property (nonatomic,readonly) unsigned long long fileHFSResourceForkSize; 
@property (readonly) unsigned long long count; 
+(id)dictionaryWithParametersInURLString:(id)arg1 ;
+(id)SLDictionaryWithOAuthAccessTokenResponseData:(id)arg1 ;
+(id)safari_dictionaryWithPropertyListData:(id)arg1 options:(unsigned long long)arg2 ;
+(id)safari_dictionaryWithPropertyListData:(id)arg1 ;
+(id)_serverStringDictionaryForDistance:(double)arg1 validDistance:(double)arg2 destination:(id)arg3 spoken:(BOOL)arg4 ;
+(id)_serverStringDictionaryForMapItem:(id)arg1 ;
+(id)dictionaryWithPlistData:(id)arg1 ;
+(id)dictionaryWithKeyArray:(id)arg1 defaultValue:(id)arg2 ;
+(id)dictionaryWithContentsOfURL:(id)arg1 error:(id*)arg2 ;
+(id)fm_dictionaryWithContentsOfData:(id)arg1 ;
+(id)fm_dictionaryWithContentsOfURL:(id)arg1 error:(id*)arg2 ;
+(id)dictionaryWithContentsOfData:(id)arg1 ;
+(id)createWithBytesNoCopy:(void*)arg1 length:(unsigned long long)arg2 error:(id*)arg3 ;
+(id)ak_dictionaryWithResponseData:(id)arg1 ;
+(id)ak_jsonDictionaryWithResponseData:(id)arg1 ;
+(id)_geo_dictionaryFromXPCObject:(id)arg1 ;
+(id)_geo_replyDictionaryForError:(id)arg1 key:(id)arg2 ;
+(id)MCShortenedDictionary:(id)arg1 ;
+(id)MCShortenedArray:(id)arg1 ;
+(id)MCShortenedData:(id)arg1 ;
+(id)MCShortenedObject:(id)arg1 ;
+(id)dmlmr_buildVersionKey;
+(id)dmlmr_successKey;
+(id)dmlmr_lastMigrationResultsWithSuccess:(BOOL)arg1 buildVersion:(id)arg2 ;
+(id)newWithContentsOf:(id)arg1 immutable:(BOOL)arg2 ;
+(id)dictionaryWithContentsOfURL:(id)arg1 error:(id*)arg2 ;
+(BOOL)supportsSecureCoding;
+(id)dictionaryWithContentsOfFile:(id)arg1 ;
+(id)dictionaryWithContentsOfURL:(id)arg1 ;
+(id)_alloc;
+(id)newDictionaryWithObjects:(const id*)arg1 forKeys:(const id*)arg2 count:(unsigned long long)arg3 ;
+(id)dictionaryWithDictionary:(id)arg1 copyItems:(BOOL)arg2 ;
+(id)sharedKeySetForKeys:(id)arg1 ;
+(id)dictionary;
+(id)dictionaryWithObjects:(const id*)arg1 forKeys:(const id*)arg2 count:(unsigned long long)arg3 ;
+(BOOL)supportsSecureCoding;
+(id)allocWithZone:(NSZone*)arg1 ;
+(id)dictionaryWithDictionary:(id)arg1 ;
+(id)dictionaryWithObject:(id)arg1 forKey:(id)arg2 ;
+(id)dictionaryWithObjectsAndKeys:(id)arg1 ;
+(id)dictionaryWithObjects:(id)arg1 forKeys:(id)arg2 ;
-(id)_pl_prettyDescriptionWithIndent:(long long)arg1 ;
-(id)plistArchiveWithCPLArchiver:(id)arg1 ;
-(id)initWithCPLArchiver:(id)arg1 ;
-(BOOL)MSASIsGlobalResetSync;
-(id)MSASAlbumResetSyncAlbumGUID;
-(BOOL)MSASIsLocalChange;
-(id)MSASEventIsDueToAlbumDeletionAlbumGUID;
-(id)MSASEventIsDueToAssetCollectionDeletionAssetCollectionGUID;
-(BOOL)MSASIsNotInteresting;
-(BOOL)MSASIsErrorRecovery;
-(id)MSMutableDeepCopyWithZone:(NSZone*)arg1 ;
-(id)MSDeepCopyWithZone:(NSZone*)arg1 ;
-(id)MSMutableDeepCopy;
-(id)MSDeepCopy;
-(id)objectForPlatformSpecificKey:(id)arg1 ;
-(id)_uniquedDictionary:(Class)arg1 ;
-(id)uniquedDictionary;
-(id)mutableUniquedDictionary;
-(MRMediaRemoteCommandInfoRef)commandInfoForCommand:(unsigned)arg1 ;
-(id)aaui_map:(/*^block*/id)arg1 ;
-(BOOL)_mapkit_writeBinaryPlist:(id)arg1 atomically:(BOOL)arg2 ;
-(NSNumber *)storeID;
-(id)_ratingData;
-(float)averageRating;
-(id)bestImageURLForWidth:(double)arg1 ;
-(NSArray *)transitModeKeys;
-(BOOL)isOfficialApp;
-(id)_defaultOffer;
-(unsigned long long)ratingCount;
-(NSString *)priceFormatted;
-(NSString *)creator;
-(NSString *)title;
-(NSString *)url;
-(NSString *)bundleId;
-(NSArray *)categories;
-(BOOL)isInstalled;
-(BOOL)writeToProtectedFile:(id)arg1 atomically:(BOOL)arg2 ;
-(BOOL)mf_boolForKey:(id)arg1 ;
-(int)mf_integerForKey:(id)arg1 ;
-(id)DAObjectForKeyCaseInsensitive:(id)arg1 ;
-(id)DAMergeOverrideDictionary:(id)arg1 ;
-(id)dictionaryByMergingWithDictionary:(id)arg1 ;
-(id)objectForKey:(id)arg1 withDefaultValueBlock:(/*^block*/id)arg2 ;
-(id)objectOrDefaultValueForKey:(id)arg1 ;
-(id)ic_dictionaryValueForKey:(id)arg1 ;
-(id)ic_numberValueForKey:(id)arg1 ;
-(int)ic_intValueForKey:(id)arg1 ;
-(id)ic_stringValueForKey:(id)arg1 ;
-(long long)ic_int64ValueForKey:(id)arg1 ;
-(id)ic_arrayValueForKey:(id)arg1 ;
-(unsigned)ic_uintValueForKey:(id)arg1 ;
-(BOOL)ic_boolValueForKey:(id)arg1 ;
-(id)cdp_sanitizedCopy;
-(id)ic_prettyDescriptionWithTabLevel:(unsigned long long)arg1 ;
-(id)objectForKey:(id)arg1 matching:(Class)arg2 ;
-(id)setOfAllObjects;
-(id)wb_stringForKey:(id)arg1 isValid:(BOOL*)arg2 ;
-(BOOL)wb_boolForKey:(id)arg1 ;
-(id)wb_URLForKey:(id)arg1 isValid:(BOOL*)arg2 ;
-(id)wb_numberForKey:(id)arg1 ;
-(id)wb_numberForKey:(id)arg1 isValid:(BOOL*)arg2 ;
-(id)wb_dictionaryForKey:(id)arg1 isValid:(BOOL*)arg2 ;
-(id)wb_arrayForKey:(id)arg1 isValid:(BOOL*)arg2 ;
-(id)wb_objectOfType:(Class)arg1 forKey:(id)arg2 isValid:(BOOL*)arg3 ;
-(id)wb_dateForKey:(id)arg1 isValid:(BOOL*)arg2 ;
-(unsigned)bw_optimalMicPolarPattern;
-(BOOL)bw_containsBuiltInMicAsAnInput;
-(id)bw_dataSourceDictionaryForDesiredMicOrientation:(unsigned)arg1 ;
-(BOOL)matchesUID:(id)arg1 ;
-(id)descriptionAtIndent:(unsigned long long)arg1 ;
-(id)_intents_indexingRepresentation;
-(id)asQueryParameterString;
-(id)_safari_sortedTupleArray;
-(id)safari_stringForKey:(id)arg1 returningNilIfEmpty:(BOOL)arg2 ;
-(id)safari_UUIDForKey:(id)arg1 ;
-(id)safari_setForKey:(id)arg1 ;
-(id)safari_mapTableForKey:(id)arg1 ;
-(id)safari_diffWithDictionary:(id)arg1 ;
-(id)safari_mapAndFilterKeysAndObjectsUsingBlock:(/*^block*/id)arg1 ;
-(id)safari_dateForKey:(id)arg1 ;
-(id)safari_URLForKey:(id)arg1 ;
-(id)safari_numberForKey:(id)arg1 ;
-(id)safari_stringForKey:(id)arg1 ;
-(BOOL)safari_boolForKey:(id)arg1 ;
-(id)safari_dataForKey:(id)arg1 ;
-(id)safari_arrayForKey:(id)arg1 ;
-(id)safari_dictionaryForKey:(id)arg1 ;
-(id)CalMutableRecursiveCopy;
-(id)mutableCopyWithElementsCopy;
-(BOOL)CalHasKeyIn:(id)arg1 ;
-(id)filteredDictionaryPassingTest:(/*^block*/id)arg1 ;
-(id)_FTFilteredDictionaryForAPS;
-(void)CKAssignToContainerWithID:(id)arg1 ;
-(id)CKDescriptionPropertiesWithPublic:(BOOL)arg1 private:(BOOL)arg2 shouldExpand:(BOOL)arg3 ;
-(id)CKFirstUrlForKeys:(id)arg1 ;
-(void)cl_json_serializeValue:(value_ostream*)arg1 ;
-(id)CDVMergeOverrideDictionary:(id)arg1 ;
-(id)CDVObjectForKeyWithNameSpace:(id)arg1 andName:(id)arg2 ;
-(id)CDVObjectForKeyCaseInsensitive:(id)arg1 ;
-(BOOL)MR_isEqualToNowPlayingInfo:(id)arg1 ;
-(unsigned long long)fileHFSResourceForkSize;
-(unsigned short)fileHFSFlags;
-(id)_stringForKey:(id)arg1 ;
-(id)_dataForKey:(id)arg1 ;
-(id)_numberForKey:(id)arg1 ;
-(id)_arrayForKey:(id)arg1 ;
-(id)_dictionaryForKey:(id)arg1 ;
-(id)__imDeepCopy;
-(id)dictionaryFromChanges:(id)arg1 ;
-(id)plistData;
-(BOOL)__imIsMutable;
-(id)keysOfChangedEntriesComparedTo:(id)arg1 ;
-(id)_cn_keysAndValues;
-(id)_cn_mapKeys:(/*^block*/id)arg1 ;
-(id)_cn_mapValues:(/*^block*/id)arg1 ;
-(id)_cn_diff:(id)arg1 ;
-(id)_cn_filter:(/*^block*/id)arg1 ;
-(void)_cn_each:(/*^block*/id)arg1 ;
-(id)_cn_map:(/*^block*/id)arg1 ;
-(void)encodeKeysAndValuesWithCSCoder:(id)arg1 filterBlock:(/*^block*/id)arg2 ;
-(void)encodeWithCSCoder:(id)arg1 ;
-(id)ssb_arrayForKey:(id)arg1 ;
-(id)ssb_stringForKey:(id)arg1 ;
-(id)ssb_dictionaryForKey:(id)arg1 ;
-(id)ssb_numberForKey:(id)arg1 ;
-(id)fm_dictionaryByDeeplySettingValuesForKeysWithDictionary:(id)arg1 ;
-(id)fm_filter:(/*^block*/id)arg1 ;
-(id)fm_dictionaryWithLowercaseKeys;
-(id)dictionaryWithLowercaseKeys;
-(id)fm_dictionaryByMappingValues:(/*^block*/id)arg1 ;
-(const char*)encodedBytesAndReturnLength:(unsigned long long*)arg1 error:(id*)arg2 ;
-(id)encodedDataAndReturnError:(id*)arg1 ;
-(id)invertedDictionary;
-(id)_web_messageText;
-(int)_web_messageLineNumber;
-(id)_web_messageSourceURL;
-(int)_web_messageType;
-(BOOL)_boolForKey:(id)arg1 ;
-(id)_ui_attributesForDictionaryContainingUIStringDrawingKeys;
-(BOOL)_ui_dictionaryContainsUIStringDrawingKeys;
-(id)aa_dictionaryByAddingEntriesFromDictionary:(id)arg1 ;
-(id)_webkit_objectForMIMEType:(id)arg1 ;
-(id)_webkit_stringForKey:(id)arg1 ;
-(BOOL)_webkit_boolForKey:(id)arg1 ;
-(id)_webkit_arrayForKey:(id)arg1 ;
-(id)_webkit_numberForKey:(id)arg1 ;
-(int)_webkit_intForKey:(id)arg1 ;
-(void)encodeWithCAMLWriter:(id)arg1 ;
-(id)CAMLType;
-(KeyValueArray*)CA_copyRenderKeyValueArray;
-(void)cl_json_serializeValue:(value_ostream*)arg1 ;
-(id)ams_filterUsingTest:(/*^block*/id)arg1 ;
-(id)ams_objectForKey:(id)arg1 defaultValue:(id)arg2 ;
-(id)ams_arrayUsingTransform:(/*^block*/id)arg1 ;
-(id)ams_dictionaryByAddingEntriesFromDictionary:(id)arg1 ;
-(id)ams_objectForCaseInsensitiveKey:(id)arg1 ;
-(id)ak_redactedCopy;
-(id)_ak_truncatedTokensCopy;
-(id)ak_mapObjects:(/*^block*/id)arg1 ;
-(id)ak_mapObjectsNullable:(/*^block*/id)arg1 ;
-(id)ak_urlQueryString;
-(id)_geo_errorForKey:(id)arg1 ;
-(id)_geo_newXPCObject;
-(id)_placeOrCurrentLocation:(BOOL*)arg1 ;
-(id)MCMutableDeepCopyWithZone:(NSZone*)arg1 ;
-(id)MCDeepCopyWithZone:(NSZone*)arg1 ;
-(BOOL)writeToBinaryFile:(id)arg1 atomically:(BOOL)arg2 ;
-(id)MCMutableDeepCopy;
-(id)MCDeepCopy;
-(id)MCRetainRequiredObjectKey:(id)arg1 type:(Class)arg2 errorDomain:(id)arg3 missingDataCode:(long long)arg4 missingDataErrorString:(id)arg5 invalidDataCode:(long long)arg6 invalidDataErrorString:(id)arg7 outError:(id*)arg8 ;
-(id)MCRetainOptionalObjectKey:(id)arg1 type:(Class)arg2 errorDomain:(id)arg3 invalidDataCode:(long long)arg4 invalidDataErrorString:(id)arg5 outError:(id*)arg6 ;
-(id)MCRetainRequiredNonZeroLengthStringKey:(id)arg1 errorDomain:(id)arg2 missingDataCode:(long long)arg3 missingDataErrorString:(id)arg4 invalidDataCode:(long long)arg5 invalidDataErrorString:(id)arg6 outError:(id*)arg7 ;
-(id)MCRetainOptionalNonZeroLengthStringKey:(id)arg1 errorDomain:(id)arg2 invalidDataCode:(long long)arg3 invalidDataErrorString:(id)arg4 outError:(id*)arg5 ;
-(id)MCShortenedPlistDescription;
-(id)dmlmr_success;
-(id)dmlmr_buildVersion;
-(id)dictionaryChanging:(id)arg1 to:(id)arg2 ;
-(id)un_nonEmptyCopy;
-(id)un_safeCastObjectForKey:(id)arg1 class:(Class)arg2 ;
-(id)_LS_safeObjectForKey:(id)arg1 ofType:(Class)arg2 ;
-(unsigned long long)_LS_integerForKey:(id)arg1 ;
-(BOOL)_LS_BoolForKey:(id)arg1 ;
-(BOOL)_LS_containsKey:(id)arg1 ;
-(id)ls_resolvePlugInKitInfoPlistWithDictionary:(id)arg1 ;
-(id)ls_insertExtensionPointVersion:(id)arg1 ;
-(id)_parseQueryForIdentifiers:(id)arg1 ;
-(unsigned long long)_hashQuery;
-(id)bs_safeURLForKey:(id)arg1 ;
-(id)bs_safeArrayForKey:(id)arg1 ;
-(id)bs_safeDictionaryForKey:(id)arg1 ;
-(id)bs_dictionaryByAddingEntriesFromDictionary:(id)arg1 ;
-(BOOL)bs_boolForKey:(id)arg1 ;
-(id)bs_safeObjectForKey:(id)arg1 ofType:(Class)arg2 ;
-(id)bs_safeNumberForKey:(id)arg1 ;
-(id)bs_safeStringForKey:(id)arg1 ;
-(id)bs_filter:(/*^block*/id)arg1 ;
-(void)bs_each:(/*^block*/id)arg1 ;
-(id)replacementObjectForPortCoder:(id)arg1 ;
-(id)_web_numberForKey:(id)arg1 ;
-(int)_web_intForKey:(id)arg1 ;
-(id)_web_objectForMIMEType:(id)arg1 ;
-(id)_web_stringForKey:(id)arg1 ;
-(id)valueForKey:(id)arg1 ;
-(id)valueForKeyPath:(id)arg1 ;
-(id)fileOwnerAccountName;
-(unsigned long long)fileOwnerAccountNumber;
-(id)fileGroupOwnerAccountName;
-(unsigned long long)fileGroupOwnerAccountNumber;
-(long long)fileSystemNumber;
-(unsigned long long)fileSystemFileNumber;
-(BOOL)fileExtensionHidden;
-(BOOL)fileIsImmutable;
-(BOOL)fileIsAppendOnly;
-(id)fileOwnerAccountID;
-(id)fileGroupOwnerAccountID;
-(id)fileCreationDate;
-(unsigned)fileHFSTypeCode;
-(unsigned)fileHFSCreatorCode;
-(unsigned long long)filePosixPermissions;
-(id)fileType;
-(unsigned long long)fileSize;
-(id)fileModificationDate;
-(id)_stringToWrite;
-(id)descriptionInStringsFileFormat;
-(id)initWithContentsOfURL:(id)arg1 error:(id*)arg2 ;
-(BOOL)writeToURL:(id)arg1 error:(id*)arg2 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(BOOL)writeToURL:(id)arg1 atomically:(BOOL)arg2 ;
-(id)initWithContentsOfURL:(id)arg1 ;
-(Class)classForCoder;
-(id)initWithContentsOfFile:(id)arg1 ;
-(BOOL)writeToFile:(id)arg1 atomically:(BOOL)arg2 ;
-(BOOL)__getValue:(id*)arg1 forKey:(id)arg2 ;
-(id)keyOfEntryWithOptions:(unsigned long long)arg1 passingTest:(/*^block*/id)arg2 ;
-(id)keysOfEntriesWithOptions:(unsigned long long)arg1 passingTest:(/*^block*/id)arg2 ;
-(id)keysSortedByValueWithOptions:(unsigned long long)arg1 usingComparator:(/*^block*/id)arg2 ;
-(id)invertedDictionary;
-(id)keyOfEntryPassingTest:(/*^block*/id)arg1 ;
-(id)initWithObject:(id)arg1 forKey:(id)arg2 ;
-(unsigned long long)_cfTypeID;
-(void)getKeys:(id*)arg1 ;
-(BOOL)containsKey:(id)arg1 ;
-(void)__apply:(/*function pointer*/void*)arg1 context:(void*)arg2 ;
-(id)descriptionWithLocale:(id)arg1 indent:(unsigned long long)arg2 ;
-(BOOL)isNSDictionary__;
-(unsigned long long)countForKey:(id)arg1 ;
-(id)keysSortedByValueUsingSelector:(SEL)arg1 ;
-(id)keysSortedByValueUsingComparator:(/*^block*/id)arg1 ;
-(void)enumerateKeysAndObjectsWithOptions:(unsigned long long)arg1 usingBlock:(/*^block*/id)arg2 ;
-(id)descriptionWithLocale:(id)arg1 ;
-(void)getObjects:(id*)arg1 ;
-(void)getObjects:(id*)arg1 andKeys:(id*)arg2 ;
-(unsigned long long)countByEnumeratingWithState:(SCD_Struct_NS13*)arg1 objects:(id*)arg2 count:(unsigned long long)arg3 ;
-(id)objectForKeyedSubscript:(id)arg1 ;
-(id)allValues;
-(BOOL)isEqual:(id)arg1 ;
-(unsigned long long)count;
-(id)objectForKey:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(id)allObjects;
-(unsigned long long)hash;
-(NSString *)description;
-(id)copyWithZone:(NSZone*)arg1 ;
-(BOOL)containsObject:(id)arg1 ;
-(id)objectEnumerator;
-(void)enumerateKeysAndObjectsUsingBlock:(/*^block*/id)arg1 ;
-(id)mutableCopyWithZone:(NSZone*)arg1 ;
-(BOOL)isEqualToDictionary:(id)arg1 ;
-(id)allKeys;
-(id)initWithObjects:(id)arg1 forKeys:(id)arg2 ;
-(id)keyEnumerator;
-(void)getObjects:(id*)arg1 andKeys:(id*)arg2 count:(unsigned long long)arg3 ;
-(id)initWithDictionary:(id)arg1 ;
-(id)initWithObjectsAndKeys:(id)arg1 ;
-(unsigned long long)countForObject:(id)arg1 ;
-(id)allKeysForObject:(id)arg1 ;
-(id)keysOfEntriesPassingTest:(/*^block*/id)arg1 ;
-(id)initWithDictionary:(id)arg1 copyItems:(BOOL)arg2 ;
-(id)objectsForKeys:(id)arg1 notFoundMarker:(id)arg2 ;
-(id)initWithObjects:(const id*)arg1 forKeys:(const id*)arg2 count:(unsigned long long)arg3 ;
@end

