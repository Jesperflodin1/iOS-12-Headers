/*
* This header is generated by classdump-dyld 1.0
* on Saturday, March 2, 2019 at 4:20:47 AM Central European Standard Time
* Operating System: Version 12.1.2 (Build 16C104)
* Image Source: /System/Library/Frameworks/Foundation.framework/Foundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Foundation/Foundation-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>
#import <libobjc.A.dylib/NSSecureCoding.h>

@interface NSValue : NSObject <NSCopying, NSSecureCoding>

@property (readonly) CLLocationCoordinate2D MKCoordinateValue; 
@property (readonly) SCD_Struct_NS59 MKCoordinateSpanValue; 
@property (readonly) MSVSignedRange signedRangeValue; 
@property (readonly) SCD_Struct_NS60 UIKBHandwritingPointValue; 
@property (nonatomic,readonly) CGPoint CGPointValue; 
@property (nonatomic,readonly) CGVector CGVectorValue; 
@property (nonatomic,readonly) CGSize CGSizeValue; 
@property (nonatomic,readonly) CGRect CGRectValue; 
@property (nonatomic,readonly) CGAffineTransform CGAffineTransformValue; 
@property (nonatomic,readonly) UIEdgeInsets UIEdgeInsetsValue; 
@property (nonatomic,readonly) NSDirectionalEdgeInsets directionalEdgeInsetsValue; 
@property (nonatomic,readonly) UIOffset UIOffsetValue; 
@property (readonly) CATransform3D CATransform3DValue; 
@property (readonly) const char* objCType; 
+(id)valueWithMKCoordinate:(CLLocationCoordinate2D)arg1 ;
+(id)valueWithMKCoordinateSpan:(SCD_Struct_NS59)arg1 ;
+(id)_mapkit_valueWithCGPoint:(CGPoint)arg1 ;
+(id)_mapkit_valueWithCGAffineTransform:(CGAffineTransform)arg1 ;
+(id)PDFKitValueWithPDFRect:(CGRect)arg1 ;
+(id)PDFKitValueWithPDFPoint:(CGPoint)arg1 ;
+(id)valueWithML3NameOrder:(timespec)arg1 ;
+(id)valueWithCMTime:(SCD_Struct_NS13)arg1 ;
+(id)valueWithCMTimeMapping:(SCD_Struct_NS15)arg1 ;
+(id)valueWithCMTimeRange:(SCD_Struct_NS14)arg1 ;
+(id)valueWithMSVSignedRange:(MSVSignedRange)arg1 ;
+(id)valueWithUIKBHandwritingPoint:(SCD_Struct_NS60)arg1 ;
+(id)valueWithCGPoint:(CGPoint)arg1 ;
+(id)valueWithCGSize:(CGSize)arg1 ;
+(id)valueWithCGRect:(CGRect)arg1 ;
+(id)valueWithUIOffset:(UIOffset)arg1 ;
+(id)valueWithUIEdgeInsets:(UIEdgeInsets)arg1 ;
+(id)valueWithCGAffineTransform:(CGAffineTransform)arg1 ;
+(id)valueWithDirectionalEdgeInsets:(NSDirectionalEdgeInsets)arg1 ;
+(id)valueWithCGVector:(CGVector)arg1 ;
+(id)valueWithNSDirectionalEdgeInsets:(NSDirectionalEdgeInsets)arg1 ;
+(id)_web_valueWithCGRect:(CGRect)arg1 ;
+(id)valueWithCAPoint3D:(CAPoint3D)arg1 ;
+(id)valueWithCAColorMatrix:(CAColorMatrix)arg1 ;
+(id)valueWithCATransform3D:(CATransform3D)arg1 ;
+(id)valueWithCoordinate:(SCD_Struct_NS59)arg1 ;
+(id)_geo_valueWithGEOPlaceDataComponentKey:(_GEOPlaceDataComponentKey)arg1 ;
+(id)bs_valueWithCGPoint:(CGPoint)arg1 ;
+(id)bs_valueWithCGSize:(CGSize)arg1 ;
+(id)bs_valueWithCGRect:(CGRect)arg1 ;
+(id)bs_valueWithCGAffineTransform:(CGAffineTransform)arg1 ;
+(id)valueWithCGPoint:(CGPoint)arg1 ;
+(id)valueWithWeakObject:(id)arg1 ;
+(id)valueWithEdgeInsets:(NSEdgeInsets)arg1 ;
+(BOOL)supportsSecureCoding;
+(id)allocWithZone:(NSZone*)arg1 ;
+(void)initialize;
+(id)valueWithRect:(CGRect)arg1 ;
+(id)valueWithPoint:(CGPoint)arg1 ;
+(id)valueWithPointer:(const void*)arg1 ;
+(id)valueWithBytes:(const void*)arg1 objCType:(const char*)arg2 ;
+(id)valueWithNonretainedObject:(id)arg1 ;
+(id)value:(const void*)arg1 withObjCType:(const char*)arg2 ;
+(id)valueWithRange:(NSRange)arg1 ;
+(id)valueWithSize:(CGSize)arg1 ;
-(id)cplFullDescription;
-(id)plistArchiveWithCPLArchiver:(id)arg1 ;
-(id)initWithCPLArchiver:(id)arg1 ;
-(CLLocationCoordinate2D)MKCoordinateValue;
-(SCD_Struct_NS59)MKCoordinateSpanValue;
-(CGRect)_mapkit_CGRectValue;
-(CGPoint)_mapkit_CGPointValue;
-(CGAffineTransform)_mapkit_CGAffineTransformValue;
-(id)_mapkit_initWithCGPoint:(CGPoint)arg1 ;
-(id)_mapkit_initWithCADoublePoint:(CGPoint)arg1 ;
-(CGPoint)CADoublePointValue;
-(id)_mapkit_initWithCADoubleRect:(CGRect)arg1 ;
-(CGRect)CADoubleRectValue;
-(id)_mapkit_initWithCGRect:(CGRect)arg1 ;
-(id)_mapkit_initWithZoomRegion:(SCD_Struct_NS61)arg1 ;
-(SCD_Struct_NS61)_mapkit_zoomRegionValue;
-(id)_mapkit_initWithMKMapRect:(SCD_Struct_NS62)arg1 ;
-(SCD_Struct_NS62)MKMapRectValue;
-(CGRect)PDFKitPDFRectValue;
-(CGPoint)PDFKitPDFPointValue;
-(timespec)ML3NameOrderValue;
-(SCD_Struct_NS14)CMTimeRangeValue;
-(SCD_Struct_NS13)CMTimeValue;
-(SCD_Struct_NS15)CMTimeMappingValue;
-(MSVSignedRange)signedRangeValue;
-(SCD_Struct_NS60)UIKBHandwritingPointValue;
-(CGSize)CGSizeValue;
-(CGPoint)CGPointValue;
-(CGRect)CGRectValue;
-(UIOffset)UIOffsetValue;
-(UIEdgeInsets)UIEdgeInsetsValue;
-(CGAffineTransform)CGAffineTransformValue;
-(CGVector)CGVectorValue;
-(NSDirectionalEdgeInsets)directionalEdgeInsetsValue;
-(CGRect)CGRectValue;
-(void)encodeWithCAMLWriter:(id)arg1 ;
-(id)CAMLType;
-(id)CA_interpolateValues:(id)arg1 :(id)arg2 :(id)arg3 interpolator:(const ValueInterpolator*)arg4 ;
-(id)CA_roundToIntegerFromValue:(id)arg1 ;
-(double)CA_distanceToValue:(id)arg1 ;
-(id)CA_interpolateValue:(id)arg1 byFraction:(float)arg2 ;
-(id)CA_addValue:(id)arg1 multipliedBy:(int)arg2 ;
-(CAPoint3D)CAPoint3DValue;
-(CAColorMatrix)CAColorMatrixValue;
-(Object*)CA_copyRenderValue;
-(unsigned long long)CA_copyNumericValue:(double)arg1 ;
-(CATransform3D)CATransform3DValue;
-(SCD_Struct_NS59)coordinateValue;
-(_GEOPlaceDataComponentKey)_geo_GEOPlaceDataComponentKeyValue;
-(CGPoint)bs_CGPointValue;
-(CGSize)bs_CGSizeValue;
-(CGRect)bs_CGRectValue;
-(CGAffineTransform)bs_CGAffineTransformValue;
-(BOOL)bs_getValue:(out void*)arg1 ofSize:(unsigned long long)arg2 ;
-(CGPoint)CGPointValue;
-(BOOL)isNSValue__;
-(void)getValue:(void*)arg1 size:(unsigned long long)arg2 ;
-(BOOL)_matchType:(const char*)arg1 size:(unsigned long long)arg2 strict:(BOOL)arg3 ;
-(id)weakObjectValue;
-(BOOL)_matchType:(const char*)arg1 size:(unsigned long long)arg2 ;
-(id)replacementObjectForPortCoder:(id)arg1 ;
-(id)initWithBytes:(const void*)arg1 objCType:(const char*)arg2 ;
-(NSEdgeInsets)edgeInsetsValue;
-(id)init;
-(BOOL)isEqual:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(CGPoint)pointValue;
-(CGRect)rectValue;
-(unsigned long long)hash;
-(id)description;
-(id)copyWithZone:(NSZone*)arg1 ;
-(BOOL)isEqualToValue:(id)arg1 ;
-(const char*)objCType;
-(void*)pointerValue;
-(Class)classForCoder;
-(void)getValue:(void*)arg1 ;
-(NSRange)rangeValue;
-(CGSize)sizeValue;
-(id)nonretainedObjectValue;
@end

