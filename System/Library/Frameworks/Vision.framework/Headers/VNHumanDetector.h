/*
* This header is generated by classdump-dyld 1.0
* on Saturday, March 2, 2019 at 4:30:02 AM Central European Standard Time
* Operating System: Version 12.1.2 (Build 16C104)
* Image Source: /System/Library/Frameworks/Vision.framework/Vision
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Vision/Vision-Structs.h>
#import <Vision/VNDetector.h>

@interface VNHumanDetector : VNDetector {

	TemplateObjectDetectorApply=iiiiB[2f][2f]fBBffifhog=gradient}ChnsFeat=iihog=gradient}gradient}ivector<vision::hum::DTreeApply, std::__1::allocator<vision::hum::DTreeApply> >=DTreeApply}DTreeApply}compressed_pair<vision::hum::DTreeApply *, std::__1::allocator<vision::hum::DTreeApply> >=DTreeApply}}}vector<std::__1::map<int, vision::hum::DTreeNode, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, vision::hum::DTreeNode> > >, std::__1::allocator<std::__1::map<int, vision::hum::DTreeNode, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, vision::hum::DTreeNode> > > > >=map<int, vision::hum::DTreeNode, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, vision::hum::DTreeNode> > >}map<int, vision::hum::DTreeNode, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, vision::hum::DTreeNode> > >}compressed_pair<std::__1::map<int, vision::hum::DTreeNode, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, vision::hum::DTreeNode> > > *, std::__1::allocator<std::__1::map<int, vision::hum::DTreeNode, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, vision::hum::DTreeNode> > > > >=map<int, vision::hum::DTreeNode, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, vision::hum::DTreeNode> > >}}}vector<float, std::__1::allocator<float> >=ffcompressed_pair<float *, std::__1::allocator<float> >=f}}vector<vision::hum::DTreeNode *, std::__1::allocator<vision::hum::DTreeNode *> >=DTreeNode}DTreeNode}compressed_pair<vision::hum::DTreeNode **, std::__1::allocator<vision::hum::DTreeNode *> >=DTreeNode}}}fadaBoostApply=vector<vision::hum::DTreeApply, std::__1::allocator<vision::hum::DTreeApply> >=DTreeApply}DTreeApply}compressed_pair<vision::hum::DTreeApply *, std::__1::allocator<vision::hum::DTreeApply> >=DTreeApply}}}}linearSVMApply=vector<float, std::__1::allocator<float> >=ffcompressed_pair<float *, std::__1::allocator<float> >=f}}fvector<float, std::__1::allocator<float> >=ffcompressed_pair<float *, std::__1::allocator<float> >=f}}}@}Ref mHumanDetectorAlgorithmImpl_;

}
-(BOOL)completeInitializationAndReturnError:(id*)arg1 ;
-(id)processWithOptions:(id)arg1 regionOfInterest:(CGRect)arg2 warningRecorder:(id)arg3 error:(id*)arg4 ;
-(BOOL)needsMetalContext;
-(void)dealloc;
@end

