//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIApplication.h>

#import "CLLocationManagerDelegate-Protocol.h"
#import "CalendarDebugViewControllerDelegate-Protocol.h"
#import "UIAlertViewDelegate-Protocol.h"
#import "UIApplicationDelegatePrivate-Protocol.h"
#import "UIApplicationTestingDelegate-Protocol.h"

@class ApplicationTester, CLLocationManager, CalendarDebugViewController, CalendarModel, MobileCalWindow, NSDate, NSString, RootNavigationController, UIWindow;

@interface Application : UIApplication <UIApplicationDelegatePrivate, UIApplicationTestingDelegate, CalendarDebugViewControllerDelegate, UIAlertViewDelegate, CLLocationManagerDelegate>
{
    ApplicationTester *_tester;
    CLLocationManager *_locationManager;
    _Bool _showingSplashScreen;
    _Bool _launchedFromURLOrActivity;
    RootNavigationController *_rootNavigationController;
    MobileCalWindow *_mainWindow;
    CalendarDebugViewController *_debugViewController;
    NSDate *_lastActiveTime;
    CalendarModel *_model;
    CDUnknownBlockType _applicationRequestDelayer;
}

+ (_Bool)_diagnosticsAvailable;
@property(nonatomic) _Bool launchedFromURLOrActivity; // @synthesize launchedFromURLOrActivity=_launchedFromURLOrActivity;
@property(nonatomic) _Bool showingSplashScreen; // @synthesize showingSplashScreen=_showingSplashScreen;
@property(copy, nonatomic) CDUnknownBlockType applicationRequestDelayer; // @synthesize applicationRequestDelayer=_applicationRequestDelayer;
@property(retain, nonatomic) CalendarModel *model; // @synthesize model=_model;
@property(retain, nonatomic) NSDate *lastActiveTime; // @synthesize lastActiveTime=_lastActiveTime;
@property(retain, nonatomic) CalendarDebugViewController *debugViewController; // @synthesize debugViewController=_debugViewController;
@property(retain, nonatomic) MobileCalWindow *mainWindow; // @synthesize mainWindow=_mainWindow;
@property(retain, nonatomic) RootNavigationController *rootNavigationController; // @synthesize rootNavigationController=_rootNavigationController;
- (void).cxx_destruct;
- (double)_resumeToTodayTimeout;
- (id)_calendarSyncHashesForCalendarIDs:(id)arg1;
- (void)_buildCalendarSyncHashesForCalendarIDs:(id)arg1;
- (void)locationManager:(id)arg1 didChangeAuthorizationStatus:(int)arg2;
- (void)requestLocationAuthorization;
- (void)_refreshAccountListAndViewContentsIfNeeded;
- (void)debugViewControllerDidDismiss;
- (void)_showDebugWindow;
@property(readonly, nonatomic) ApplicationTester *tester;
- (void)application:(id)arg1 didFailToContinueUserActivityWithType:(id)arg2 error:(id)arg3;
- (_Bool)application:(id)arg1 continueUserActivity:(id)arg2 restorationHandler:(CDUnknownBlockType)arg3;
- (void)_showEvent:(id)arg1 inView:(unsigned long long)arg2;
- (void)_showDate:(id)arg1 inView:(unsigned long long)arg2;
- (void)application:(id)arg1 performActionForShortcutItem:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_application:(id)arg1 statusBarTouchesEnded:(id)arg2;
- (_Bool)application:(id)arg1 runTest:(id)arg2 options:(id)arg3;
- (void)application:(id)arg1 performFetchWithCompletionHandler:(CDUnknownBlockType)arg2;
- (_Bool)_application:(id)arg1 allowsDraggingItems:(id)arg2;
- (void)applicationWillTerminate;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)_collectStats;
- (void)persistActiveViewModeSetting;
- (void)applicationWillResignActive:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)_constructAndPresentSplashScreen;
- (void)_extendedLaunchCompleted;
- (void)_topMainViewControllerCompletedExtendedLaunch;
- (void)_displayedOccurrencesChangedForTheFirstTime;
- (_Bool)application:(id)arg1 didFinishLaunchingWithOptions:(id)arg2;
- (id)_extendLaunchTest;
- (void)applicationOpenURL:(id)arg1;
- (id)eventURLFromLaunchURL:(id)arg1 isTravel:(_Bool *)arg2;
- (void)_setUpSelectedCalendars;
- (void)_setModelDateForLaunch;
- (void)_setUpModel;
@property(retain, nonatomic) UIWindow *window;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

