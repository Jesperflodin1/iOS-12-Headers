//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIScrollView.h>

#import "DayNavigationViewCellDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"

@class NSCalendar, NSDate, NSMutableArray, NSObject, NSString;
@protocol DayNavigationViewCellFactory, DayNavigationWeekScrollViewDelegate;

@interface DayNavigationWeekScrollView : UIScrollView <DayNavigationViewCellDelegate, UIGestureRecognizerDelegate>
{
    NSObject<DayNavigationViewCellFactory> *_cellFactory;
    NSMutableArray *_cells;
    double _cellWidth;
    double _firstCellX;
    double _pageAlignment;
    double _targetX;
    _Bool _isScrolling;
    _Bool _needToLayoutCells;
    _Bool _needToHighlightCellAfterScrolling;
    _Bool _recentering;
    double _contentOffsetBeforeResizeInCellWidths;
    NSCalendar *_calendar;
    NSDate *_today;
    NSDate *_selectedDate;
    long long _selectedIndex;
    long long _sideViews;
    long long _maxBufferViews;
    long long _weekLength;
    _Bool _decelerationWasLastInput;
    _Bool _eventSpringLoadingEnabled;
    id <DayNavigationWeekScrollViewDelegate> _navDelegate;
}

@property(nonatomic) _Bool eventSpringLoadingEnabled; // @synthesize eventSpringLoadingEnabled=_eventSpringLoadingEnabled;
@property(nonatomic) __weak id <DayNavigationWeekScrollViewDelegate> navDelegate; // @synthesize navDelegate=_navDelegate;
- (void).cxx_destruct;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (_Bool)dayNavigationCellShouldEnableSpringLoading;
- (void)dayNavigationCellTouchUpOccurred:(id)arg1;
- (long long)_lastVisibleIndex;
- (long long)_firstVisibleIndexInView;
- (long long)_firstVisibleIndex;
- (double)_alignXToPage:(double)arg1;
- (double)_offsetAllViews:(double)arg1;
- (_Bool)_isDateWeekend:(id)arg1;
@property(retain, nonatomic) NSDate *today;
- (void)_setCell:(id)arg1 toDate:(id)arg2;
- (id)_selectedDateAsCalendarDate;
- (void)_setOffscreenCellsHidden:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_adjustContentOffsetIfNeeded;
- (void)_adjustCellsIfNeeded;
- (void)_addNewCellToSide:(_Bool)arg1;
- (void)layoutSubviews;
- (void)didFinishScrolling;
- (void)willEndDraggingTargetX:(double)arg1;
- (void)willBeginDragging;
- (void)didScroll;
- (void)_didFinishDecelerating;
@property(readonly, nonatomic) long long firstVisibleDayOffsetFromSelectedDay;
@property(readonly, nonatomic) struct CGSize cellSize;
- (void)_layoutCells;
- (id)_weekStartForDate:(id)arg1;
- (void)sizeToFit;
- (void)_createSubviewsWithFirstVisibleDate:(id)arg1;
- (double)_cellWidth;
- (long long)_cellIndexForX:(double)arg1;
- (long long)_indexForDate:(id)arg1;
- (id)selectedDateAfterScrollingToPoint:(struct CGPoint)arg1;
- (void)contentSizeCategoryChanged;
- (void)significantTimeChangeOccurred;
- (_Bool)canAnimateToDate:(id)arg1;
- (void)setToSelectedDateAtLocation:(struct CGPoint)arg1;
- (void)setFirstVisibleDate:(id)arg1;
- (void)_setCell:(id)arg1 highlight:(_Bool)arg2 animated:(_Bool)arg3;
- (void)setCalendar:(id)arg1;
- (void)stopPulsingToday;
- (void)pulseToday;
- (void)updateHighlightIfNeeded;
- (void)setSelectedDateWithoutScrolling:(id)arg1;
- (void)setSelectedDate:(id)arg1 animated:(_Bool)arg2;
- (long long)_indexOfCellToScrollToForDateAndBuildIfNeeded:(id)arg1;
@property(readonly, nonatomic) NSObject<DayNavigationViewCellFactory> *cellFactory;
@property(readonly, nonatomic) long long cellsDisplayed;
@property(readonly, nonatomic) NSDate *startDateOfSelectedWeek;
@property(readonly, nonatomic) NSDate *selectedDate;
- (long long)_loadedBufferViewsRight;
- (long long)_loadedBufferViewsLeft;
@property(readonly, nonatomic) long long maxBufferViews;
@property(readonly, nonatomic) long long sideViews;
- (void)setBackgroundColor:(id)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)updateOverlays;
- (id)initWithFrame:(struct CGRect)arg1 calendar:(id)arg2 selectedDate:(id)arg3 cellFactory:(id)arg4 eventSpringLoadingEnabled:(_Bool)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

