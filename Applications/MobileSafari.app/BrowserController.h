//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIResponder.h>

#import "ActionPanelDelegate-Protocol.h"
#import "AddBookmarkActivityDelegate-Protocol.h"
#import "BackForwardTableViewControllerDelegate-Protocol.h"
#import "BookmarksBarViewDelegate-Protocol.h"
#import "BookmarksNavigationControllerDelegate-Protocol.h"
#import "BrowserToolbarDelegate-Protocol.h"
#import "CatalogViewControllerDelegate-Protocol.h"
#import "CompletionDetailViewControllerDelegate-Protocol.h"
#import "ContinuousReadingViewControllerDelegate-Protocol.h"
#import "DigitalHealthViewControllerDelegate-Protocol.h"
#import "LinkPreviewProvider-Protocol.h"
#import "MFMailComposeViewControllerDelegate-Protocol.h"
#import "MobileSafariWindowDelegate-Protocol.h"
#import "SFReaderAppearanceViewControllerDelegate-Protocol.h"
#import "SKStoreProductViewControllerDelegate-Protocol.h"
#import "SidebarContentDimmingViewDelegate-Protocol.h"
#import "SidebarInteractionReporterDelegate-Protocol.h"
#import "TabDocumentDelegate-Protocol.h"
#import "UIGestureRecognizerDelegatePrivate-Protocol.h"
#import "UIPopoverPresentationControllerDelegate-Protocol.h"
#import "UIScrollViewDelegate-Protocol.h"
#import "WBSDigitalHealthManagerDelegate-Protocol.h"
#import "_SFAuthenticationClient-Protocol.h"
#import "_SFBarManagerDelegate-Protocol.h"
#import "_SFBrowserKeyCommandMethods-Protocol.h"
#import "_SFDynamicBarAnimatorDelegate-Protocol.h"
#import "_SFMailContentProviderDataSource-Protocol.h"
#import "_SFNavigationBarDelegate-Protocol.h"
#import "_SFSingleBookmarkNavigationControllerDelegate-Protocol.h"
#import "_UIBasicAnimationFactory-Protocol.h"

@class ActionPanel, BookmarksBarView, BookmarksNavigationController, BrowserContainerViewController, BrowserRootViewController, BrowserToolbar, BrowserWindowController, CatalogViewControllerState, ContinuousReadingController, ContinuousReadingViewController, NSDate, NSMapTable, NSNumber, NSString, NSTimer, NSUUID, NavigationBar, RecentlyClosedTabViewController, SKStoreProductViewController, SearchStateCache, SidebarContentDimmingView, SidebarInteractionReporter, TabController, TabDocument, TabMergingController, UIAlertController, UIPinchGestureRecognizer, UIScrollView, UIStatusBar, UITapGestureRecognizer, UITextRange, UIToolbar, UIView, WBSDigitalHealthManager, WKBackForwardListItem, WKPreferences, WKProcessPool, _SFBarManager, _SFBrowserConfiguration, _SFBrowserSavedState, _SFCrashBanner, _SFDynamicBarAnimator, _SFMailContentProvider, _SFWebView;

@interface BrowserController : UIResponder <ActionPanelDelegate, AddBookmarkActivityDelegate, BackForwardTableViewControllerDelegate, BookmarksBarViewDelegate, BookmarksNavigationControllerDelegate, CatalogViewControllerDelegate, MFMailComposeViewControllerDelegate, SidebarInteractionReporterDelegate, UIGestureRecognizerDelegatePrivate, _UIBasicAnimationFactory, _SFDynamicBarAnimatorDelegate, _SFNavigationBarDelegate, UIPopoverPresentationControllerDelegate, SidebarContentDimmingViewDelegate, SFReaderAppearanceViewControllerDelegate, SKStoreProductViewControllerDelegate, _SFBarManagerDelegate, _SFBrowserKeyCommandMethods, _SFMailContentProviderDataSource, WBSDigitalHealthManagerDelegate, DigitalHealthViewControllerDelegate, BrowserToolbarDelegate, CompletionDetailViewControllerDelegate, ContinuousReadingViewControllerDelegate, LinkPreviewProvider, MobileSafariWindowDelegate, TabDocumentDelegate, UIScrollViewDelegate, _SFAuthenticationClient, _SFSingleBookmarkNavigationControllerDelegate>
{
    _Bool _antiPhishingServiceInitialized;
    _Bool _applicationIsOpaque;
    _Bool _backgrounded;
    WKBackForwardListItem *_backForwardListItemNeedingSnapshot;
    _SFBarManager *_barManager;
    BookmarksBarView *_bookmarksBar;
    double _bottomBarKeyboardOffset;
    _SFBrowserConfiguration *_cachedConfiguration;
    _SFMailContentProvider *_cachedMailContentProvider;
    _Bool _contentBorrowedForTab;
    struct UIEdgeInsets _contentInsetForContentFrame;
    ContinuousReadingController *_continuousReadingController;
    ContinuousReadingViewController *_continuousReadingViewController;
    _SFCrashBanner *_crashBanner;
    double _crashBannerDraggingOffset;
    CDUnknownBlockType _finishReaderAnimationBlock;
    struct UIEdgeInsets _horizontalScrollIndicatorBaseInsets;
    _Bool _interactivelyChangingObscuredInsets;
    _Bool _isTrackingWebViewAnimatedResize;
    _Bool _isTransitioningTabViews;
    double _lastAdjustmentForKeyboard;
    long long _lastTabSwitchKeyboardModifierFlags;
    BookmarksNavigationController *_modalBookmarksController;
    UIView *_navigationBarAuxiliaryBarsContainer;
    TabDocument *_nextContinuousItemDocument;
    UIView *_pageView;
    _Bool _presentingModalBookmarksController;
    TabDocument *_previewDocument;
    NSTimer *_previewDocumentCloseTimer;
    TabDocument *_previousContinuousItemDocument;
    TabDocument *_progressSuppressingDocument;
    NSTimer *_readerDocumentSetupTimer;
    NSDate *_resignActiveDate;
    UIView *_rootView;
    BrowserRootViewController *_rootViewController;
    UIStatusBar *_scrollingStatusBar;
    UIScrollView *_scrollView;
    SearchStateCache *_searchStateCache;
    UIView *_scrollToTopView;
    _Bool _scrollViewIsDragging;
    _Bool _shouldDisableToolbarForCatalogViewControllerPopover;
    _Bool _shouldMakeFavoritesStickyWhenReinsertingBorrowedContent;
    _Bool _showingTabOverview;
    _Bool _showingTiltedTabView;
    _Bool _statusBarStyleUpdateQueued;
    UIView *_tabBarClipperView;
    TabController *_tabController;
    UIAlertController *_tabExposeAlertController;
    _Bool _tabViewPinchActive;
    UIPinchGestureRecognizer *_tabViewPinchRecognizer;
    UIToolbar *_tiltedTabToolbar;
    NSMapTable *_uuidToTabDocumentMap;
    struct UIEdgeInsets _verticalScrollIndicatorBaseInsets;
    NSMapTable *_viewControllersPendingPresentation;
    ActionPanel *_prewarmedActionPanel;
    _Bool _isActionPanelReady;
    _Bool _hasTappedShare;
    _Bool _disableBarHiding;
    _SFDynamicBarAnimator *_dynamicBarAnimator;
    long long _dynamicBarAnimatorStateBeforeNavigationGesture;
    _Bool _pageScrollsWithBottomBar;
    _Bool _shouldShowBarsAfterDraggingDownward;
    UITapGestureRecognizer *_showBarsFromBottomBarRecognizer;
    _Bool _updatingGeometryFromDynamicBarAnimator;
    int _currentlyLoadingResourcesCount;
    TabDocument *_documentWhoseProgressIsShown;
    _Bool _isProgressEnabled;
    float _progress;
    _Bool _resourcesLoading;
    _Bool _showingProgressIndicator;
    SidebarContentDimmingView *_sidebarContentDimmingView;
    BookmarksNavigationController *_sidebarController;
    unsigned long long _sidebarControllerActiveAnimationCount;
    SidebarInteractionReporter *_sidebarInteractionReporter;
    _Bool _isSpeculativeLoadingEnabled;
    TabDocument *_speculativeLoadDocument;
    NSTimer *_speculativeLoadingStartTimer;
    NSString *_speculativeLoadURL;
    CatalogViewControllerState *_catalogViewControllerStateForSizeChange;
    _Bool _isPerformingRootViewControllerSizeTransition;
    _Bool _statusBarHeightChangedWhilePerformingRootViewControllerSizeTransition;
    long long _rootViewControllerVerticalSizeClassBeforeSizeTransition;
    long long _bookmarksPresentationStyleBeforeSizeTransition;
    _Bool _isRunningTabExposeTest;
    unsigned int _tabExposeTestLoadCount;
    unsigned int _tabExposeTestIterationsRemaining;
    _Bool _showingDemoModeAlert;
    _Bool _telemetryHasPresentedBookmarks;
    _Bool _readerViewStale;
    _Bool _readerShouldBeShownIfPossible;
    _Bool _fullScreenInPortrait;
    _Bool _usesNarrowLayout;
    _Bool _showingCrashBanner;
    _Bool _transitioningFromBookmarksPanelToSidebarForSizeChange;
    _Bool _showingTabBar;
    _Bool _privateBrowsingEnabled;
    _Bool _wantsUnifiedFieldFocused;
    _Bool _showingSidebar;
    _Bool _canFocusNavigationBarURL;
    _Bool _inNewWindowHinting;
    BrowserWindowController *_browserWindowController;
    _SFWebView *_webView;
    NSUUID *_UUID;
    BrowserToolbar *_bottomToolbar;
    TabDocument *_cachedDocumentOnContinuousTransition;
    double _lastInteractionTime;
    _SFBrowserSavedState *_savedState;
    NSNumber *_doNotTrackEnabledPreference;
    NavigationBar *_navigationBar;
    long long _favoritesState;
    WKPreferences *_wkPreferences;
    SKStoreProductViewController *_presentedStoreProductViewController;
    UITextRange *_textRangeToRestoreAfterParsecCardDismissal;
    NSString *_searchCountKey;
    WBSDigitalHealthManager *_digitalHealthManager;
}

@property(readonly, nonatomic) WBSDigitalHealthManager *digitalHealthManager; // @synthesize digitalHealthManager=_digitalHealthManager;
@property(nonatomic) _Bool inNewWindowHinting; // @synthesize inNewWindowHinting=_inNewWindowHinting;
@property(readonly, copy, nonatomic) NSString *searchCountKey; // @synthesize searchCountKey=_searchCountKey;
@property(retain, nonatomic) UITextRange *textRangeToRestoreAfterParsecCardDismissal; // @synthesize textRangeToRestoreAfterParsecCardDismissal=_textRangeToRestoreAfterParsecCardDismissal;
@property(retain, nonatomic) SKStoreProductViewController *presentedStoreProductViewController; // @synthesize presentedStoreProductViewController=_presentedStoreProductViewController;
@property(nonatomic) _Bool canFocusNavigationBarURL; // @synthesize canFocusNavigationBarURL=_canFocusNavigationBarURL;
@property(readonly, nonatomic) WKPreferences *wkPreferences; // @synthesize wkPreferences=_wkPreferences;
@property(readonly, nonatomic, getter=isShowingSidebar) _Bool showingSidebar; // @synthesize showingSidebar=_showingSidebar;
@property(nonatomic) long long favoritesState; // @synthesize favoritesState=_favoritesState;
@property(nonatomic) _Bool wantsUnifiedFieldFocused; // @synthesize wantsUnifiedFieldFocused=_wantsUnifiedFieldFocused;
@property(readonly, nonatomic) NavigationBar *navigationBar; // @synthesize navigationBar=_navigationBar;
@property(copy, nonatomic) NSNumber *doNotTrackEnabledPreference; // @synthesize doNotTrackEnabledPreference=_doNotTrackEnabledPreference;
@property(nonatomic, getter=isPrivateBrowsingEnabled) _Bool privateBrowsingEnabled; // @synthesize privateBrowsingEnabled=_privateBrowsingEnabled;
@property(readonly, nonatomic) _SFBrowserSavedState *savedState; // @synthesize savedState=_savedState;
@property(readonly, nonatomic) TabController *tabController; // @synthesize tabController=_tabController;
@property(nonatomic, getter=isShowingTabBar) _Bool showingTabBar; // @synthesize showingTabBar=_showingTabBar;
@property(nonatomic) _Bool transitioningFromBookmarksPanelToSidebarForSizeChange; // @synthesize transitioningFromBookmarksPanelToSidebarForSizeChange=_transitioningFromBookmarksPanelToSidebarForSizeChange;
@property(nonatomic, getter=isShowingCrashBanner) _Bool showingCrashBanner; // @synthesize showingCrashBanner=_showingCrashBanner;
@property(nonatomic) _Bool usesNarrowLayout; // @synthesize usesNarrowLayout=_usesNarrowLayout;
@property(nonatomic) double lastInteractionTime; // @synthesize lastInteractionTime=_lastInteractionTime;
@property(readonly, nonatomic) _Bool fullScreenInPortrait; // @synthesize fullScreenInPortrait=_fullScreenInPortrait;
@property(retain, nonatomic) TabDocument *cachedDocumentOnContinuousTransition; // @synthesize cachedDocumentOnContinuousTransition=_cachedDocumentOnContinuousTransition;
@property(retain, nonatomic) TabDocument *nextContinuousItemDocument; // @synthesize nextContinuousItemDocument=_nextContinuousItemDocument;
@property(retain, nonatomic) TabDocument *previousContinuousItemDocument; // @synthesize previousContinuousItemDocument=_previousContinuousItemDocument;
@property(nonatomic) _Bool readerShouldBeShownIfPossible; // @synthesize readerShouldBeShownIfPossible=_readerShouldBeShownIfPossible;
@property(nonatomic, getter=isReaderViewStale) _Bool readerViewStale; // @synthesize readerViewStale=_readerViewStale;
@property(readonly, nonatomic) BrowserToolbar *bottomToolbar; // @synthesize bottomToolbar=_bottomToolbar;
@property(readonly, nonatomic) NSUUID *UUID; // @synthesize UUID=_UUID;
@property(readonly, nonatomic) BrowserRootViewController *rootViewController; // @synthesize rootViewController=_rootViewController;
@property(readonly, nonatomic) _SFWebView *webView; // @synthesize webView=_webView;
@property(readonly, nonatomic) __weak BrowserWindowController *browserWindowController; // @synthesize browserWindowController=_browserWindowController;
- (void).cxx_destruct;
- (void)digitalHealthViewController:(id)arg1 didFinishDismissingLockOutViewController:(id)arg2;
- (void)_updateDigitalHealthViewFrame;
- (struct CGRect)_frameForDigitalHealthViewControllerView;
- (void)_fullyRemoveDigitalHealthTreatmentForTabDocument:(id)arg1;
- (void)_hideDigitalHealthOverlayForTabDocument:(id)arg1;
- (void)_showDigitalHealthOverlayForTabDocument:(id)arg1;
- (void)_toggleDigitalHealthOverlayGivenOverlayStates:(id)arg1 forTabDocuments:(id)arg2 dueToPolicyChange:(_Bool)arg3;
- (void)_updateDigitalHealthOverlayForTabDocuments:(id)arg1 dueToPolicyChange:(_Bool)arg2;
- (void)policyDidChangeForDigitalHealthManager:(id)arg1;
- (void)_automaticPasswordInputViewNotification:(id)arg1;
- (double)continuousReadingViewControllerNextWebViewLandingOffset:(id)arg1 includeBottomBar:(_Bool)arg2;
- (void)continuousReadingViewController:(id)arg1 didCommitToLoadItem:(id)arg2;
- (void)continuousReadingViewControllerCommitToLoadPreviousItem:(id)arg1;
- (void)continuousReadingViewControllerWillCommitToLoadNextItem:(id)arg1;
- (void)continuousReadingViewController:(id)arg1 scrollViewDidScroll:(id)arg2;
- (void)markReadingListBookmark:(id)arg1 asRead:(_Bool)arg2 postNotification:(_Bool)arg3;
- (void)prefetchNextContinuousItemIfNeeded;
- (void)setCurrentContinuousReadingItem:(id)arg1;
- (void)_setContinuousReadingPreviewView:(id)arg1;
- (void)_updateCurrentContinuousReadingItem;
- (_Bool)_isInContinuousMode;
- (void)_updateCurrentPageBannerView;
- (void)_preparePreviousContinuousDocumentIfNeeded;
- (id)_cachedDocumentForContinuousReadingItem:(id)arg1;
- (void)_loadPreviousContinuousDocumentIfNeeded;
- (struct CGRect)_frameForCurrentPageBannerView;
- (void)_commitToTabDocumentForPreviousContinuousItem;
- (void)_commitToTabDocumentForNextContinuousItem;
- (void)loadNextContinuousDocumentIfNeeded;
- (void)_startLoadDocument:(id)arg1 continuousReadingItem:(id)arg2;
- (id)_tabDocumentForNextContinuousItem;
- (void)_prepareTabDocumentForNextContinuousItemIfNeeded;
- (void)_updateCurrentPageBannerViewBeforeContinuousTransition;
- (void)tabDocumentDidChangeSafeAreaShouldAffectObscuredInsets:(id)arg1;
- (void)tabDocumentDidChangeSafeAreaInsets:(id)arg1;
- (void)closeTabDocument:(id)arg1 animated:(_Bool)arg2;
- (_Bool)tabDocumentCanCloseWindow:(id)arg1;
- (id)tabDocumentSavedSessionStateData:(id)arg1;
- (long long)tabDocumentOrderIndex:(id)arg1;
- (void)tabDocument:(id)arg1 dismissViewControllerAnimated:(id)arg2;
- (void)tabDocument:(id)arg1 presentViewControllerAnimated:(id)arg2;
- (void)tabDocumentDidEndNavigationGesture:(id)arg1 withNavigationToBackForwardListItem:(id)arg2;
- (void)tabDocumentWillEndNavigationGesture:(id)arg1 withNavigationToBackForwardListItem:(id)arg2;
- (void)tabDocumentDidBeginNavigationGesture:(id)arg1;
- (void)setAppBannerPinnedToTop:(_Bool)arg1 forTabDocument:(id)arg2;
- (void)removeAppBannerFromTabDocument:(id)arg1 animated:(_Bool)arg2;
- (void)tabDocumentDidCompleteCheckForAppBanner:(id)arg1;
- (void)composeEmailWithMailToURL:(id)arg1 forTabDocument:(id)arg2;
- (void)finishedTabExposeTest;
- (_Bool)isRunningTabExposeTest;
- (void)runTabExposeTest;
- (void)_runTabExposeTest;
- (_Bool)prepareTabExposeTest;
@property(readonly, nonatomic) TabMergingController *privateTabMergingController;
@property(readonly, nonatomic) TabMergingController *normalTabMergingController;
- (id)tabMergingControllerForPrivateBrowsing:(_Bool)arg1;
@property(readonly, nonatomic) TabMergingController *currentTabMergingController;
- (id)loadURLInNewTab:(id)arg1 title:(id)arg2 UUID:(id)arg3 inBackground:(_Bool)arg4 animated:(_Bool)arg5 fromExternalApplication:(_Bool)arg6 restoringCloudTab:(_Bool)arg7;
- (id)loadURLInNewTab:(id)arg1 inBackground:(_Bool)arg2 animated:(_Bool)arg3 fromExternalApplication:(_Bool)arg4;
- (id)loadURLInNewTab:(id)arg1 inBackground:(_Bool)arg2 animated:(_Bool)arg3;
- (id)loadURLInNewTab:(id)arg1 inBackground:(_Bool)arg2;
- (id)blankTabTitleForTabDocument:(id)arg1;
- (id)blankTabDocumentToReuse;
- (void)tabDocumentShouldBecomeActive:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)tabDocumentDidBecomeActiveDueToWindowArrangementChanges:(id)arg1;
- (_Bool)tabDocumentCanBecomeCurrentUserActivity:(id)arg1;
- (_Bool)tabDocumentSupportsOpenInNewWindow:(id)arg1;
- (void)tabController:(id)arg1 didSwitchFromTabDocument:(id)arg2 toTabDocument:(id)arg3;
- (void)tabController:(id)arg1 didCloseTabDocuments:(id)arg2 temporarily:(_Bool)arg3 closedLastDocument:(_Bool)arg4;
- (void)tabControllerDocumentCountDidChange:(id)arg1;
- (void)switchFromTabDocument:(id)arg1 toTabDocument:(id)arg2;
- (_Bool)tabDocumentCanBeginInputSessionForStreamlinedLogin:(id)arg1;
- (_Bool)tabDocumentCanDisplayModalUI:(id)arg1;
- (void)tabDocumentDidDimissPreviewedDocument:(id)arg1;
- (void)tabDocumentCommitPreviewedDocumentAsNewTab:(id)arg1 inBackground:(_Bool)arg2;
- (void)tabDocumentCommitPreviewedDocument:(id)arg1;
- (void)tabDocument:(id)arg1 didCreatePreviewDocument:(id)arg2;
- (void)_closePreviewDocumentTimerFired:(id)arg1;
- (void)_invalidatePreviewDocumentCloseTimer;
- (unsigned long long)popUpPolicyForTabDocument:(id)arg1;
- (void)tabDocumentShouldCloseAndSwitchToParentTab:(id)arg1;
- (void)tabDocument:(id)arg1 didCreateNewTabDocument:(id)arg2;
- (void)tabDocument:(id)arg1 didExtractArticleText:(id)arg2 withMetadata:(id)arg3;
- (void)tabDocument:(id)arg1 didDetectReaderAvailability:(_Bool)arg2;
- (void)tabDocumentDidAddAlert:(id)arg1;
- (_Bool)tabDocumentCanShowJavaScriptAlertConfirmOrTextInput:(id)arg1;
- (_Bool)_showingAModalAlertWillHang;
- (_Bool)tabDocumentShouldHandleCertificateError:(id)arg1;
- (_Bool)tabDocument:(id)arg1 shouldHandleAuthenticationChallenge:(id)arg2;
- (void)tabDocumentStoppedLoadingResource:(id)arg1;
- (void)tabDocumentFluidProgressRocketAnimationDidComplete:(id)arg1;
- (void)tabDocumentStartedLoadingResource:(id)arg1;
- (void)didStopLoadingResource;
- (void)didStartLoadingResource;
- (void)tabDocument:(id)arg1 progressChanged:(float)arg2;
- (void)tabDocumentDidUpdateBackForward:(id)arg1;
- (void)tabDocumentDidUpdateTitle:(id)arg1;
- (void)tabDocumentDidChangeLocationWithinPageForMainFrame:(id)arg1;
- (void)didFirstVisuallyNonEmptyLayoutForWebViewInTabDocument:(id)arg1;
- (void)tabDocument:(id)arg1 didFinishLoadingWithError:(_Bool)arg2;
- (void)tabDocumentDidCancelRedirectToExternalApplication:(id)arg1;
- (_Bool)tabDocumentCanRedirectToExternalApplication:(id)arg1;
- (_Bool)tabDocument:(id)arg1 canShowDownload:(id)arg2;
- (_Bool)tabDocumentCanDownloadFile:(id)arg1;
- (void)tabDocumentWillStartLoadFromUserClick:(id)arg1;
- (void)tabDocumentDidStartLoading:(id)arg1;
- (void)tabDocumentDidUpdatePersistentState:(id)arg1;
- (void)tabDocumentDidUpdateShowingContinuous:(id)arg1;
- (_Bool)_canUpdateInterfaceWithTabDocument:(id)arg1;
- (void)mailContentProvider:(id)arg1 getWebArchiveDataWithCompletion:(CDUnknownBlockType)arg2;
- (void)mailContentProvider:(id)arg1 getPDFDataWithCompletionHandler:(CDUnknownBlockType)arg2;
- (void)mailContentProvider:(id)arg1 getReaderContentWithCompletionHandler:(CDUnknownBlockType)arg2;
- (unsigned long long)availableContentTypeForMailContentProvider:(id)arg1;
- (id)_mailContentProvider;
- (void)backForwardListTableViewControllerDidSelectParentItem:(id)arg1;
- (void)backForwardTableViewController:(id)arg1 didSelectItem:(id)arg2;
- (void)addBookmarkActivityFailedToAcquireBookmarkLock:(id)arg1;
- (_Bool)addBookmarkActivityCanSaveBookmarkChanges:(id)arg1;
- (id)_digitalHealthManager;
- (void)actionPanel:(id)arg1 prepareForMailActivityWithMailController:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)actionPanelAddTabDocumentToReadingList:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)updatePopoverPositionAfterTransitionFromHorizontalSizeClass:(long long)arg1 toHorizontalSizeClass:(long long)arg2;
- (void)bookmarksNavigationController:(id)arg1 commitPreviewedViewController:(id)arg2;
- (id)bookmarksNavigationController:(id)arg1 previewViewControllerForBookmark:(id)arg2;
- (void)bookmarksNavigationController:(id)arg1 setBookmark:(id)arg2 asRead:(_Bool)arg3;
- (void)bookmarksNavigationController:(id)arg1 showLockedBookmarksDatabaseAlertForBookmarkAddition:(_Bool)arg2;
- (void)bookmarksNavigationControllerViewDidDisappear:(id)arg1;
- (void)bookmarksNavigationControllerViewDidAppear:(id)arg1;
- (void)bookmarksNavigationController:(id)arg1 editFavoritesGridViewBookmark:(id)arg2;
- (void)bookmarksNavigationController:(id)arg1 updateReadingListUnreadFilterShowingAllBookmarks:(_Bool)arg2;
- (id)bookmarksNavigationControllerCurrentContinuousReadingItem:(id)arg1;
- (void)bookmarksBarView:(id)arg1 bookmarksNavigationController:(id)arg2 showLockedBookmarksDatabaseAlertForBookmarkAddition:(_Bool)arg3;
- (void)bookmarksBarView:(id)arg1 bookmarksNavigationControllerViewDidDisappear:(id)arg2;
- (void)bookmarksBarView:(id)arg1 bookmarksNavigationControllerViewDidAppear:(id)arg2;
- (void)bookmarksBarView:(id)arg1 didProduceNavigationIntent:(id)arg2;
- (_Bool)bookmarksNavigationControllerIsPresentedInsideBlankTab:(id)arg1;
- (long long)bookmarksNavigationControllerFavoritesGridViewLayoutType:(id)arg1;
- (void)bookmarksNavigationControllerReloadDidFail:(id)arg1;
- (void)bookmarksNavigationController:(id)arg1 didProduceNavigationIntent:(id)arg2;
- (void)bookmarksNavigationControllerDidTapOutsideFavorites:(id)arg1;
- (void)bookmarksNavigationControllerDidPressDoneButton:(id)arg1;
- (void)_handleNavigationIntent:(id)arg1 inTabDocument:(id)arg2;
- (unsigned long long)_minimumNumberOfNewTabsRequiringConfirmation;
- (void)_promptToConfirmMultipleNavigationIntentsIfNeeded:(unsigned long long)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)handleNavigationIntent:(id)arg1;
- (void)goToCloudTab:(id)arg1;
- (void)goToURL:(id)arg1;
- (void)goToBookmark:(id)arg1;
- (void)presentPrintControllerForTabDocument:(id)arg1 frame:(id)arg2 initiatedByWebContent:(_Bool)arg3;
- (void)mailComposeController:(id)arg1 didFinishWithResult:(long long)arg2 error:(id)arg3;
- (void)composeEmailWithMailToURL:(id)arg1;
- (void)animateSafariIconLinkFromPoint:(struct CGPoint)arg1 inView:(id)arg2;
- (void)browserToolbar:(id)arg1 didProduceNavigationIntent:(id)arg2;
- (struct CGPoint)targetPointForButtonBarLinkImageAnimationIntoLayer:(id)arg1 proposedTargetPoint:(struct CGPoint)arg2;
- (void)doSearch:(id)arg1;
- (void)addBookmarkForCurrentTab;
- (id)_closeAllTabsAction;
- (void)_updateTabExposeAlertController;
- (void)presentTabExposeAlertController;
- (void)presentRecentlyClosedTabsViewController;
- (void)presentBookmarksBarItemLongPressViewController;
- (_Bool)_canPresentBookmarksBarItemLongPressViewController;
- (void)presentGoForwardViewController;
- (void)presentGoBackViewController;
- (void)presentTabExpose;
- (void)openNewTab;
- (void)_presentActionPanelIfReady;
- (void)_presentActivityViewController;
- (void)_prepareToPresentActivityViewController;
- (void)toggleBookmarksPresentation;
- (void)toggleBookmarksPresentationWithCollection:(id)arg1;
- (void)barManager:(id)arg1 didReceiveLongPressForBarItem:(long long)arg2;
- (_Bool)barManager:(id)arg1 canHandleLongPressForBarItem:(long long)arg2;
- (void)barManager:(id)arg1 didReceiveTapForBarItem:(long long)arg2;
- (void)barManager:(id)arg1 didReceiveTouchDownForBarItem:(long long)arg2;
- (void)showBookmarksPanelWithNonAnimatedTransition;
- (void)showLockedBookmarksDatabaseAlertInViewController:(id)arg1 forBookmarkAddition:(_Bool)arg2;
- (void)showLockedBookmarksDatabaseAlertForBookmarkAdditionAfterDelay;
- (void)_delayedShowLockedBookmarksDatabaseAlertForBookmarkAddition;
- (void)showLockedBookmarksDatabaseAlertAfterDelay;
- (void)_delayedShowLockedBookmarksDatabaseAlert;
- (_Bool)createAndAddToHomeScreenBundleForWebClip:(id)arg1;
- (void)_createInitialLaunchImageForWebClip:(id)arg1;
- (void)_setPresentingModalBookmarksController:(_Bool)arg1 withCollection:(id)arg2 animated:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (void)setPresentingModalBookmarksController:(_Bool)arg1 animated:(_Bool)arg2;
@property(readonly, nonatomic, getter=isPresentingModalBookmarksController) _Bool presentingModalBookmarksController;
- (_Bool)_shouldPresentViewControllerUsingAdaptivePopover:(id)arg1;
- (void)_presentModalViewController:(id)arg1 fromBarItem:(long long)arg2 animated:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_presentModalViewController:(id)arg1 fromBarItem:(long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_presentModalViewController:(id)arg1;
- (void)dismissTransientUIAnimated:(_Bool)arg1 preserveFavoritesState:(_Bool)arg2;
- (void)dismissTransientUIAnimated:(_Bool)arg1;
- (id)authenticationCustomUIProgressObserverForContext:(id)arg1;
- (_Bool)displayMessageAsTitleForContext:(id)arg1;
- (id)passcodePromptForContext:(id)arg1;
- (id)authenticationMessageForContext:(id)arg1;
- (void)fraudWarningsToggled;
- (void)initializeAntiPhishingServiceIfNeeded;
- (void)_initializeAntiPhishingService;
- (void)willCloseBrowserWindow;
- (_Bool)allowsNewWindowHintingForDropInteractionAtPoint:(struct CGPoint)arg1 withEvent:(id)arg2;
@property(readonly, nonatomic) struct UIEdgeInsets barInsets;
@property(readonly, nonatomic) BrowserContainerViewController *containerViewController;
- (void)completionDetailViewControllerDidDismiss:(id)arg1;
- (void)dismissCompletionDetail;
- (_Bool)sidebarInteractionReporterShouldReportEventsForCurrentApplicationState:(id)arg1;
- (void)productViewControllerDidFinish:(id)arg1;
- (_Bool)addBookmarkNavControllerCanSaveBookmarkChanges:(id)arg1;
- (void)addBookmarkNavController:(id)arg1 didFinishWithResult:(_Bool)arg2;
- (void)tabDocumentDidUpdateUUID:(id)arg1 previousUUID:(id)arg2;
- (void)willLoseOwnershipOfTabDocument:(id)arg1;
- (void)didGainOwnershipOfTabDocument:(id)arg1;
- (id)tabDocumentWithUUID:(id)arg1;
- (void)didDismissLinkPreviewViewController:(id)arg1 committing:(_Bool)arg2;
- (void)commitLinkPreviewViewController:(id)arg1;
- (id)linkPreviewViewControllerForURL:(id)arg1;
- (void)_updateStorageBlockingPreference;
- (void)_setShowingAppBanner:(id)arg1 isShowing:(_Bool)arg2;
- (double)_verticalOffsetForContinuousReadingBanner;
- (double)_verticalOffsetForAppBanner;
- (void)_setContinuousReadingContentViewFromTabDocument:(id)arg1 useReaderView:(_Bool)arg2;
- (void)_commitToSpeculativeLoadForDocument:(id)arg1;
- (_Bool)shouldDeferHistoryUpdatesForWKWebView:(id)arg1;
- (void)document:(id)arg1 willMakeReaderVisible:(_Bool)arg2;
- (void)dynamicBarAnimatorWillLeaveSteadyState:(id)arg1;
- (void)dynamicBarAnimatorWillEnterSteadyState:(id)arg1;
- (void)updateExposedScrollViewRect;
- (void)updateWebViewObscuredInsets;
- (double)_adjustedTopObscuredInsetForBanners:(double)arg1;
- (struct CGRect)contentContainerViewFrameForBrowserSize:(struct CGSize)arg1;
- (void)updateInsetsForBackgroundWebView:(id)arg1;
- (void)updateWebViewSizeAttributes;
- (void)setWebViewFromTabDocument:(id)arg1;
- (void)setWebView:(id)arg1;
@property(readonly, nonatomic) WKProcessPool *processPool;
- (id)initWithUUID:(id)arg1 browserWindowController:(id)arg2 savedState:(id)arg3;
- (id)init;
- (void)prepareToNavigateInTabDocument:(id)arg1;
- (void)tabDocumentDidChangeWebFeedURL:(id)arg1;
@property(readonly, nonatomic, getter=isShowingCompletionDetail) _Bool showingCompletionDetail;
- (void)_updateMediaCaptureConfiguration;
- (void)_updateMediaCaptureEnabled;
- (void)_updateExperimentalFeatures;
- (void)sidebarDimmingViewDismiss:(id)arg1;
- (void)_updateFavoritesGridForSidebarVisibility;
@property(readonly, nonatomic) SidebarInteractionReporter *sidebarInteractionReporter;
- (void)_setShowingSidebar:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_setShowingSidebar:(_Bool)arg1;
- (void)updateShowingSidebarForLoad;
- (void)_showOrHideSidebarInLandscapeIfNecessary;
- (void)_updateSidebarStickinessAfterUserAction;
- (_Bool)shouldShowSidebarInLandscape;
- (void)_installContentDimmingViewIfNeeded;
- (void)_initializeSidebarContentDimmingViewIfNecessaryForTransitionToSize:(struct CGSize)arg1;
- (struct CGRect)_sidebarContentDimmingViewFrame;
- (_Bool)_shouldShowSidebarContentDimmingView;
- (void)readerAppearanceViewControllerDidChangeTheme:(id)arg1;
- (void)readerAppearanceViewControllerDidDecreaseTextSize:(id)arg1;
- (void)readerAppearanceViewControllerDidIncreaseTextSize:(id)arg1;
- (void)readerAppearanceViewControllerDidChangeFont:(id)arg1;
- (void)_presentReaderAppearanceControllerForTabDocument:(id)arg1;
- (void)navigationBar:(id)arg1 didProduceNavigationIntent:(id)arg2;
- (id)currentContentUUIDForNavigationBar:(id)arg1;
- (long long)dataOwnerForNavigationBar:(id)arg1;
- (id)itemProviderForNavigationBar:(id)arg1;
- (id)navigationBarURLForSharing:(id)arg1;
- (void)navigationBarMediaCaptureMuteButtonWasTapped:(id)arg1;
- (void)navigationBarReaderAppearanceButtonWasTapped:(id)arg1;
- (void)navigationBarStopLoadingButtonWasTapped:(id)arg1;
- (void)navigationBarReaderButtonWasLongPressed:(id)arg1;
- (void)navigationBarReloadButtonWasLongPressed:(id)arg1;
- (void)navigationBarReloadButtonWasTapped:(id)arg1;
- (void)navigationBarCancelButtonWasTapped:(id)arg1;
- (void)navigationBarReaderButtonWasTapped:(id)arg1;
- (void)navigationBarBackdropDidApplySettings:(id)arg1;
- (void)navigationBarURLWasTapped:(id)arg1;
- (void)compressedNavigationBarWasTapped:(id)arg1;
- (void)navigationBarMetricsDidChange:(id)arg1;
- (void)_keyboardWillHide:(id)arg1;
- (void)_keyboardWillChangeFrame:(id)arg1;
- (void)_keyboardWillShow:(id)arg1;
- (void)_updateBottomBarOffsetWithKeyboardNotification:(id)arg1;
- (void)_previousTabKeyPressed:(id)arg1;
- (void)_reopenLastClosedTabPressed;
- (void)_nextTabKeyPressed:(id)arg1;
- (void)_switchTabsByRelativeIndex:(long long)arg1 withKeyCommand:(id)arg2;
- (void)_closeActiveTabKeyPressed;
- (void)_focusOtherSideKeyPressed;
- (void)_openSplitViewKeyPressed;
- (void)_searchTabsKeyPressed;
- (void)_newTabKeyPressed;
- (void)_printKeyPressed;
- (void)_previousReadingListItemKeyPressed;
- (void)_nextReadingListItemKeyPressed;
- (void)_addToReadingListKeyPressed;
- (void)_toggleTabViewKeyPressed;
- (void)_toggleBookmarksKeyPressed;
- (void)_focusAddressFieldKeyPressed;
- (void)cancelKeyPressed;
- (void)toggleReaderKeyPressed;
- (void)previousFindResultKeyPressed;
- (void)nextFindResultKeyPressed;
- (void)findKeyPressed;
- (void)_addToBookmarksKeyPressed;
- (void)navigateForwardKeyPressed;
- (void)navigateBackKeyPressed;
- (void)reloadKeyPressed;
- (void)_showSidebarWithCollection:(id)arg1;
- (void)_showHistoryCollectionAlternativeKeyPressed;
- (void)_showHistoryCollectionKeyPressed;
- (void)_showReadingListCollectionKeyPressed;
- (void)_showBookmarksCollectionKeyPressed;
- (unsigned long long)_tabIndexForKeyCommand:(id)arg1;
- (void)_switchToTabKeyPressed:(id)arg1;
@property(readonly, nonatomic, getter=isShowingTabView) _Bool showingTabView;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (id)keyCommands;
- (void)_didChangeToFirstResponder:(id)arg1;
- (id)nextResponder;
- (_Bool)becomeFirstResponder;
- (_Bool)canBecomeFirstResponder;
- (void)updateScrollViewContentInset;
- (void)_setContentInsetAdjustments:(struct UIEdgeInsets)arg1 forScrollView:(id)arg2;
- (struct UIEdgeInsets)scrollViewContentInsetAdjustments;
- (void)didChangeContinuousReadingItemInActiveDocument;
- (id)_topContinuousReadingBanner;
@property(readonly, nonatomic) ContinuousReadingController *continuousReadingController;
- (_Bool)isContinuousReadingDocument:(id)arg1;
- (void)clearContinuousItemDocuments;
- (void)clearDocumentForContinuousReading:(id)arg1;
- (void)_clearPreviousContinuousItemDocument;
- (void)_clearNextContinuousItemDocument;
- (void)updateContinuousPreviewViewFrame;
- (void)_navigationGestureDidEndWithNavigation:(_Bool)arg1;
- (void)_navigationGestureWillEndWithNavigationToBackForwardListItem:(id)arg1;
- (void)_navigationGestureDidBegin;
- (void)_presentPendingViewControllerForActiveTab;
- (void)reinsertBorrowedContentViewForTab:(id)arg1;
- (id)borrowContentViewForTab:(id)arg1 withTopBackdropView:(id *)arg2 ofHeight:(double)arg3;
- (void)didCancelDismissingTabOverview;
- (void)didBeginDismissingTabOverview;
- (void)_updateDigitalHealthOverlayAfterExitingTabSwitcher;
- (void)didDismissTabOverview;
- (void)willPresentTabOverview;
- (void)didDismissTiltedTabView;
- (void)willDismissTiltedTabView;
- (void)willPresentTiltedTabView;
- (void)_cancelContentScrollGestures;
- (id)_renderView:(id)arg1 afterScreenUpdates:(_Bool)arg2;
- (void)snapshotTabDocument:(id)arg1 size:(struct CGSize)arg2 topBackdropHeight:(double)arg3 options:(unsigned long long)arg4 completion:(CDUnknownBlockType)arg5;
- (struct CGPoint)_snapshotOriginForTabDocument:(id)arg1;
- (id)_takeSnapshotWithSize:(struct CGSize)arg1 backgroundColor:(id)arg2 topBackdropHeight:(double)arg3 backdropSettings:(id)arg4 options:(unsigned long long)arg5 drawing:(CDUnknownBlockType)arg6;
- (id)tabViewBackdropSettingsForNavigationBar:(id)arg1;
- (void)_animateLinkImage:(struct CGImage *)arg1 flipped:(_Bool)arg2 fromRect:(struct CGRect)arg3 intoButton:(long long)arg4 inView:(id)arg5 afterLinkImageDisappears:(CDUnknownBlockType)arg6;
- (id)_newReadingListBehaviorAlertControllerWithCompletion:(CDUnknownBlockType)arg1;
- (_Bool)_shouldShowNewReadingListBehaviorAlert;
- (void)showReadingListAutomaticArchiveAlertIfNeededWithCompletion:(CDUnknownBlockType)arg1;
- (_Bool)addReadingListBookmarkForCurrentTab;
- (void)_perSiteAutomaticReaderActivationPreferenceDidChange:(id)arg1;
- (void)readerContentDidBecomeReady;
- (void)_readerLayoutTimerFired:(id)arg1;
- (void)_animateReaderVisibility:(_Bool)arg1;
- (void)_setReaderVisible:(_Bool)arg1 forTabDocument:(id)arg2 deactivationMode:(unsigned long long)arg3 animated:(_Bool)arg4;
- (double)verticalScrollOffsetForReaderViewInTabDocument:(id)arg1;
- (void)hideReaderForTabDocument:(id)arg1 animated:(_Bool)arg2 deactivationMode:(unsigned long long)arg3;
- (void)showReaderForTabDocument:(id)arg1 animated:(_Bool)arg2;
- (id)_readerBackgroundColor;
- (void)_readerVisibilityDidChange;
- (void)setShowingReader:(_Bool)arg1 animated:(_Bool)arg2;
- (_Bool)isShowingReader;
- (void)setScrollViewZoomEnabled:(_Bool)arg1;
- (void)_resizeToContentFrame;
- (void)scrollBrowserViewToTop;
- (void)_scrollToTopInView:(id)arg1;
- (_Bool)_canScrollToTopInView:(id)arg1;
- (_Bool)_shouldShowBookmarksBarForViewSize:(struct CGSize)arg1;
- (_Bool)_shouldShowBookmarksBar;
- (void)_setShowBookmarksBar:(_Bool)arg1;
- (void)toggleAlwaysShowBookmarksBarMessageReceived;
- (void)setCookiePolicyMessageReceived;
- (void)clearHistoryMessageReceived;
- (void)autoFillStateChangedMessageReceived;
- (void)clearAutoFillMessageReceived;
- (void)_replaceActiveDocument:(id)arg1 withSpeculativeDocument:(id)arg2;
- (void)_commitToSpeculativeLoad;
- (void)_startSpeculativeLoadingNow;
- (void)updateSpeculativeLoadURL:(id)arg1 defersLoading:(_Bool)arg2;
- (void)_clearSpeculativeLoadingStartTimer;
- (float)_delayForStartingSpeculativeLoad;
- (void)_closeSpeculativelyLoadedDocument:(id)arg1;
- (void)_cancelSpeculativeLoadForDocument:(id)arg1;
- (void)clearSpeculativeLoadDocument;
- (void)cancelSpeculativeLoad;
- (void)didReceiveMemoryWarning;
@property(readonly, nonatomic) BrowserToolbar *activeToolbar;
@property(readonly, nonatomic) BrowserToolbar *topToolbar;
- (void)_updateTabBarAndBookmarksBarStyles;
- (void)updateInterface;
- (struct CGPoint)_originForOverlayAccessories;
- (void)setResourcesLoading:(_Bool)arg1;
- (void)setProgress:(float)arg1;
- (void)_updateProgressIndicator;
- (void)_updateProgressForTabDocument:(id)arg1;
- (_Bool)_isVerticallyConstrained;
- (void)updateTitleForTabDocument:(id)arg1;
@property(nonatomic) struct CGPoint contentOffset;
@property(nonatomic) float zoomScale;
- (void)setInitialZoomScaleForPPT:(double)arg1;
- (void)setProgressEnabled:(_Bool)arg1;
- (void)_loadRequest:(id)arg1;
- (void)goToAddress:(id)arg1;
- (_Bool)_commitSpeculativeLoadForURL:(id)arg1;
- (void)goForward;
- (void)goBack;
- (void)scrollViewDidEndZooming:(id)arg1 withView:(id)arg2 atScale:(double)arg3;
- (void)scrollViewWillBeginZooming:(id)arg1 withView:(id)arg2;
- (void)scrollViewDidScroll:(id)arg1;
- (void)_updateSidebarWallpaper;
- (void)scrollViewDidScrollToTop:(id)arg1;
- (_Bool)scrollViewShouldScrollToTop:(id)arg1;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)modifierFlagsChangedWithEvent:(id)arg1;
- (void)didCompleteScrolling;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (_Bool)_isScrolledToThresholdForContinuousPrefetching;
@property(readonly, nonatomic) RecentlyClosedTabViewController *recentlyClosedTabController;
- (void)updateQuickLookFrameViewIfNecessary;
- (void)_updateButtonsAnimatingTabBar:(_Bool)arg1;
- (void)updateApplePayPreferences;
- (void)updateJavaScriptPreferences;
- (void)updateExperimentalFeatures;
- (void)updateInternalPreferences;
- (void)updateSpeculativeLoadingPreferences;
- (void)updateDoNotTrackPreferences;
- (void)_updateConfiguration;
@property(readonly, nonatomic) _SFBrowserConfiguration *configuration;
- (void)writePrivateBrowsingEnabled:(_Bool)arg1;
- (void)togglePrivateBrowsingEnabled;
@property(readonly, nonatomic, getter=isPrivateBrowsingAvailable) _Bool privateBrowsingAvailable;
- (void)_setPrivateBrowsingEnabled:(_Bool)arg1 showModalAuthentication:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)carrierBundledChanged;
- (void)updateTabDocument:(id)arg1 forExternalURL:(id)arg2 withOptions:(id)arg3;
- (id)handleExternalURL:(id)arg1;
- (void)userDefaultsDidChangeValueForKey:(id)arg1;
- (void)setUpWithURL:(id)arg1 launchOptions:(id)arg2;
- (id)loadURLFromExternalApplicationInActiveTab:(id)arg1;
@property(readonly, nonatomic) BookmarksNavigationController *bookmarksNavigationController;
@property(readonly, nonatomic) _Bool bookmarksButtonIsInNavigationBar;
- (_Bool)_isScreenSizeBigEnoughForTabBar:(struct CGSize)arg1;
- (void)updateUsesTabBar;
@property(readonly, nonatomic) _Bool wantsTransparentBackground;
- (id)_backgroundColorForTabDocument:(id)arg1;
- (void)catalogViewController:(id)arg1 didPasteText:(id)arg2;
- (_Bool)catalogViewControllerShouldSuppressPopover:(id)arg1;
- (void)catalogViewController:(id)arg1 focusNextKeyView:(_Bool)arg2;
- (_Bool)catalogViewControllerShouldRequestSuggestions:(id)arg1;
- (void)catalogViewController:(id)arg1 dismissCompletionDetail:(id)arg2;
- (void)catalogViewController:(id)arg1 presentViewControllerWithinPopover:(id)arg2;
- (double)_popoverPresentationVerticalOffset;
- (void)catalogViewControllerPopoverWillDismiss:(id)arg1 dismissalReason:(long long)arg2;
- (void)catalogViewControllerDidEndEditing:(id)arg1;
- (void)catalogViewControllerDidBeginEditing:(id)arg1;
- (void)catalogViewController:(id)arg1 completionItem:(id)arg2 wasAcceptedForString:(id)arg3;
- (void)catalogViewController:(id)arg1 mightSelectCompletionItem:(id)arg2 forString:(id)arg3;
- (struct CGRect)catalogViewControllerPopoverPresentationRect:(id)arg1;
- (double)catalogViewControllerPopoverWidth:(id)arg1;
- (void)catalogViewController:(id)arg1 loadRequest:(id)arg2;
- (void)catalogViewController:(id)arg1 didSelectAddress:(id)arg2;
- (void)catalogViewControllerDidSelectFindOnPage:(id)arg1;
- (void)clearParsecQueryOriginatingFromSearchSuggestion;
@property(readonly, nonatomic) long long idOfParsecQueryOriginatingFromSearchSuggestion;
- (void)catalogViewController:(id)arg1 didSelectSearch:(id)arg2;
- (void)_completionItem:(id)arg1 wasAcceptedForString:(id)arg2;
- (void)_didChangePowerState;
- (void)dismissStoreProductViewController;
- (void)prepareForTabDocumentWebViewFullscreenMayReturnToInline:(id)arg1;
- (void)setFavoritesState:(long long)arg1 animated:(_Bool)arg2;
- (id)createCatalogViewController;
- (void)_updateScrollViewScrollsToTop;
- (void)_updateButtonBarContentsAnimated:(_Bool)arg1 animateFrameIfAnimated:(_Bool)arg2 delay:(double)arg3;
- (void)updateButtonBarContentsAnimated:(_Bool)arg1;
- (id)_tiltedTabToolbar;
- (void)_setProgressSuppressingDocument:(id)arg1;
- (void)updateFavoritesForNewDocument;
- (void)_bookmarksDidReload:(id)arg1;
- (_Bool)hasAnyFavorites;
- (void)cancelFavoritesAnimated:(_Bool)arg1;
- (void)cancelFavorites;
- (void)setFavoritesFieldFocused:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setFavoritesAreSticky:(_Bool)arg1 animated:(_Bool)arg2;
- (long long)_notFocusedStickyState;
- (_Bool)_favoritesAreShowingInPopover;
- (_Bool)_shouldHideBottomToolbar;
- (_Bool)_favoritesFieldShouldBeExpanded;
@property(readonly, nonatomic, getter=isFavoritesFieldFocused) _Bool favoritesFieldFocused;
@property(readonly, nonatomic) _Bool favoritesAreSticky;
@property(readonly, nonatomic, getter=isShowingFavorites) _Bool showingFavorites;
- (id)_basicAnimationForView:(id)arg1 withKeyPath:(id)arg2;
- (struct UIEdgeInsets)_obscuredScrollViewInsetsConsideringTargetState:(_Bool)arg1 insetsDueToSafeArea:(struct UIEdgeInsets *)arg2;
- (struct UIEdgeInsets)finalObscuredInsetsForScrollView:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)_updateScrollOffsetForReplacementWebView:(id)arg1;
- (struct CGRect)frameForRootView;
- (struct CGRect)frameForCatalogView;
- (double)_horizontalMarginForCatalogViewInPopover;
- (void)_tabViewPinch:(id)arg1;
- (id)_viewToInsertNavigationBarAbove;
- (void)updateSearchEngine;
- (void)updateSearchEngineIfNeeded;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)_showBarsFromBottomBarTap:(id)arg1;
- (double)bottomBarOffset;
- (void)hideBarsForRotation;
- (void)showBars;
- (_Bool)dynamicBarAnimator:(id)arg1 canHideBarsByDraggingWithOffset:(double)arg2;
- (void)_updateDisableBarHiding;
- (double)dynamicBarAnimator:(id)arg1 minimumTopBarHeightForOffset:(double)arg2;
- (void)updateDynamicBarGeometry;
- (void)dynamicBarAnimatorOutputsDidChange:(id)arg1;
- (void)_initSubviews;
- (void)updateTabOverviewFrame;
- (void)updateTabViewPinchRecognizer;
- (void)updatePrivateBrowsingAvailability;
- (void)_updateUsesNarrowLayout;
- (_Bool)_shouldUseTabOverview;
- (void)_setupBottomToolbar;
@property(readonly, nonatomic) _Bool interfaceFillsScreen;
- (void)updateShowingTabBarAnimated:(_Bool)arg1;
- (_Bool)_shouldShowTabBar;
- (void)didTransitionToHorizontalSizeClass:(long long)arg1;
- (void)willTransitionToHorizontalSizeClass:(long long)arg1;
- (void)boundingPathForRootViewControllerViewDidChange;
- (void)rootViewControllerViewDidTransitionFromSize:(struct CGSize)arg1 animated:(_Bool)arg2;
- (void)rootViewControllerViewTransitionFromSize:(struct CGSize)arg1 includingSidebar:(_Bool)arg2 animated:(_Bool)arg3;
- (void)rootViewControllerViewWillTransitionToSize:(struct CGSize)arg1;
- (void)_animateRootViewControllerViewTransitionFromSize:(struct CGSize)arg1 includingSidebar:(_Bool)arg2;
- (_Bool)_shouldHideBarsForSizeChange;
- (_Bool)_shouldShowSidebarForSizeChangeToSize:(struct CGSize)arg1;
- (_Bool)_shouldShowSidebarForSizeChange;
- (void)_updateCatalogViewControllerObscuredInsets;
- (_Bool)_shouldHideCatalogViewControllerForSizeChange;
- (_Bool)_shouldUseNarrowLayout;
- (_Bool)canHideBars;
- (void)updateContentContainerViewFrame;
- (double)contentContainerXOffsetForSidebar;
- (long long)_bookmarksPresentationStyleForViewOfSize:(struct CGSize)arg1;
- (long long)_bookmarksPresentationStyle;
- (void)updateScrollIndicatorInsets;
- (struct UIEdgeInsets)_baseInsetsForHorizontalScrollIndicator;
- (struct UIEdgeInsets)_baseInsetsForVerticalScrollIndicator;
- (_Bool)_shouldShowBackgroundViewForTabDocument:(id)arg1;
- (struct CGRect)readerContentFrameInScrollView;
- (struct CGRect)quickLookFrameInScrollView;
- (struct CGRect)contentFrameInScrollView;
- (struct CGSize)_contentSize;
- (struct CGRect)_contentFrameInPageViewWithHiddenBars;
- (struct CGRect)_contentFrameInPageViewIncludingInsetForKeyboard:(_Bool)arg1;
- (struct CGRect)contentFrameInPageView;
- (struct CGRect)_contentFrameInView:(id)arg1 tabDocument:(id)arg2 insetForSafeArea:(_Bool)arg3 insetForKeyboard:(_Bool)arg4;
- (struct UIEdgeInsets)_effectiveWebViewSafeAreaInsets;
- (_Bool)_safeAreaShouldAffectWebViewObscuredInsets;
- (double)additionalContentHeightForBanners;
- (double)_appBannerOverlapHeight;
- (void)updateAppBannerFrame;
- (_Bool)_shouldBottomBarFloatAboveKeyboard;
- (void)updateButtonBarFrame;
- (double)_maximumHeightObscuredByBottomBar;
- (void)_hideCrashBanner;
- (void)setShowingCrashBanner:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_layoutCrashBanner;
- (double)_crashBannerDraggingOffsetForContentOffset:(struct CGPoint)arg1;
- (void)updateNavigationBarFrame;
- (void)updateSidebarFrame;
- (struct CGRect)_sidebarFrameWhenPresented:(_Bool)arg1;
- (double)_navigationBarSquishedHeight;
- (double)_navigationBarAuxiliaryBarsHeight;
- (double)_navigationBarDesiredHeight;
- (struct CGRect)_navigationBarFrame;
- (_Bool)_canSuppressNavigationBarBlur;
- (void)_setShowingTabBar:(_Bool)arg1 animated:(_Bool)arg2;
- (void)scrollTabOverviewToTop;
- (void)willShowViewAboveWebContent;
- (void)_resignWebViewFirstResponder;
- (_Bool)shouldNotTrackUser;
- (_Bool)showDemoModeFeatureDisabledAlert;
- (void)loadURL:(id)arg1;
- (void)_restoreDigitalHealthFunctionalityAfterAppTransition;
- (void)didBecomeActive;
- (void)willEnterForeground;
- (id)_topScrollView;
- (_Bool)isAnyPageLoaded;
- (void)invalidateSourceApplication;
- (void)didEnterBackground;
- (void)willResignActive;
- (void)updatePreferredStatusBarStyleAnimated:(_Bool)arg1;
- (void)_scrollToTopFromScrollToTopView;
- (void)updateScrollToTopView;
- (void)updateViewsAfterStatusBarChange;
- (void)_statusBarHeightChanged;
- (void)safariWindow:(id)arg1 statusBarChangedFromHeight:(double)arg2 toHeight:(double)arg3;
- (void)restoreInterfaceAfterElementFullscreen;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

