//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIApplication.h>

#import "COSGetStartedViewControllerDelegate-Protocol.h"
#import "COSGlobalAlertPresentationCoordinatorObserver-Protocol.h"
#import "COSRadarReporterDelegate-Protocol.h"
#import "MCProfileConnectionObserver-Protocol.h"
#import "NRDevicePropertyObserver-Protocol.h"
#import "PBAutomationDocumentation-Protocol.h"
#import "PBBridgeConnectionDelegate-Protocol.h"
#import "PSSplitViewControllerNavigationDelegate-Protocol.h"
#import "UIApplicationDelegate-Protocol.h"
#import "UISplitViewControllerDelegate-Protocol.h"
#import "UITabBarControllerDelegate-Protocol.h"

@class BKSApplicationStateMonitor, COSAppStoreController, COSGetStartedViewController, COSPreferencesRootController, COSSetupController, COSTabBarController, COSUnpairingViewController, NPSDomainAccessor, NRDevice, NSMutableDictionary, NSObject, NSString, NSTimer, PBBridgeCompanionController, PSSplitViewController, UIAlertController, UINavigationController, UIViewController, UIWindow;
@protocol OS_dispatch_source;

@interface COSPreferencesAppController : UIApplication <PBBridgeConnectionDelegate, PSSplitViewControllerNavigationDelegate, UISplitViewControllerDelegate, COSGetStartedViewControllerDelegate, COSRadarReporterDelegate, NRDevicePropertyObserver, PBAutomationDocumentation, UITabBarControllerDelegate, COSGlobalAlertPresentationCoordinatorObserver, UIApplicationDelegate, MCProfileConnectionObserver>
{
    _Bool _isLocked;
    _Bool _loadingExternalURL;
    long long _networkStartCount;
    double _timeoutLimit;
    _Bool _settingsWasResigned;
    _Bool _syncTrapEnabled;
    _Bool _syncTrapCompleted;
    _Bool _revLockEnabled;
    _Bool _isShowingRadarReporter;
    _Bool _launchedByNanoRegistry;
    _Bool _firstLaunch;
    _Bool _backgrounded;
    _Bool _didRegisterNRObserver;
    _Bool _migrationDismissalRequested;
    _Bool _isBeamBridgeReachable;
    _Bool _isActivated;
    _Bool _isLanguageAndLocaleFinished;
    _Bool _isResetting;
    _Bool _isUpdatingGizmoInSetupFlow;
    UIWindow *_window;
    COSPreferencesRootController *_settingsController;
    PSSplitViewController *_settingsSplitViewController;
    unsigned long long _backgroundTaskID;
    NSTimer *_taskCompletionTimeout;
    UIAlertController *_transportReachabilityAlert;
    UIViewController *_selectedController;
    COSGetStartedViewController *_getStartedViewController;
    UINavigationController *_radarReporterNav;
    CDUnknownBlockType _setupFlowPresentationCompletion;
    COSUnpairingViewController *_unpairingVC;
    COSTabBarController *_rootViewController;
    UIViewController *_selectedTabViewController;
    UIViewController *_myWatchViewController;
    UIViewController *_galleryViewController;
    COSAppStoreController *_appStoreController;
    NSObject<OS_dispatch_source> *_inactiveDeviceTimerSource;
    NSMutableDictionary *_discoveryAssetPullRequests;
    BKSApplicationStateMonitor *_appStateMonitor;
    NSTimer *_migrationDismissDelayTimer;
    COSSetupController *_setupController;
    PBBridgeCompanionController *_bridgeController;
    NRDevice *_activeWatch;
    NPSDomainAccessor *_activeWatchBridgeDomainAccessor;
    unsigned long long _cliftonAvailabilityState;
}

+ (_Bool)hasUpdateAvailable;
+ (_Bool)_shouldUseAlertControllerForLegacyAlerts;
+ (id)radarComponent;
+ (id)documentationDescription;
+ (id)subViews;
+ (id)viewsAndActions;
@property(nonatomic) _Bool isUpdatingGizmoInSetupFlow; // @synthesize isUpdatingGizmoInSetupFlow=_isUpdatingGizmoInSetupFlow;
@property(nonatomic) _Bool isResetting; // @synthesize isResetting=_isResetting;
@property(nonatomic) unsigned long long cliftonAvailabilityState; // @synthesize cliftonAvailabilityState=_cliftonAvailabilityState;
@property(nonatomic) _Bool isLanguageAndLocaleFinished; // @synthesize isLanguageAndLocaleFinished=_isLanguageAndLocaleFinished;
@property(nonatomic) _Bool isActivated; // @synthesize isActivated=_isActivated;
@property(readonly, nonatomic) NPSDomainAccessor *activeWatchBridgeDomainAccessor; // @synthesize activeWatchBridgeDomainAccessor=_activeWatchBridgeDomainAccessor;
@property(readonly, nonatomic) NRDevice *activeWatch; // @synthesize activeWatch=_activeWatch;
@property(nonatomic) _Bool isBeamBridgeReachable; // @synthesize isBeamBridgeReachable=_isBeamBridgeReachable;
@property(retain, nonatomic) PBBridgeCompanionController *bridgeController; // @synthesize bridgeController=_bridgeController;
@property(retain, nonatomic) COSSetupController *setupController; // @synthesize setupController=_setupController;
@property(nonatomic) _Bool migrationDismissalRequested; // @synthesize migrationDismissalRequested=_migrationDismissalRequested;
@property(retain, nonatomic) NSTimer *migrationDismissDelayTimer; // @synthesize migrationDismissDelayTimer=_migrationDismissDelayTimer;
@property(retain, nonatomic) BKSApplicationStateMonitor *appStateMonitor; // @synthesize appStateMonitor=_appStateMonitor;
@property(retain, nonatomic) NSMutableDictionary *discoveryAssetPullRequests; // @synthesize discoveryAssetPullRequests=_discoveryAssetPullRequests;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *inactiveDeviceTimerSource; // @synthesize inactiveDeviceTimerSource=_inactiveDeviceTimerSource;
@property(retain, nonatomic) COSAppStoreController *appStoreController; // @synthesize appStoreController=_appStoreController;
@property(retain, nonatomic) UIViewController *galleryViewController; // @synthesize galleryViewController=_galleryViewController;
@property(retain, nonatomic) UIViewController *myWatchViewController; // @synthesize myWatchViewController=_myWatchViewController;
@property(nonatomic) __weak UIViewController *selectedTabViewController; // @synthesize selectedTabViewController=_selectedTabViewController;
@property(retain, nonatomic) COSTabBarController *rootViewController; // @synthesize rootViewController=_rootViewController;
@property(nonatomic) _Bool didRegisterNRObserver; // @synthesize didRegisterNRObserver=_didRegisterNRObserver;
@property(retain, nonatomic) COSUnpairingViewController *unpairingVC; // @synthesize unpairingVC=_unpairingVC;
@property(copy, nonatomic) CDUnknownBlockType setupFlowPresentationCompletion; // @synthesize setupFlowPresentationCompletion=_setupFlowPresentationCompletion;
@property(nonatomic) _Bool backgrounded; // @synthesize backgrounded=_backgrounded;
@property(nonatomic) _Bool firstLaunch; // @synthesize firstLaunch=_firstLaunch;
@property(nonatomic) _Bool launchedByNanoRegistry; // @synthesize launchedByNanoRegistry=_launchedByNanoRegistry;
@property(retain, nonatomic) UINavigationController *radarReporterNav; // @synthesize radarReporterNav=_radarReporterNav;
@property(retain, nonatomic) COSGetStartedViewController *getStartedViewController; // @synthesize getStartedViewController=_getStartedViewController;
@property(nonatomic) UIViewController *selectedController; // @synthesize selectedController=_selectedController;
@property(retain, nonatomic) UIAlertController *transportReachabilityAlert; // @synthesize transportReachabilityAlert=_transportReachabilityAlert;
@property(retain, nonatomic) NSTimer *taskCompletionTimeout; // @synthesize taskCompletionTimeout=_taskCompletionTimeout;
@property(nonatomic) unsigned long long backgroundTaskID; // @synthesize backgroundTaskID=_backgroundTaskID;
@property(nonatomic) _Bool isShowingRadarReporter; // @synthesize isShowingRadarReporter=_isShowingRadarReporter;
@property(nonatomic) _Bool isLocked; // @synthesize isLocked=_isLocked;
@property(nonatomic) _Bool revLockEnabled; // @synthesize revLockEnabled=_revLockEnabled;
@property(nonatomic) _Bool syncTrapCompleted; // @synthesize syncTrapCompleted=_syncTrapCompleted;
@property(nonatomic) _Bool syncTrapEnabled; // @synthesize syncTrapEnabled=_syncTrapEnabled;
@property(readonly, nonatomic) PSSplitViewController *settingsSplitViewController; // @synthesize settingsSplitViewController=_settingsSplitViewController;
@property(readonly, nonatomic) COSPreferencesRootController *settingsController; // @synthesize settingsController=_settingsController;
@property(retain, nonatomic) UIWindow *window; // @synthesize window=_window;
- (void).cxx_destruct;
- (void)presentApplePayLocallyStoredValueOfflineWarningIfNeededForDevice:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)finishedTest:(id)arg1;
- (void)startedTest:(id)arg1;
- (_Bool)runTest:(id)arg1 options:(id)arg2;
- (void)testPrep:(id)arg1 options:(id)arg2;
- (_Bool)_forceComplexTopLevel;
- (void)_testScrollTest:(id)arg1 onScrollView:(id)arg2 withIterations:(int)arg3 andOffset:(int)arg4;
- (void)globalAlertPresentationCoordinator:(id)arg1 dismissAlert:(unsigned long long)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (void)globalAlertPresentationCoordinator:(id)arg1 presentAlert:(unsigned long long)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (void)_dismissSyncPaneForMigration;
- (void)_dismissSyncPaneForMigrationWithDelay;
- (void)_showSyncOrAbortDismissingSync;
- (void)_showSyncPaneForMigration;
- (void)globalAlertPresentationCoordinator:(id)arg1 syncProgressDidUpdate:(double)arg2;
- (void)_starDevicePickerRotationTestWithOptions:(id)arg1;
- (void)_prepareForDevicePickerTest;
- (void)_startTopLevelScrollTestComplex:(_Bool)arg1 options:(id)arg2;
- (void)_startWelcomeTest:(id)arg1;
- (void)sizeCategoryDidChange:(id)arg1;
- (void)startScanningForNearbyDevices;
- (void)discoveredAdvertisingWatch:(id)arg1;
- (void)_debug_forcePullAssets;
@property(readonly, nonatomic) NRDevice *displayDevice;
- (void)_allowInteractionsWithSettingsControllers:(_Bool)arg1;
- (void)deviceBecameInactive:(id)arg1;
- (void)deviceBecameActive:(id)arg1;
- (void)versionOrCapabilitiesChanged:(id)arg1;
- (void)device:(id)arg1 propertyDidChange:(id)arg2 fromValue:(id)arg3;
- (id)navigationController;
- (void)radarReporterDidFinish;
- (void)_prepareAppearances;
- (void)reloadAppearance:(id)arg1;
- (void)successfullyBeganUnpairingWatch;
- (void)presentUnpairingControllerAnimated:(_Bool)arg1;
- (void)pingWatch;
- (void)presentNewPairingFlowIfPossibleWithAnimation:(_Bool)arg1;
- (void)presentMigrationFlowIfPossible;
- (void)presentNewPairingFlowIfPossible;
- (void)tappedStartForMode:(unsigned long long)arg1 withAnimation:(_Bool)arg2;
- (void)tappedStartForMode:(unsigned long long)arg1;
- (void)tappedStart;
- (void)tappedStartInternal;
- (void)resetFlowForCameraExpiry;
- (void)_cancelBackgroundAssertionTimeout;
- (void)_extendBackgroundAssertion;
- (void)nanoRegistryStatusChanged:(id)arg1;
- (void)dismissUnpairingViewControllerAnimated:(_Bool)arg1;
- (void)dismissUnpairingViewControllerAnimated:(_Bool)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)presentUnpairingViewControllerAnimated:(_Bool)arg1;
- (void)_registerNRObserver;
- (void)showPairTheSimsAlert;
- (id)_viewControllers;
- (void)refreshTabBar;
- (void)_networkingStopNotification:(id)arg1;
- (void)_networkingStartNotification:(id)arg1;
- (void)_tintTabBarWithViewController:(id)arg1;
- (void)tabBarController:(id)arg1 didSelectViewController:(id)arg2;
- (void)setSelectedTabBarViewController:(id)arg1;
- (void)transportBecameUnreachable;
- (void)transportBecameReachable;
- (void)updateActiveWatchCompatibilityState;
- (void)updateActiveWatch:(id)arg1;
- (void)refreshActiveWatchFromNanoRegistry;
- (void)systemDidWake:(id)arg1;
- (void)popToTopLevelSettingsAnimated:(_Bool)arg1;
- (void)clearControllersForSuspendedState;
- (void)_clearControllersForSuspendedState:(id)arg1;
- (void)popToRootOfSettingsSelectGeneral:(_Bool)arg1 performWithoutDeferringTransitions:(_Bool)arg2;
- (void)popToRootOfSettingsSelectGeneral:(_Bool)arg1;
- (id)_rootControllerForSplitViewController:(id)arg1;
- (id)_splitViewControllerForRootController:(id)arg1;
- (id)keyValueDictionaryForURL:(id)arg1;
- (id)getLaunchedByValueForURL:(id)arg1;
- (void)_performURLHandlingForRootListController:(id)arg1 controller:(id)arg2 dictionary:(id)arg3 items:(id)arg4 controllerNeedsPush:(_Bool)arg5;
- (void)_setOffsetForController:(id)arg1 fromObjectPair:(id)arg2;
- (void)processURL:(id)arg1 animated:(_Bool)arg2 fromSearch:(_Bool)arg3;
- (void)processURL:(id)arg1;
- (void)generateURL;
- (id)currentSpecifierIDPath;
- (id)oneTimeJumpURL;
- (void)enteredCompatibilityState:(id)arg1;
- (void)initialPairingFailed:(id)arg1;
- (void)pairingFailed:(id)arg1;
- (void)messageSendFailed:(id)arg1;
- (void)deviceUnpaired:(id)arg1;
- (void)devicePaired:(id)arg1;
- (void)remoteDidFailActivation:(id)arg1 userActionable:(_Bool)arg2;
- (void)remoteDidFailActivation:(id)arg1;
- (void)updateForRemoteActivity:(id)arg1;
- (void)didHandlePerformanceResults;
- (void)connectionDidBecomeInactive;
- (void)connectionDidBecomeActive;
- (void)remoteDidBecomeAvailable;
- (void)newerCompanionRequired;
- (void)disagreeToTerms;
- (void)dismissSetupFlowAnimated:(_Bool)arg1 refreshTabs:(_Bool)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)dismissSetupFlowAnimated:(_Bool)arg1;
- (void)tappedSubmitRadar;
- (void)presentSetupFlowWithMode:(unsigned long long)arg1 animated:(_Bool)arg2;
- (void)resetSetupFlowInternalSettings;
- (void)resetSetupFlowAnimated:(_Bool)arg1 forEvent:(unsigned long long)arg2;
- (void)resetSetupFlowAnimated:(_Bool)arg1 forEvent:(unsigned long long)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)resetPairedUI;
- (void)expireTaskAssertion:(id)arg1;
- (void)dismissSetupFlowComplete:(_Bool)arg1 animated:(_Bool)arg2;
- (void)presentSetupFlowAnimated:(_Bool)arg1;
@property(readonly, nonatomic) _Bool isInSetupFlow;
- (id)urlForActivity:(id)arg1;
- (void)markGalleryTabAsVisited;
- (void)clearBridgeSettingsTabBarItemBadge;
- (void)refreshUpdateBadgeWithTab:(id)arg1;
- (void)refreshUpdateBadge;
- (id)bridgeSettingsTabBarItem;
- (void)splitViewControllerDidPopToRootController:(id)arg1;
- (_Bool)splitViewController:(id)arg1 collapseSecondaryViewController:(id)arg2 ontoPrimaryViewController:(id)arg3;
- (id)splitViewController:(id)arg1 separateSecondaryViewControllerFromPrimaryViewController:(id)arg2;
- (id)_getStartedController;
- (void)loadSettingsController;
- (void)updateActiveWatchBridgeDomainAccessor;
- (void)retriggerNRAlertIfNeeded;
- (void)doneFollowUp:(id)arg1;
- (_Bool)application:(id)arg1 openURL:(id)arg2 options:(id)arg3;
- (void)applicationDidResumeForEventsOnly;
- (void)applicationWillSuspendForEventsOnly;
- (void)applicationWillResignActive:(id)arg1;
- (id)_appSuspendStateDescription;
- (void)checkIfNRRetriggerConditions;
- (void)presentGetConnectedAlertIfNeededWithCompletion:(CDUnknownBlockType)arg1;
- (void)presentGetConnectedAlertIfNeeded;
- (void)markGalleryTabAsVisitedIfOnGalleryTab;
- (void)_presentMigrationWaitingFlowIfNeeded;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)applicationWillTerminate:(id)arg1;
- (void)_showSettingsUI;
- (void)pullPairedWatchAssets;
- (_Bool)application:(id)arg1 didFinishLaunchingWithOptions:(id)arg2;
- (_Bool)application:(id)arg1 willFinishLaunchingWithOptions:(id)arg2;
- (void)application:(id)arg1 performActionForShortcutItem:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)application:(id)arg1 didUpdateUserActivity:(id)arg2;
- (void)application:(id)arg1 didFailToContinueUserActivityWithType:(id)arg2 error:(id)arg3;
- (_Bool)application:(id)arg1 continueUserActivity:(id)arg2 restorationHandler:(CDUnknownBlockType)arg3;
- (_Bool)application:(id)arg1 willContinueUserActivityWithType:(id)arg2;
- (unsigned long long)application:(id)arg1 supportedInterfaceOrientationsForWindow:(id)arg2;
- (void)_refreshShortCuts;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

