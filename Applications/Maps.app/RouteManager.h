//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <GeoServices/GEORouteManager.h>

#import "MNTraceRecorderBackgroundGuard-Protocol.h"

@class GEOComposedWaypoint, GEODirectionsRequestFeedback, GEOMapRegion, GEOMapServiceTraits, GEORouteAttributes, GEOURLRouteHandle, MNTracePlayer, MNTraceRecorder, NSData, NSMutableArray, NSString, NavTestLogger, Route, RouteSet, TransitRouteOptions;
@protocol RouteManagerDelegate, RouteManagerTestingDelegate;

__attribute__((visibility("hidden")))
@interface RouteManager : GEORouteManager <MNTraceRecorderBackgroundGuard>
{
    GEOMapRegion *_mapRegion;
    _Bool _fromCurrentLocation;
    GEORouteAttributes *_routeAttributes;
    NSMutableArray *_routeSets;
    NavTestLogger *_testLogger;
    _Bool _background;
    _Bool _hasTimepoint;
    int _routeState;
    int _desiredTransportType;
    RouteSet *_activeRouteSet;
    NSData *_sessionState;
    GEOComposedWaypoint *_origin;
    GEOComposedWaypoint *_destination;
    NSString *_voiceLanguage;
    TransitRouteOptions *_transitOptions;
    GEOURLRouteHandle *_routeHandle;
    id <RouteManagerDelegate> _navDelegate;
    GEOMapServiceTraits *_traits;
    MNTraceRecorder *_traceRecorder;
    MNTracePlayer *_tracePlayer;
    GEODirectionsRequestFeedback *_feedback;
    NSData *_prevRouteID;
    struct GEOTimepoint _timepoint;
}

@property(nonatomic) _Bool hasTimepoint; // @synthesize hasTimepoint=_hasTimepoint;
@property(retain, nonatomic) NSData *prevRouteID; // @synthesize prevRouteID=_prevRouteID;
@property(retain, nonatomic) GEODirectionsRequestFeedback *feedback; // @synthesize feedback=_feedback;
@property(readonly, nonatomic) NavTestLogger *testLogger; // @synthesize testLogger=_testLogger;
@property(retain, nonatomic) MNTracePlayer *tracePlayer; // @synthesize tracePlayer=_tracePlayer;
@property(retain, nonatomic) MNTraceRecorder *traceRecorder; // @synthesize traceRecorder=_traceRecorder;
@property(readonly, nonatomic) GEOMapServiceTraits *traits; // @synthesize traits=_traits;
@property(nonatomic) __weak id <RouteManagerDelegate> navDelegate; // @synthesize navDelegate=_navDelegate;
@property(readonly, nonatomic) GEOURLRouteHandle *routeHandle; // @synthesize routeHandle=_routeHandle;
@property(readonly, nonatomic) TransitRouteOptions *transitOptions; // @synthesize transitOptions=_transitOptions;
@property(nonatomic) struct GEOTimepoint timepoint; // @synthesize timepoint=_timepoint;
@property(readonly, nonatomic) int desiredTransportType; // @synthesize desiredTransportType=_desiredTransportType;
@property(readonly, copy, nonatomic) NSString *voiceLanguage; // @synthesize voiceLanguage=_voiceLanguage;
@property(readonly, nonatomic) GEOComposedWaypoint *destination; // @synthesize destination=_destination;
@property(readonly, nonatomic) GEOComposedWaypoint *origin; // @synthesize origin=_origin;
@property(retain, nonatomic) NSData *sessionState; // @synthesize sessionState=_sessionState;
@property(readonly, nonatomic) RouteSet *activeRouteSet; // @synthesize activeRouteSet=_activeRouteSet;
@property(nonatomic) int routeState; // @synthesize routeState=_routeState;
- (void).cxx_destruct;
- (void)stopTrace;
- (void)_willEnterForeground:(id)arg1;
- (void)_didEnterBackground:(id)arg1;
- (void)_removeObserving;
- (void)_addObserving;
- (void)dispatchWrite:(CDUnknownBlockType)arg1;
- (_Bool)_requestDirectionsFromTracePlayer:(id)arg1 request:(id)arg2 isReroute:(_Bool)arg3 finishedHandler:(CDUnknownBlockType)arg4 errorHandler:(CDUnknownBlockType)arg5;
@property(readonly, nonatomic) id <RouteManagerTestingDelegate> testingDelegate;
- (void)_handleRequesterError:(id)arg1 directionsError:(id)arg2;
- (void)_handleRequesterResponse:(id)arg1 ticket:(id)arg2;
- (id)routeSetForGEORouteSet:(id)arg1;
- (void)setActiveRouteSet:(id)arg1;
- (void)addedRoutesToRouteSet:(id)arg1;
- (void)_cacheRouteResponse:(id)arg1 forTicket:(id)arg2;
- (void)handleRequestFromCache:(id)arg1 routeSet:(id)arg2 failureHandler:(CDUnknownBlockType)arg3;
- (id)refineErrorFromServerError:(id)arg1 directionsError:(id)arg2;
- (void)handleError:(id)arg1 directionsError:(id)arg2 forTicket:(id)arg3;
- (void)handleResponse:(id)arg1 routeSet:(id)arg2 forTicket:(id)arg3;
- (void)reset;
- (void)cancelRoute;
- (CDUnknownBlockType)_loadingRequestNetworkActivityHandler;
- (_Bool)_tryLoadingResponseFromTraceFileWithTicket:(id)arg1 routeSet:(id)arg2;
- (void)_addTimepointIfNeededToRouteAttributes:(id)arg1;
- (id)_requestTicketWithWaypoints:(id)arg1 routeHandle:(id)arg2 isResumeRoute:(_Bool)arg3 maxRouteCount:(unsigned int)arg4;
- (id)_currentLocation;
- (void)_setupFeedbackIfNeeded;
- (void)_setupTraceRecorderIfNeededWithErrorHandler:(CDUnknownBlockType)arg1;
- (void)loadNewRouteSetWithMaxRoutes:(unsigned int)arg1 useCache:(_Bool)arg2 isResumeRoute:(_Bool)arg3 timepoint:(struct GEOTimepoint)arg4 errorHandler:(CDUnknownBlockType)arg5;
- (id)_defaultRouteAttributesForNavigation:(_Bool)arg1;
- (void)recordCurrentRoute;
@property(retain, nonatomic) Route *currentRoute;
- (id)currentGeoRoute;
- (void)setDelegate:(id)arg1;
- (void)dealloc;
- (id)initWithDirectionsFrom:(id)arg1 to:(id)arg2 mapRegion:(id)arg3 type:(int)arg4 fromCurrentLocation:(_Bool)arg5 routeHandle:(id)arg6 transitRouteOptions:(id)arg7 withFeedback:(id)arg8 traits:(id)arg9;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

